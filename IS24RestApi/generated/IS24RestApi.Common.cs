//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.31.0.
namespace IS24RestApi.Common
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para xml:lang="de-DE">Definiert eine Informations- oder Fehlermeldung.</para>
    /// <para xml:lang="en">Defines an information or error message.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Message", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Message
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Eindeutiger Kennzeichner der die Mitteilung identifiziert.</para>
        /// <para xml:lang="en">An unique code identifying the message.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("messageCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MessageCode MessageCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Informations- oder eine Fehlermeldung.</para>
        /// <para xml:lang="en">An information or error message.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("message", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string MessageProperty { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">id von der erstellten bzw. gelöschten Instanz.</para>
        /// <para xml:lang="en">id of created/deleted entyty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Id { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageCode", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum MessageCode
    {
        
        /// <summary>
        /// <para xml:lang="de">Die Resource wurde erfolgreich angelegt (beinhaltet Name und Id der Resource).</para>
        /// <para xml:lang="en">Resource was successful created (includes name and id of the resource).</para>
        /// </summary>
        MESSAGE_RESOURCE_CREATED,
        
        /// <summary>
        /// <para xml:lang="de">Die Resource wurde erfolgreich aktualisiert (beinhaltet Name und Id der Resource).</para>
        /// <para xml:lang="en">Resource was successful updated (includes name and id of the resource).</para>
        /// </summary>
        MESSAGE_RESOURCE_UPDATED,
        
        /// <summary>
        /// <para xml:lang="de">Die Resource wurde erfolgreich gelöscht (beinhaltet Name und Id der Resource).</para>
        /// <para xml:lang="en">Resource was successful deleted (includes name and id of the resource).</para>
        /// </summary>
        MESSAGE_RESOURCE_DELETED,
        
        /// <summary>
        /// <para xml:lang="de">Die Operation wurde erfolgreich ausgeführt.</para>
        /// <para xml:lang="en">Operation successful executed.</para>
        /// </summary>
        MESSAGE_OPERATION_SUCCESSFUL,
        
        /// <summary>
        /// <para xml:lang="de">Die Operation wurde erfolgreich ausgeführt.</para>
        /// <para xml:lang="en">Operation successful executed.</para>
        /// </summary>
        ERROR_COMMON_HEADER_PARAMETER_VALIDATION_FAILED,
        
        /// <summary>
        /// <para xml:lang="de">Der Request ist nur im Kontext einer bestimmten Resource gültig (beinhaltet Name der benötigten Resource).</para>
        /// <para xml:lang="en">Request is only valid within the context of an specific resource (includes name of the required resource).</para>
        /// </summary>
        ERROR_COMMON_RESOURCE_REQUIRED,
        
        /// <summary>
        /// <para xml:lang="de">Eine Operation (z.B. auf einer Ressource) führte zu einem Konflikt.</para>
        /// <para xml:lang="en">A conflict occured during execution of an operation (e.g. on a resource).</para>
        /// </summary>
        ERROR_COMMON_REQUEST_CONFLICT,
        
        /// <summary>
        /// <para xml:lang="de">Keine Authorisierung fÃ¼r die gewÃ¼nschte Aktion.</para>
        /// <para xml:lang="en">No authorization for the requested operation.</para>
        /// </summary>
        ERROR_COMMON_AUTHENTICATION_REQUIRED,
        
        /// <summary>
        /// <para xml:lang="de">Der Nonce für OAuth ist abgelaufen.</para>
        /// <para xml:lang="en">The OAuth Nonce has expired.</para>
        /// </summary>
        ERROR_COMMON_AUTHENTICATION_OAUTH_NONCE_EXPIRED,
        
        /// <summary>
        /// <para xml:lang="de">Keine Authorisierung für die gewünschte Aktion.</para>
        /// <para xml:lang="en">No authorization for the requested operation.</para>
        /// </summary>
        ERROR_COMMON_ACCESS_DENIED,
        
        /// <summary>
        /// <para xml:lang="de">Schema-Validierung ist fehlgeschlagen. (enthält Beschreibung des Fehlers)</para>
        /// <para xml:lang="en">Validation according the schema failed (includes the description of the failure).</para>
        /// </summary>
        ERROR_COMMON_SCHEMA_VALIDATION_FAILED,
        
        /// <summary>
        /// <para xml:lang="de">Ein benötigter Parameter fehlt in der Anfrage (enthält den Namen des Parameters).</para>
        /// <para xml:lang="en">A required parameter is missing in the request (contains the name of the parameter).</para>
        /// </summary>
        ERROR_COMMON_URL_PARAMETER_REQUIRED,
        
        /// <summary>
        /// <para xml:lang="de">Ein Parameter in der Anfrage hat einen ungültigen Wert (enthält den Names des Parameters und den Wert).</para>
        /// <para xml:lang="en">At least one request parameter contains an invalid value (contains the name and the value of the parameter).</para>
        /// </summary>
        ERROR_COMMON_URL_PARAMETER_VALIDATION_FAILED,
        
        /// <summary>
        /// <para xml:lang="de">Mehrere Parameter sind nicht erlaubt.</para>
        /// <para xml:lang="en">Multiple parameters are not allowed.</para>
        /// </summary>
        ERROR_COMMON_URL_MULTIPLE_PARAMETERS_NOT_ALLOWED,
        
        /// <summary>
        /// <para xml:lang="de">Ein Parameter in der Anfrage wird nicht unterstützt (enthält den Namen des Parameters).</para>
        /// <para xml:lang="en">A request parameter is not supported (contains the name of the parameter).</para>
        /// </summary>
        ERROR_COMMON_URL_PARAMETER_NOT_SUPPORTED,
        
        /// <summary>
        /// <para xml:lang="de">HTTP 501: Die Methode ist noch nicht implementiert.</para>
        /// <para xml:lang="en">HTTP 501: The method is not yet implemented.</para>
        /// </summary>
        ERROR_COMMON_NOT_IMPLEMENTED,
        
        /// <summary>
        /// <para xml:lang="de">HTTP 503: Der Server ist überlastet</para>
        /// <para xml:lang="en">HTTP 503: Service Unavailable</para>
        /// </summary>
        ERROR_COMMON_SERVICE_UNAVAILABLE,
        
        /// <summary>
        /// <para xml:lang="de">HTTP 500: Interner Server Fehler</para>
        /// <para xml:lang="en">HTTP 500: Internal Server Error</para>
        /// </summary>
        ERROR_COMMON_INTERNAL_SERVER_ERROR,
        
        /// <summary>
        /// <para xml:lang="de">HTTP 422: Entität konnte nicht verarbeitet werden</para>
        /// <para xml:lang="en">HTTP 422: Unprocessable Entity</para>
        /// </summary>
        ERROR_COMMON_UNPROCESSABLE_ENTITY,
        
        /// <summary>
        /// <para xml:lang="de">HTTP 500: Interner Server Fehler mit Details</para>
        /// <para xml:lang="en">HTTP 500: Internal Server Error with Details</para>
        /// </summary>
        ERROR_COMMON_INTERNAL_SERVER_ERROR_WITH_DETAILS,
        
        /// <summary>
        /// <para xml:lang="de">Die Resource wurde nicht gefunden.</para>
        /// <para xml:lang="en">Resource was not found.</para>
        /// </summary>
        ERROR_COMMON_RESOURCE_NOT_FOUND,
        
        /// <summary>
        /// <para xml:lang="de">Die Methode ist für diese Ressource nicht erlaubt.</para>
        /// <para xml:lang="en">Method not allowed for this resource.</para>
        /// </summary>
        ERROR_COMMON_METHOD_NOT_ALLOWED,
        
        /// <summary>
        /// <para xml:lang="de">Der Accept-Type wird nicht unterstüzt.</para>
        /// <para xml:lang="en">Accept type not applicable. </para>
        /// </summary>
        ERROR_COMMON_ACCEPT_TYPE_NOT_APPLICABLE,
        
        /// <summary>
        /// <para xml:lang="de">Der Media-Type wird nicht unterstüzt.</para>
        /// <para xml:lang="en">Media type is not supported.</para>
        /// </summary>
        ERROR_COMMON_MEDIA_TYPE_UNSUPPORTED,
        
        /// <summary>
        /// <para xml:lang="de">Der HTTP Request ist ungültig (überprüfen Sie die Url oder den body content).</para>
        /// <para xml:lang="en">The http request is invalid (check the url or body content).</para>
        /// </summary>
        ERROR_COMMON_BAD_REQUEST,
        
        /// <summary>
        /// <para xml:lang="de">Die Resource wird nicht unterstützt im angeforderten Kontext (beinhaltet Name der unberechtigten und nicht verfügbaren Resource).</para>
        /// <para xml:lang="en">The resource is not supported within the context of the request (includes name of the unauthorized and unavailable resource e.g. savedsearch is only for searchers).</para>
        /// </summary>
        ERROR_RESOURCE_NOT_SUPPORTED,
        
        /// <summary>
        /// <para xml:lang="de">Die Resource wurde nicht gefunden (beinhaltet Name und Id der Resource).</para>
        /// <para xml:lang="en">Resource was not found (includes name and id of the resource).</para>
        /// </summary>
        ERROR_RESOURCE_NOT_FOUND,
        
        /// <summary>
        /// <para xml:lang="de">Die Resource wurde fÃ¼r mindestens einen der Parameter nicht gefunden.</para>
        /// <para xml:lang="en">Resource was not found for at least one of the given parameters.</para>
        /// </summary>
        ERROR_RESOURCE_NOT_FOUND_FOR_MULTIPLE_PARAMETERS,
        
        /// <summary>
        /// <para xml:lang="de">Nicht alle Werte für die Resource sind gültig (beinhaltet Beschreibung des Fehlers).</para>
        /// <para xml:lang="en">Not all of the data for the resource are valid (includes the description of the failure).</para>
        /// </summary>
        ERROR_RESOURCE_VALIDATION,
        
        /// <summary>
        /// <para xml:lang="de">Die angefragten Daten wurden nicht gefunden.</para>
        /// <para xml:lang="en">The requested data was not found.</para>
        /// </summary>
        ERROR_REQUESTED_DATA_NOT_FOUND,
        
        /// <summary>
        /// <para xml:lang="de">Unerwarteterweise ist die angefragte Resource nicht eindeutig.</para>
        /// <para xml:lang="en">The requested resource is not unique, but is expected to be unique.</para>
        /// </summary>
        ERROR_RESOURCE_NOT_UNIQUE,
        
        /// <summary>
        /// <para xml:lang="de">Die angeforderte Ressource wird nicht länger bereitgestellt und wurde dauerhaft entfernt..</para>
        /// <para xml:lang="en">resource requested is no longer available and will not be available again.</para>
        /// </summary>
        ERROR_RESOURCE_NO_LONGER_AVAILABLE,
        
        /// <summary>
        /// <para xml:lang="de">Die DB is nicht erreichbar.</para>
        /// <para xml:lang="en">The DB ist not reachable.</para>
        /// </summary>
        ERROR_DB_NOT_AVAILABLE,
        
        /// <summary>
        /// <para xml:lang="de">Die Kontaktdaten sind unvollständig angegeben.</para>
        /// <para xml:lang="en">Contact data is missing some attributes.</para>
        /// </summary>
        ERROR_CONTACT_DETAILS_MISSING,
        
        /// <summary>
        /// <para xml:lang="de">Die angegebenen Koordinaten sind ungültig.</para>
        /// <para xml:lang="en">The given coordinates are invalid.</para>
        /// </summary>
        ERROR_INVALID_COORDINATES,
        
        /// <summary>
        /// <para xml:lang="de">Die Geocodierung war nicht erfolgreich.</para>
        /// <para xml:lang="en">The geocoding was not successful.</para>
        /// </summary>
        ERROR_GEOCODING_FAILED,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Repräsentiert eine Sequenz von Informations- oder Fehlermeldungen.</para>
    /// <para xml:lang="en">Represents a sequence of information or error messages.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("messages", Namespace="http://rest.immobilienscout24.de/schema/common/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("messages", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public partial class Messages
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Message> _message;
        
        /// <summary>
        /// <para xml:lang="de-DE">Repräsentiert eine Informations- oder Fehlermeldung.</para>
        /// <para xml:lang="en">Represents an information or error message.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("message", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<Message> Message
        {
            get
            {
                return this._message;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Messages" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Messages" /> class.</para>
        /// </summary>
        public Messages()
        {
            this._message = new System.Collections.ObjectModel.Collection<Message>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">To be done</para>
    /// <para xml:lang="en">An entry in strict format</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StrictEntry", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.ShortList.ShortlistStrictEntry))]
    public partial class StrictEntry : IReference
    {
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("wgs84Coordinate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Wgs84Coordinate Wgs84Coordinate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">ob die Koordinaten hausnummergenau sind</para>
        /// <para xml:lang="en">whether precision of the coordinates is of the level of house
        ///                        number
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("preciseHouseNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool PreciseHouseNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PreciseHouseNumber-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreciseHouseNumber property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PreciseHouseNumberValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">ob die Koordinaten hausnummergenau sind</para>
        /// <para xml:lang="en">whether precision of the coordinates is of the level of house
        ///                        number
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> PreciseHouseNumber
        {
            get
            {
                if (this.PreciseHouseNumberValueSpecified)
                {
                    return this.PreciseHouseNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PreciseHouseNumberValue = value.GetValueOrDefault();
                this.PreciseHouseNumberValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">die Entität nach dem Datum im Request eingestellt wurde.
        ///                    </para>
        /// <para xml:lang="en">the entity was published after the requested date</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("publishedAfterRequestedDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool PublishedAfterRequestedDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishedAfterRequestedDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublishedAfterRequestedDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PublishedAfterRequestedDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">die Entität nach dem Datum im Request eingestellt wurde.
        ///                    </para>
        /// <para xml:lang="en">the entity was published after the requested date</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> PublishedAfterRequestedDate
        {
            get
            {
                if (this.PublishedAfterRequestedDateValueSpecified)
                {
                    return this.PublishedAfterRequestedDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PublishedAfterRequestedDateValue = value.GetValueOrDefault();
                this.PublishedAfterRequestedDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lesbarer Name des Elements (wenn vorhanden).</para>
        /// <para xml:lang="en">Human readable name of the entity (if it exists).</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("label", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Label { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("modification", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime ModificationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Modification-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Modification property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ModificationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Modification
        {
            get
            {
                if (this.ModificationValueSpecified)
                {
                    return this.ModificationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ModificationValue = value.GetValueOrDefault();
                this.ModificationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("creation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime CreationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Creation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Creation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CreationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Creation
        {
            get
            {
                if (this.CreationValueSpecified)
                {
                    return this.CreationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationValue = value.GetValueOrDefault();
                this.CreationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("publishDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime PublishDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublishDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PublishDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> PublishDate
        {
            get
            {
                if (this.PublishDateValueSpecified)
                {
                    return this.PublishDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PublishDateValue = value.GetValueOrDefault();
                this.PublishDateValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Geoinformationen der Immobilie.</para>
    /// <para xml:lang="en">Geo information of the real estate.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Wgs84Coordinate", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Wgs84Coordinate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Latitude (Y-Wert) der WGS84-Koordinate (GPS).</para>
        /// <para xml:lang="en">Latitude (Y-Value) of the WGS84 coordinate (GPS).
        ///                    </para>
        /// <para xml:lang="en">Minimum inclusive value: -90.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 90.0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("latitude", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double Latitude { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Longitude (X-Wert) der WGS84-Koordinate (GPS).</para>
        /// <para xml:lang="en">Longitude (X-Value) of the WGS84 coordinate (GPS).
        ///                    </para>
        /// <para xml:lang="en">Minimum inclusive value: -180.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 180.0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("longitude", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double Longitude { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Bündelt den xlink, id, label und das Datum der letzten Änderung welche
    ///                als Referenz von Entitäten benutzt werden.
    ///            </para>
    /// <para xml:lang="en">Bundles xlink, id, label and last modified date which are used for
    ///                referencing entities.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IReference
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        string Href
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        System.Nullable<long> Id
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lesbarer Name des Elements (wenn vorhanden).</para>
        /// <para xml:lang="en">Human readable name of the entity (if it exists).</para>
        /// </summary>
        string Label
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        System.Nullable<System.DateTime> Modification
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        System.Nullable<System.DateTime> Creation
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        System.Nullable<System.DateTime> PublishDate
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Allgemeine Elemente für alle Immobilienarten.</para>
    /// <para xml:lang="en">General elements for all real estates within the search context.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AbstractRealEstateForList", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AbstractRealEstate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.ApartmentBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.ApartmentBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.ApartmentBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.ApartmentRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.ApartmentRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.ApartmentRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.AssistedLiving))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.AssistedLiving))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.AssistedLiving))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.CompulsoryAuction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.CompulsoryAuction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.CompulsoryAuction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.ExposeRealEstate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.FlatShareRoom))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.FlatShareRoom))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.FlatShareRoom))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.GarageBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.GarageBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.GarageBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.GarageRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.GarageRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.GarageRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.Gastronomy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.Gastronomy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.Gastronomy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.HouseBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.HouseBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.HouseBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.HouseRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.HouseRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.HouseRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.HouseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.HouseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.HouseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.Industry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.Industry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.Industry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.Investment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.Investment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.InvestmentProperty))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.LivingBuySite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.LivingBuySite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.LivingBuySite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.LivingRentSite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.LivingRentSite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.LivingRentSite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferApartmentBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferApartmentRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferAssistedLiving))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferCompulsoryAuction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferFlatShareRoom))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferGarageBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferGarageRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferGastronomy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferHouseBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferHouseRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferHouseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferIndustry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferInvestment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferLivingBuySite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferLivingRentSite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferOffice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferRealEstateForList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferSeniorCare))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferShortTermAccommodation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferSpecialPurpose))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferStore))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.ListElement.OfferTradeSite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.Office))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.Office))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.Office))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.RealEstate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.RealEstateForList))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.SeniorCare))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.SeniorCare))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.SeniorCare))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.ShortTermAccommodation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.ShortTermAccommodation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.ShortTermAccommodation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.SpecialPurpose))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.SpecialPurpose))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.SpecialPurpose))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.Store))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.Store))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.Store))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.TradeSite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.TradeSite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.TradeSite))]
    public partial class AbstractRealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">
        ///                        Repräsentiert eine kundenspezifische Referenz einer Immobilie.
        ///                        Der Kennzeichner muss eineindeutig in Verbindung mit der Kundennummer sein.
        ///                    </para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">
        ///                        Represents a customer specific identifier for the real estate.
        ///                        This identifier is unique in combination with the customer id.
        ///                    </para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("externalId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExternalId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Überschrift/Titel des Angebots</para>
        /// <para xml:lang="en">Heading of the offering</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("title", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Title { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Erstelldatum des Angebots</para>
        /// <para xml:lang="en">The date of issue of the offering</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("creationDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime CreationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CreationDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CreationDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Erstelldatum des Angebots</para>
        /// <para xml:lang="en">The date of issue of the offering</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> CreationDate
        {
            get
            {
                if (this.CreationDateValueSpecified)
                {
                    return this.CreationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationDateValue = value.GetValueOrDefault();
                this.CreationDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letztes Änderungsdatum</para>
        /// <para xml:lang="en">The date of the last modification on the offering</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("lastModificationDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime LastModificationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastModificationDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastModificationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LastModificationDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letztes Änderungsdatum</para>
        /// <para xml:lang="en">The date of the last modification on the offering</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> LastModificationDate
        {
            get
            {
                if (this.LastModificationDateValueSpecified)
                {
                    return this.LastModificationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastModificationDateValue = value.GetValueOrDefault();
                this.LastModificationDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Adresse der Immobilie</para>
        /// <para xml:lang="en">The address of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("address", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Wgs84Address Address { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Enthält die Informationen für die API Suche einer Immobilie.
        ///                    </para>
        /// <para xml:lang="en">Holds the information for the API search of a real estate.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("apiSearchData", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ApiSearchData ApiSearchData { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Veröffentlichungsstatus einer Immobilie.</para>
        /// <para xml:lang="en">Publication state of a real Estate.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("realEstateState", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RealEstateState RealEstateStateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RealEstateState-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RealEstateState property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool RealEstateStateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Veröffentlichungsstatus einer Immobilie.</para>
        /// <para xml:lang="en">Publication state of a real Estate.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<RealEstateState> RealEstateState
        {
            get
            {
                if (this.RealEstateStateValueSpecified)
                {
                    return this.RealEstateStateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RealEstateStateValue = value.GetValueOrDefault();
                this.RealEstateStateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">IS24 ID der Immobilie</para>
        /// <para xml:lang="en">IS24 ID of the real Estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">IS24 ID der Immobilie</para>
        /// <para xml:lang="en">IS24 ID of the real Estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Adresse erweitert mit WGS84 Geokoordinaten.</para>
    /// <para xml:lang="en">Base address enriched with WGS84 geocoordinates.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Wgs84Address", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Wgs84Address : Address
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezirk oder Stadtteil der Adresse.</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">District or quarter of this address.</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("quarter", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Quarter { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("wgs84Coordinate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Wgs84Coordinate Wgs84Coordinate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">ob die Koordinaten hausnummergenau sind
        ///                            </para>
        /// <para xml:lang="en">whether precision of the coordinates is of the level of
        ///                                house number
        ///                            </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("preciseHouseNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool PreciseHouseNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PreciseHouseNumber-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PreciseHouseNumber property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PreciseHouseNumberValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">ob die Koordinaten hausnummergenau sind
        ///                            </para>
        /// <para xml:lang="en">whether precision of the coordinates is of the level of
        ///                                house number
        ///                            </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> PreciseHouseNumber
        {
            get
            {
                if (this.PreciseHouseNumberValueSpecified)
                {
                    return this.PreciseHouseNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PreciseHouseNumberValue = value.GetValueOrDefault();
                this.PreciseHouseNumberValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("geoHierarchy", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GeoHierarchy GeoHierarchy { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("description", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Wgs84AddressDescription Description { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Definition der Basisfelder einer Adresse.</para>
    /// <para xml:lang="de-DE">Adresse</para>
    /// <para xml:lang="en">Definition of base address data fields.</para>
    /// <para xml:lang="en">address</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Address", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("address", Namespace="http://rest.immobilienscout24.de/schema/search/expose/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Wgs84Address))]
    public partial class Address
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Straße ohne Hausnummer. Pflichtfeld für Deutschland,
        ///                        optional für Auslandsimmobilien.</para>
        /// <para xml:lang="en">Street without house number. Mandatory for germany, optional
        ///                        for foreign real estates.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("street", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Street { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Hausnummer. Pflichtfeld für Deutschland, optional für
        ///                        Auslandsimmobilien. Weiterhin optional für LIVING_RENT_SITE,
        ///                        LIVING_BUY_SITE and TRADE_SITE</para>
        /// <para xml:lang="en">House number. Mandatory for germany, optional for foreign
        ///                        real estates. Also optional for LIVING_RENT_SITE, LIVING_BUY_SITE and TRADE_SITE</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(30)]
        [System.Xml.Serialization.XmlElementAttribute("houseNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string HouseNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Postleitzahl</para>
        /// <para xml:lang="en">zip code</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("postcode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Postcode { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Stadt</para>
        /// <para xml:lang="en">city</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("city", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string City { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nur für Ortsangaben (von Immobilien) außerhalb
        ///                            Deutschlands: Land und Region.</para>
        /// <para xml:lang="en">Only for locations (of real estates) outside germany:
        ///                            country and region.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("internationalCountryRegion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CountryRegion InternationalCountryRegion { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CountryRegion", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryRegion
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Der ISO-3 Ländercode.</para>
        /// <para xml:lang="en">The ISO-3 countrycode.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("country", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CountryCode Country { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Deutscher Name der Region des Landes. Mögliche Namen
        ///                            sind über die Online-API-Dokumentation abrufbar.</para>
        /// <para xml:lang="en">German name of the region (province, federal state) of the country.
        ///                            Valid names are published (CSV-file) by is24, see online API documentation.</para>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(int.MaxValue, MinimumLength=1)]
        [System.Xml.Serialization.XmlElementAttribute("region", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Region { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Auflistung der unterstuetzten ISO-3-Landescodes (Laenderkennzeichnung)
    ///            </para>
    /// <para xml:lang="en">Enumeration of the supported ISO 3 country codes</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CountryCode", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum CountryCode
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Aruba</para>
        /// <para xml:lang="en">Aruba</para>
        /// </summary>
        ABW,
        
        /// <summary>
        /// <para xml:lang="de-DE">Afghanistan</para>
        /// <para xml:lang="en">Afghanistan</para>
        /// </summary>
        AFG,
        
        /// <summary>
        /// <para xml:lang="de-DE">Angola</para>
        /// <para xml:lang="en">Angola</para>
        /// </summary>
        AGO,
        
        /// <summary>
        /// <para xml:lang="de-DE">Anguilla</para>
        /// <para xml:lang="en">Anguilla</para>
        /// </summary>
        AIA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Albanien</para>
        /// <para xml:lang="en">Albania</para>
        /// </summary>
        ALB,
        
        /// <summary>
        /// <para xml:lang="de-DE">Andorra</para>
        /// <para xml:lang="en">Andorra</para>
        /// </summary>
        AND,
        
        /// <summary>
        /// <para xml:lang="de-DE">Niederlaendische Antillen</para>
        /// <para xml:lang="en">Netherlands Antilles</para>
        /// </summary>
        ANT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Vereinigte Arabische Emirate</para>
        /// <para xml:lang="en">United Arab Emirates</para>
        /// </summary>
        ARE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Argentinien</para>
        /// <para xml:lang="en">Argentina</para>
        /// </summary>
        ARG,
        
        /// <summary>
        /// <para xml:lang="de-DE">Armenien</para>
        /// <para xml:lang="en">Armenia</para>
        /// </summary>
        ARM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Amerikanisch-Samoa</para>
        /// <para xml:lang="en">American Samoa</para>
        /// </summary>
        ASM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Antarktis (Sonderstatus durch Antarktis-Vertrag)
        ///                    </para>
        /// </summary>
        ATA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Antigua und Barbuda</para>
        /// <para xml:lang="en">Antigua and Barbuda</para>
        /// </summary>
        ATG,
        
        /// <summary>
        /// <para xml:lang="de-DE">Australien</para>
        /// <para xml:lang="en">Australia</para>
        /// </summary>
        AUS,
        
        /// <summary>
        /// <para xml:lang="de-DE">Oesterreich</para>
        /// <para xml:lang="en">Austria</para>
        /// </summary>
        AUT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Aserbaidschan</para>
        /// <para xml:lang="en">Azerbaijan</para>
        /// </summary>
        AZE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Burundi</para>
        /// <para xml:lang="en">Burundi</para>
        /// </summary>
        BDI,
        
        /// <summary>
        /// <para xml:lang="de-DE">Belgien</para>
        /// <para xml:lang="en">Belgium</para>
        /// </summary>
        BEL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Benin</para>
        /// <para xml:lang="en">Benin</para>
        /// </summary>
        BEN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Burkina Faso</para>
        /// <para xml:lang="en">Burkina Faso</para>
        /// </summary>
        BFA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bangladesch</para>
        /// <para xml:lang="en">Bangladesh</para>
        /// </summary>
        BGD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bulgarien</para>
        /// <para xml:lang="en">Bulgaria</para>
        /// </summary>
        BGR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bahrain</para>
        /// <para xml:lang="en">Bahrain</para>
        /// </summary>
        BHR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bahamas</para>
        /// <para xml:lang="en">Bahamas</para>
        /// </summary>
        BHS,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bosnien und Herzegowina</para>
        /// <para xml:lang="en">Bosnia and Herzegowina</para>
        /// </summary>
        BIH,
        
        /// <summary>
        /// <para xml:lang="de-DE">Belarus (Weissrussland; BYS)</para>
        /// <para xml:lang="en">Belarus (BYS)</para>
        /// </summary>
        BLR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Belize</para>
        /// <para xml:lang="en">Belize</para>
        /// </summary>
        BLZ,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bermuda</para>
        /// <para xml:lang="en">Bermuda</para>
        /// </summary>
        BMU,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bolivien</para>
        /// <para xml:lang="en">Plurinational State of Bolivia</para>
        /// </summary>
        BOL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Brasilien</para>
        /// <para xml:lang="en">Brazil</para>
        /// </summary>
        BRA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Barbados</para>
        /// <para xml:lang="en">Barbados</para>
        /// </summary>
        BRB,
        
        /// <summary>
        /// <para xml:lang="de-DE">Brunei Darussalam</para>
        /// <para xml:lang="en">Brunei Darussalam</para>
        /// </summary>
        BRN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bhutan</para>
        /// <para xml:lang="en">Bhutan</para>
        /// </summary>
        BTN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Botswana</para>
        /// <para xml:lang="en">Botswana</para>
        /// </summary>
        BWA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Zentralafrikanische Republik</para>
        /// <para xml:lang="en">Central African Rupublic</para>
        /// </summary>
        CAF,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kanada</para>
        /// <para xml:lang="en">Canada</para>
        /// </summary>
        CAN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kokosinseln</para>
        /// <para xml:lang="en">Cocos Islands (Keeling Islands)</para>
        /// </summary>
        CCK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Schweiz (Confoederatio Helvetica)</para>
        /// <para xml:lang="en">Switzerland</para>
        /// </summary>
        CHE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Chile</para>
        /// <para xml:lang="en">Chile</para>
        /// </summary>
        CHL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Volksrepublik China</para>
        /// <para xml:lang="en">China</para>
        /// </summary>
        CHN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Cote d'Ivoire (Elfenbeinküste)</para>
        /// <para xml:lang="en">Cote d'Ivoire</para>
        /// </summary>
        CIV,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kamerun</para>
        /// <para xml:lang="en">Cameroon</para>
        /// </summary>
        CMR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Demokratische Republik Kongo (ehem. Zaire)</para>
        /// <para xml:lang="en">The Democratic Republic of the Congo</para>
        /// </summary>
        COD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Republik Kongo</para>
        /// <para xml:lang="en">Congo</para>
        /// </summary>
        COG,
        
        /// <summary>
        /// <para xml:lang="de-DE">Cookinseln</para>
        /// <para xml:lang="en">Cook Islands</para>
        /// </summary>
        COK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kolumbien</para>
        /// <para xml:lang="en">Colombia</para>
        /// </summary>
        COL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Komoren</para>
        /// <para xml:lang="en">Comoros</para>
        /// </summary>
        COM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kap Verde</para>
        /// <para xml:lang="en">Cape Verde</para>
        /// </summary>
        CPV,
        
        /// <summary>
        /// <para xml:lang="de-DE">Costa Rica</para>
        /// <para xml:lang="en">Costa Rica</para>
        /// </summary>
        CRI,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kuba</para>
        /// <para xml:lang="en">Cuba</para>
        /// </summary>
        CUB,
        
        /// <summary>
        /// <para xml:lang="de-DE">Weihnachtsinseln</para>
        /// <para xml:lang="en">Christmas Island</para>
        /// </summary>
        CXR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaimaninseln</para>
        /// <para xml:lang="en">Cayman Islands</para>
        /// </summary>
        CYM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Zypern</para>
        /// <para xml:lang="en">Cyprus</para>
        /// </summary>
        CYP,
        
        /// <summary>
        /// <para xml:lang="de-DE">Tschechische Republik</para>
        /// <para xml:lang="en">Czech Republik</para>
        /// </summary>
        CZE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Deutschland</para>
        /// <para xml:lang="en">Germany</para>
        /// </summary>
        DEU,
        
        /// <summary>
        /// <para xml:lang="de-DE">Dschibuti</para>
        /// <para xml:lang="en">Djibouti</para>
        /// </summary>
        DJI,
        
        /// <summary>
        /// <para xml:lang="de-DE">Dominica</para>
        /// <para xml:lang="en">Dominica</para>
        /// </summary>
        DMA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Daenemark</para>
        /// <para xml:lang="en">Denmark</para>
        /// </summary>
        DNK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Dominikanische Republik</para>
        /// <para xml:lang="en">Dominican Republik</para>
        /// </summary>
        DOM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Algerien</para>
        /// <para xml:lang="en">Algeria</para>
        /// </summary>
        DZA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ecuador</para>
        /// <para xml:lang="en">Ecuador</para>
        /// </summary>
        ECU,
        
        /// <summary>
        /// <para xml:lang="de-DE">Aegypten</para>
        /// <para xml:lang="en">Egypt</para>
        /// </summary>
        EGY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Eritrea</para>
        /// <para xml:lang="en">Eritrea</para>
        /// </summary>
        ERI,
        
        /// <summary>
        /// <para xml:lang="de-DE">Westsahara</para>
        /// <para xml:lang="en">Western Sahara</para>
        /// </summary>
        ESH,
        
        /// <summary>
        /// <para xml:lang="de-DE">Spanien</para>
        /// <para xml:lang="en">Spain</para>
        /// </summary>
        ESP,
        
        /// <summary>
        /// <para xml:lang="de-DE">Estland</para>
        /// <para xml:lang="en">Estonia</para>
        /// </summary>
        EST,
        
        /// <summary>
        /// <para xml:lang="de-DE">Aethiopien</para>
        /// <para xml:lang="en">Ethiopia</para>
        /// </summary>
        ETH,
        
        /// <summary>
        /// <para xml:lang="de-DE">Finnland</para>
        /// <para xml:lang="en">Finland</para>
        /// </summary>
        FIN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Fidschi</para>
        /// <para xml:lang="en">Fiji</para>
        /// </summary>
        FJI,
        
        /// <summary>
        /// <para xml:lang="de-DE">Falklandinseln</para>
        /// <para xml:lang="en">Falkland Islands (Malvinas)</para>
        /// </summary>
        FLK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Frankreich</para>
        /// <para xml:lang="en">France</para>
        /// </summary>
        FRA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Faroer</para>
        /// <para xml:lang="en">Faroe Islands</para>
        /// </summary>
        FRO,
        
        /// <summary>
        /// <para xml:lang="de-DE">Mikronesien</para>
        /// <para xml:lang="en">Federated States of Micronesia</para>
        /// </summary>
        FSM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gabun</para>
        /// <para xml:lang="en">Gabon</para>
        /// </summary>
        GAB,
        
        /// <summary>
        /// <para xml:lang="de-DE">Vereinigtes Koenigreich Grossbritannien und Nordirland
        ///                    </para>
        /// </summary>
        GBR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Georgien</para>
        /// <para xml:lang="en">Georgia</para>
        /// </summary>
        GEO,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ghana</para>
        /// <para xml:lang="en">Ghana</para>
        /// </summary>
        GHA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gibraltar</para>
        /// <para xml:lang="en">Gibraltar</para>
        /// </summary>
        GIB,
        
        /// <summary>
        /// <para xml:lang="de-DE">Guinea</para>
        /// <para xml:lang="en">Guinea</para>
        /// </summary>
        GIN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Guadeloupe</para>
        /// <para xml:lang="en">Guadeloupe</para>
        /// </summary>
        GLP,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gambia</para>
        /// <para xml:lang="en">Gambia</para>
        /// </summary>
        GMB,
        
        /// <summary>
        /// <para xml:lang="de-DE">Guinea-Bissau</para>
        /// <para xml:lang="en">Guinea-Bissau</para>
        /// </summary>
        GNB,
        
        /// <summary>
        /// <para xml:lang="de-DE">Aequatorialguinea</para>
        /// <para xml:lang="en">Equatorial Guinea</para>
        /// </summary>
        GNQ,
        
        /// <summary>
        /// <para xml:lang="de-DE">Griechenland</para>
        /// <para xml:lang="en">Greece</para>
        /// </summary>
        GRC,
        
        /// <summary>
        /// <para xml:lang="de-DE">Grenada</para>
        /// <para xml:lang="en">Grenada</para>
        /// </summary>
        GRD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Groenland</para>
        /// <para xml:lang="en">Greenland</para>
        /// </summary>
        GRL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Guatemala</para>
        /// <para xml:lang="en">Guatemala</para>
        /// </summary>
        GTM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Franzoesisch-Guayana</para>
        /// <para xml:lang="en">French Guiana</para>
        /// </summary>
        GUF,
        
        /// <summary>
        /// <para xml:lang="de-DE">Guam</para>
        /// <para xml:lang="en">Guam</para>
        /// </summary>
        GUM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Guyana</para>
        /// <para xml:lang="en">Guyana</para>
        /// </summary>
        GUY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Hongkong</para>
        /// <para xml:lang="en">Hong Kong</para>
        /// </summary>
        HKG,
        
        /// <summary>
        /// <para xml:lang="de-DE">Heard und McDonaldinseln</para>
        /// <para xml:lang="en">Heard Island and McDonald Islands</para>
        /// </summary>
        HMD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Honduras</para>
        /// <para xml:lang="en">Honduras</para>
        /// </summary>
        HND,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kroatien</para>
        /// <para xml:lang="en">Croatia</para>
        /// </summary>
        HRV,
        
        /// <summary>
        /// <para xml:lang="de-DE">Haiti</para>
        /// <para xml:lang="en">Haiti</para>
        /// </summary>
        HTI,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ungarn</para>
        /// <para xml:lang="en">Hungary</para>
        /// </summary>
        HUN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Indonesien</para>
        /// <para xml:lang="en">Indonesia</para>
        /// </summary>
        IDN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Insel Man</para>
        /// <para xml:lang="en">Isle of Man</para>
        /// </summary>
        IMN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Indien</para>
        /// <para xml:lang="en">India</para>
        /// </summary>
        IND,
        
        /// <summary>
        /// <para xml:lang="de-DE">Irland</para>
        /// <para xml:lang="en">Ireland</para>
        /// </summary>
        IRL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Islamische Republik Iran</para>
        /// <para xml:lang="en">Islamic Republic of Iran</para>
        /// </summary>
        IRN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Irak</para>
        /// <para xml:lang="en">Iraq</para>
        /// </summary>
        IRQ,
        
        /// <summary>
        /// <para xml:lang="de-DE">Island</para>
        /// <para xml:lang="en">Iceland</para>
        /// </summary>
        ISL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Israel</para>
        /// <para xml:lang="en">Israel</para>
        /// </summary>
        ISR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Italien</para>
        /// <para xml:lang="en">Italy</para>
        /// </summary>
        ITA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Jamaika</para>
        /// <para xml:lang="en">Jamaica</para>
        /// </summary>
        JAM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Jordanien</para>
        /// <para xml:lang="en">Jordan</para>
        /// </summary>
        JOR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Japan</para>
        /// <para xml:lang="en">Japan</para>
        /// </summary>
        JPN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kasachstan</para>
        /// <para xml:lang="en">Kazakhstan</para>
        /// </summary>
        KAZ,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kenia</para>
        /// <para xml:lang="en">Kenya</para>
        /// </summary>
        KEN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kirgisistan</para>
        /// <para xml:lang="en">Kyrgyzstan</para>
        /// </summary>
        KGZ,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kambodscha</para>
        /// <para xml:lang="en">Cambodia</para>
        /// </summary>
        KHM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kiribati</para>
        /// <para xml:lang="en">Kiribati</para>
        /// </summary>
        KIR,
        
        /// <summary>
        /// <para xml:lang="de-DE">St. Kitts und Nevis</para>
        /// <para xml:lang="en">Saint Kitts and Nevis</para>
        /// </summary>
        KNA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Republik Korea (Suedkorea)</para>
        /// <para xml:lang="en">Republic of Korea</para>
        /// </summary>
        KOR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kuwait</para>
        /// <para xml:lang="en">Kuwait</para>
        /// </summary>
        KWT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Laos</para>
        /// <para xml:lang="en">Lao People's Democratic Republic</para>
        /// </summary>
        LAO,
        
        /// <summary>
        /// <para xml:lang="de-DE">Libanon</para>
        /// <para xml:lang="en">Lebanon</para>
        /// </summary>
        LBN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Liberia</para>
        /// <para xml:lang="en">Liberia</para>
        /// </summary>
        LBR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Libysch-Arabische Dschamahirija (Libyen)</para>
        /// <para xml:lang="en">Libyan Arab Jamahiriya</para>
        /// </summary>
        LBY,
        
        /// <summary>
        /// <para xml:lang="de-DE">St. Lucia</para>
        /// <para xml:lang="en">Saint Lucia</para>
        /// </summary>
        LCA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Liechtenstein</para>
        /// <para xml:lang="en">Liechtenstein</para>
        /// </summary>
        LIE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Sri Lanka</para>
        /// <para xml:lang="en">Sri Lanka</para>
        /// </summary>
        LKA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Lesotho</para>
        /// <para xml:lang="en">Lesotho</para>
        /// </summary>
        LSO,
        
        /// <summary>
        /// <para xml:lang="de-DE">Litauen</para>
        /// <para xml:lang="en">Lithuania</para>
        /// </summary>
        LTU,
        
        /// <summary>
        /// <para xml:lang="de-DE">Luxemburg</para>
        /// <para xml:lang="en">Luxembourg</para>
        /// </summary>
        LUX,
        
        /// <summary>
        /// <para xml:lang="de-DE">Lettland</para>
        /// <para xml:lang="en">Latvia</para>
        /// </summary>
        LVA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Macao</para>
        /// <para xml:lang="en">Macao</para>
        /// </summary>
        MAC,
        
        /// <summary>
        /// <para xml:lang="de-DE">Marokko</para>
        /// <para xml:lang="en">Morocco</para>
        /// </summary>
        MAR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Monaco</para>
        /// <para xml:lang="en">Monaco</para>
        /// </summary>
        MCO,
        
        /// <summary>
        /// <para xml:lang="de-DE">Republik Moldau (Moldawien)</para>
        /// <para xml:lang="en">Republic of Moldova</para>
        /// </summary>
        MDA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Madagaskar</para>
        /// <para xml:lang="en">Madagascar</para>
        /// </summary>
        MDG,
        
        /// <summary>
        /// <para xml:lang="de-DE">Malediven</para>
        /// <para xml:lang="en">Maldives</para>
        /// </summary>
        MDV,
        
        /// <summary>
        /// <para xml:lang="de-DE">Mexiko</para>
        /// <para xml:lang="en">Mexico</para>
        /// </summary>
        MEX,
        
        /// <summary>
        /// <para xml:lang="de-DE">Marshallinseln</para>
        /// <para xml:lang="en">Marshall Islands</para>
        /// </summary>
        MHL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Mazedonien</para>
        /// <para xml:lang="en">The former Yugoslav Republic of Macedonia</para>
        /// </summary>
        MKD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Mali</para>
        /// <para xml:lang="en">Mali</para>
        /// </summary>
        MLI,
        
        /// <summary>
        /// <para xml:lang="de-DE">Malta</para>
        /// <para xml:lang="en">Malta</para>
        /// </summary>
        MLT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Myanmar (Burma)</para>
        /// <para xml:lang="en">Myanmar</para>
        /// </summary>
        MMR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Montenegro</para>
        /// <para xml:lang="en">Montenegro</para>
        /// </summary>
        MNE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Mongolei</para>
        /// <para xml:lang="en">Mongolia</para>
        /// </summary>
        MNG,
        
        /// <summary>
        /// <para xml:lang="de-DE">Noerdliche Marianen</para>
        /// <para xml:lang="en">Northern Mariana Islands</para>
        /// </summary>
        MNP,
        
        /// <summary>
        /// <para xml:lang="de-DE">Mosambik</para>
        /// <para xml:lang="en">Mozambique</para>
        /// </summary>
        MOZ,
        
        /// <summary>
        /// <para xml:lang="de-DE">Mauretanien</para>
        /// <para xml:lang="en">Mauritania</para>
        /// </summary>
        MRT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Montserrat</para>
        /// <para xml:lang="en">Montserrat</para>
        /// </summary>
        MSR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Martinique</para>
        /// <para xml:lang="en">Martinique</para>
        /// </summary>
        MTQ,
        
        /// <summary>
        /// <para xml:lang="de-DE">Mauritius</para>
        /// <para xml:lang="en">Mauritius</para>
        /// </summary>
        MUS,
        
        /// <summary>
        /// <para xml:lang="de-DE">Malawi</para>
        /// <para xml:lang="en">Malawi</para>
        /// </summary>
        MWI,
        
        /// <summary>
        /// <para xml:lang="de-DE">Malaysia</para>
        /// <para xml:lang="en">Malaysia</para>
        /// </summary>
        MYS,
        
        /// <summary>
        /// <para xml:lang="de-DE">Mayotte</para>
        /// <para xml:lang="en">Mayotte</para>
        /// </summary>
        MYT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Namibia</para>
        /// <para xml:lang="en">Namibia</para>
        /// </summary>
        NAM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Neukaledonien</para>
        /// <para xml:lang="en">New Caledonia</para>
        /// </summary>
        NCL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Niger</para>
        /// <para xml:lang="en">Niger</para>
        /// </summary>
        NER,
        
        /// <summary>
        /// <para xml:lang="de-DE">Norfolkinseln</para>
        /// <para xml:lang="en">Norfolk Islands</para>
        /// </summary>
        NFK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nigeria</para>
        /// <para xml:lang="en">Nigeria</para>
        /// </summary>
        NGA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nicaragua</para>
        /// <para xml:lang="en">Nicaragua</para>
        /// </summary>
        NIC,
        
        /// <summary>
        /// <para xml:lang="de-DE">Niue</para>
        /// <para xml:lang="en">Niue</para>
        /// </summary>
        NIU,
        
        /// <summary>
        /// <para xml:lang="de-DE">Niederlande</para>
        /// <para xml:lang="en">Netherlands</para>
        /// </summary>
        NLD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Norwegen</para>
        /// <para xml:lang="en">Norway</para>
        /// </summary>
        NOR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nepal</para>
        /// <para xml:lang="en">Nepal</para>
        /// </summary>
        NPL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nauru</para>
        /// <para xml:lang="en">Nauru</para>
        /// </summary>
        NRU,
        
        /// <summary>
        /// <para xml:lang="de-DE">Neuseeland</para>
        /// <para xml:lang="en">New zealand</para>
        /// </summary>
        NZL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Oman</para>
        /// <para xml:lang="en">Oman</para>
        /// </summary>
        OMN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Pakistan</para>
        /// <para xml:lang="en">Pakistan</para>
        /// </summary>
        PAK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Panama</para>
        /// <para xml:lang="en">Panama</para>
        /// </summary>
        PAN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Pitcairninseln</para>
        /// <para xml:lang="en">Pitcairn</para>
        /// </summary>
        PCN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Peru</para>
        /// <para xml:lang="en">Peru</para>
        /// </summary>
        PER,
        
        /// <summary>
        /// <para xml:lang="de-DE">Philippinen</para>
        /// <para xml:lang="en">Philippines</para>
        /// </summary>
        PHL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Palau</para>
        /// <para xml:lang="en">Palau</para>
        /// </summary>
        PLW,
        
        /// <summary>
        /// <para xml:lang="de-DE">Papua New Guinea</para>
        /// <para xml:lang="en">Papua-Neuguinea</para>
        /// </summary>
        PNG,
        
        /// <summary>
        /// <para xml:lang="de-DE">Polen</para>
        /// <para xml:lang="en">Poland</para>
        /// </summary>
        POL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Puerto Rico</para>
        /// <para xml:lang="en">Puerto Rico</para>
        /// </summary>
        PRI,
        
        /// <summary>
        /// <para xml:lang="de-DE">Demokratische Volksrepublik Korea (Nordkorea)</para>
        /// <para xml:lang="en">Democratic people's Republic of Korea</para>
        /// </summary>
        PRK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Portugal</para>
        /// <para xml:lang="en">Portugal</para>
        /// </summary>
        PRT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Paraguay</para>
        /// <para xml:lang="en">Paraguay</para>
        /// </summary>
        PRY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Franzoesisch-Polynesien</para>
        /// <para xml:lang="en">French Polynesia</para>
        /// </summary>
        PYF,
        
        /// <summary>
        /// <para xml:lang="de-DE">Katar</para>
        /// <para xml:lang="en">Qatar</para>
        /// </summary>
        QAT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Reunion</para>
        /// <para xml:lang="en">Reunion</para>
        /// </summary>
        REU,
        
        /// <summary>
        /// <para xml:lang="de-DE">Rumaenien (ROM)</para>
        /// <para xml:lang="en">Romania</para>
        /// </summary>
        ROU,
        
        /// <summary>
        /// <para xml:lang="de-DE">Russische Foederation</para>
        /// <para xml:lang="en">Russian Federation</para>
        /// </summary>
        RUS,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ruanda</para>
        /// <para xml:lang="en">Rwanda</para>
        /// </summary>
        RWA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Saudi-Arabien</para>
        /// <para xml:lang="en">Saudi Arabia</para>
        /// </summary>
        SAU,
        
        /// <summary>
        /// <para xml:lang="de-DE">Sudan</para>
        /// <para xml:lang="en">Sudan</para>
        /// </summary>
        SDN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Senegal</para>
        /// <para xml:lang="en">Senegal</para>
        /// </summary>
        SEN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Singapur</para>
        /// <para xml:lang="en">Singapore</para>
        /// </summary>
        SGP,
        
        /// <summary>
        /// <para xml:lang="de-DE">St. Helena</para>
        /// <para xml:lang="en">Saint Helena</para>
        /// </summary>
        SHN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Svalbard und Jan Mayen</para>
        /// <para xml:lang="en">Svalbard and Jan Mayen</para>
        /// </summary>
        SJM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Salomonen</para>
        /// <para xml:lang="en">Solomon Islands</para>
        /// </summary>
        SLB,
        
        /// <summary>
        /// <para xml:lang="de-DE">Sierra Leone</para>
        /// <para xml:lang="en">Sierra Leone</para>
        /// </summary>
        SLE,
        
        /// <summary>
        /// <para xml:lang="de-DE">El Salvador</para>
        /// <para xml:lang="en">El Salvador</para>
        /// </summary>
        SLV,
        
        /// <summary>
        /// <para xml:lang="de-DE">San Marino</para>
        /// <para xml:lang="en">San Marino</para>
        /// </summary>
        SMR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Somalia</para>
        /// <para xml:lang="en">Somalia</para>
        /// </summary>
        SOM,
        
        /// <summary>
        /// <para xml:lang="de-DE">St. Pierre und Miquelon</para>
        /// <para xml:lang="en">Saint Pierre and Miquelon</para>
        /// </summary>
        SPM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Serbien</para>
        /// <para xml:lang="en">Serbia</para>
        /// </summary>
        SRB,
        
        /// <summary>
        /// <para xml:lang="de-DE">Sao Tome und Principe</para>
        /// <para xml:lang="en">Sao Tome and Principe</para>
        /// </summary>
        STP,
        
        /// <summary>
        /// <para xml:lang="de-DE">Suriname</para>
        /// <para xml:lang="en">Suriname</para>
        /// </summary>
        SUR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Slowakei</para>
        /// <para xml:lang="en">Slovakia</para>
        /// </summary>
        SVK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Slowenien</para>
        /// <para xml:lang="en">Slovenia</para>
        /// </summary>
        SVN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Schweden</para>
        /// <para xml:lang="en">Sweden</para>
        /// </summary>
        SWE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Swasiland</para>
        /// <para xml:lang="en">Swaziland</para>
        /// </summary>
        SWZ,
        
        /// <summary>
        /// <para xml:lang="de-DE">Seychellen</para>
        /// <para xml:lang="en">Seychelles</para>
        /// </summary>
        SYC,
        
        /// <summary>
        /// <para xml:lang="de-DE">Arabische Republik Syrien</para>
        /// <para xml:lang="en">Syrian Arabic Republic</para>
        /// </summary>
        SYR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Turks- und Caicosinseln</para>
        /// <para xml:lang="en">Turks and Caicos Islands</para>
        /// </summary>
        TCA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Tschad</para>
        /// <para xml:lang="en">Chad</para>
        /// </summary>
        TCD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Togo</para>
        /// <para xml:lang="en">Togo</para>
        /// </summary>
        TGO,
        
        /// <summary>
        /// <para xml:lang="de-DE">Thailand</para>
        /// <para xml:lang="en">Thailand</para>
        /// </summary>
        THA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Tadschikistan</para>
        /// <para xml:lang="en">Tajikistan</para>
        /// </summary>
        TJK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Tokelau</para>
        /// <para xml:lang="en">Tokelau</para>
        /// </summary>
        TKL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Turkmenistan</para>
        /// <para xml:lang="en">Turkmenistan</para>
        /// </summary>
        TKM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Osttimor (Timor-Leste; TLS)</para>
        /// <para xml:lang="en">Timor-Leste</para>
        /// </summary>
        TMP,
        
        /// <summary>
        /// <para xml:lang="de-DE">Tonga</para>
        /// <para xml:lang="en">Tonga</para>
        /// </summary>
        TON,
        
        /// <summary>
        /// <para xml:lang="de-DE">Trinidad und Tobago</para>
        /// <para xml:lang="en">Trinidad and Tobago</para>
        /// </summary>
        TTO,
        
        /// <summary>
        /// <para xml:lang="de-DE">Tunesien</para>
        /// <para xml:lang="en">Tunisia</para>
        /// </summary>
        TUN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Tuerkei</para>
        /// <para xml:lang="en">Turkey</para>
        /// </summary>
        TUR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Tuvalu</para>
        /// <para xml:lang="en">Tuvalu</para>
        /// </summary>
        TUV,
        
        /// <summary>
        /// <para xml:lang="de-DE">Republik China (Taiwan)</para>
        /// <para xml:lang="en">Taiwan, Province of China</para>
        /// </summary>
        TWN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Vereinigte Republik Tansania</para>
        /// <para xml:lang="en">United Republic of Tanzania</para>
        /// </summary>
        TZA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Uganda</para>
        /// <para xml:lang="en">Uganda</para>
        /// </summary>
        UGA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ukraine</para>
        /// <para xml:lang="en">Ukraine</para>
        /// </summary>
        UKR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Uruguay</para>
        /// <para xml:lang="en">Uruguay</para>
        /// </summary>
        URY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Vereinigte Staaten von Amerika</para>
        /// <para xml:lang="en">United States</para>
        /// </summary>
        USA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Usbekistan</para>
        /// <para xml:lang="en">Uzbekistan</para>
        /// </summary>
        UZB,
        
        /// <summary>
        /// <para xml:lang="de-DE">Vatikanstadt</para>
        /// <para xml:lang="en">Vatican City State (Holy See)</para>
        /// </summary>
        VAT,
        
        /// <summary>
        /// <para xml:lang="de-DE">St. Vincent und Grenadinen</para>
        /// <para xml:lang="en">Saint Vincent and Grenadines</para>
        /// </summary>
        VCT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Venezuela</para>
        /// <para xml:lang="en">Venezuela</para>
        /// </summary>
        VEN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Britische Jungferninseln</para>
        /// <para xml:lang="en">British Virgin Islands</para>
        /// </summary>
        VGB,
        
        /// <summary>
        /// <para xml:lang="de-DE">Amerikanische Jungferninseln</para>
        /// <para xml:lang="en">U.S. Virgin Islands</para>
        /// </summary>
        VIR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Vietnam</para>
        /// <para xml:lang="en">Viet Nam</para>
        /// </summary>
        VNM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Vanuatu</para>
        /// <para xml:lang="en">Vanuatu</para>
        /// </summary>
        VUT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wallis und Futuna</para>
        /// <para xml:lang="en">Wallis and Futuna</para>
        /// </summary>
        WLF,
        
        /// <summary>
        /// <para xml:lang="de-DE">Samoa</para>
        /// <para xml:lang="en">Samoa</para>
        /// </summary>
        WSM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Jemen</para>
        /// <para xml:lang="en">Yemen</para>
        /// </summary>
        YEM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Suedafrika</para>
        /// <para xml:lang="en">South Africa</para>
        /// </summary>
        ZAF,
        
        /// <summary>
        /// <para xml:lang="de-DE">Sambia</para>
        /// <para xml:lang="en">Zambia</para>
        /// </summary>
        ZMB,
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimbabwe</para>
        /// <para xml:lang="en">Simbabwe</para>
        /// </summary>
        ZWE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kosovo</para>
        /// <para xml:lang="en">Kosovo</para>
        /// </summary>
        XKO,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Die Geo-Hierarchie-Informationen.</para>
    /// <para xml:lang="en">The geo-hierarchy information.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GeoHierarchy", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeoHierarchy
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kontinent</para>
        /// <para xml:lang="en">continent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("continent", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Continent Continent { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Land</para>
        /// <para xml:lang="en">country</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("country", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Country Country { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bundesland</para>
        /// <para xml:lang="en">region</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("region", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Region Region { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Stadt/Kreis</para>
        /// <para xml:lang="en">city</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("city", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public City City { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezirk/Gemeinde</para>
        /// <para xml:lang="en">quarter</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("quarter", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Quarter Quarter { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nachbarschaft</para>
        /// <para xml:lang="en">neighbourhood</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("neighbourhood", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Neighbourhood Neighbourhood { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Definiert einen Kontinent mit Angabe der geoCodeIds.</para>
    /// <para xml:lang="en">Defines a continent with geoCodeIds.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Continent", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("continent", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0")]
    public partial class Continent : GeoHierarchyElement
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Definiert eine Region mit allen verfügbaren Informationen.
    ///            </para>
    /// <para xml:lang="en">Defines a region with all informations.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GeoHierarchyElement", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(City))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Continent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Country))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Neighbourhood))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Quarter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Region))]
    public partial class GeoHierarchyElement
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Der Name der Region, entweder ein Bundesland, Stadt oder
        ///                        Stadtbezirk.
        ///                    </para>
        /// <para xml:lang="en">The name of the region, like a region, city or quarter.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("name", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Der IS24 GeoCode der Region.</para>
        /// <para xml:lang="en">The IS24 GeoCode of the region.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("geoCodeId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long GeoCodeId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Der IS24 GeoCode der jeweiligen Hierarchie.</para>
        /// <para xml:lang="en">The IS24 GeoCode of the corresponding hierarchy.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("fullGeoCodeId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string FullGeoCodeId { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<GeoHierarchyStatistic> _statistics;
        
        /// <summary>
        /// <para xml:lang="de-DE">Optionales Element das die Statistik (d.h. Anzahl der Objekte)
        ///                        für einen Immobilientyp enthält
        ///                    </para>
        /// <para xml:lang="en">Optional element which holds the statistics (i.e. number of objects)
        ///                        for a real estate type
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("statistics", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("GeoHierarchyStatistic", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<GeoHierarchyStatistic> Statistics
        {
            get
            {
                return this._statistics;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Statistics-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Statistics collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatisticsSpecified
        {
            get
            {
                return (this.Statistics.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="GeoHierarchyElement" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GeoHierarchyElement" /> class.</para>
        /// </summary>
        public GeoHierarchyElement()
        {
            this._statistics = new System.Collections.ObjectModel.Collection<GeoHierarchyStatistic>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Listenelement für GeoHierarchyStatistic.</para>
    /// <para xml:lang="en">List element for GeoHierarchyStatistic.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GeoHierarchyStatistics", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeoHierarchyStatistics
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<GeoHierarchyStatistic> _geoHierarchyStatistic;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("GeoHierarchyStatistic", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<GeoHierarchyStatistic> GeoHierarchyStatistic
        {
            get
            {
                return this._geoHierarchyStatistic;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GeoHierarchyStatistic-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the GeoHierarchyStatistic collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GeoHierarchyStatisticSpecified
        {
            get
            {
                return (this.GeoHierarchyStatistic.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="GeoHierarchyStatistics" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GeoHierarchyStatistics" /> class.</para>
        /// </summary>
        public GeoHierarchyStatistics()
        {
            this._geoHierarchyStatistic = new System.Collections.ObjectModel.Collection<GeoHierarchyStatistic>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Enthält die Statistik (d.h. Anzahl der Objekte) für einen
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Holds the statistics (i.e. number of objects) for a real estate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GeoHierarchyStatistic", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeoHierarchyStatistic
    {
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("realEstateType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RealEstateType RealEstateType { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("count", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int Count { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung der is24 Immobilientypen.</para>
    /// <para xml:lang="en">Enumeration of well known is24 real estate types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RealEstateType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum RealEstateType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Mietwohnung</para>
        /// <para xml:lang="en">apartment rent</para>
        /// </summary>
        APARTMENT_RENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnung zum Kauf</para>
        /// <para xml:lang="en">apartment buy</para>
        /// </summary>
        APARTMENT_BUY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Haus zur Miete</para>
        /// <para xml:lang="en">house rent</para>
        /// </summary>
        HOUSE_RENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Haus zum Kauf</para>
        /// <para xml:lang="en">house buy</para>
        /// </summary>
        HOUSE_BUY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage zur Miete</para>
        /// <para xml:lang="en">garage rent</para>
        /// </summary>
        GARAGE_RENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage zum Kauf</para>
        /// <para xml:lang="en">garage buy</para>
        /// </summary>
        GARAGE_BUY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohngrundstück zur Miete</para>
        /// <para xml:lang="en">living rent site</para>
        /// </summary>
        LIVING_RENT_SITE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohngrundstück zum Kauf</para>
        /// <para xml:lang="en">living buy site</para>
        /// </summary>
        LIVING_BUY_SITE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gewerbegrundstück</para>
        /// <para xml:lang="en">trade site</para>
        /// </summary>
        TRADE_SITE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Typenhaus</para>
        /// <para xml:lang="en">house type</para>
        /// </summary>
        HOUSE_TYPE,
        
        /// <summary>
        /// <para xml:lang="de-DE">WG-Zimmer</para>
        /// <para xml:lang="en">flat share room</para>
        /// </summary>
        FLAT_SHARE_ROOM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Altenpflege</para>
        /// <para xml:lang="en">senior care</para>
        /// </summary>
        SENIOR_CARE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Seniorenwohnen</para>
        /// <para xml:lang="en">assisted living</para>
        /// </summary>
        ASSISTED_LIVING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Büro und Praxis</para>
        /// <para xml:lang="en">office</para>
        /// </summary>
        OFFICE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Halle und Produktion</para>
        /// <para xml:lang="en">industry</para>
        /// </summary>
        INDUSTRY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Einzelhandel</para>
        /// <para xml:lang="en">store</para>
        /// </summary>
        STORE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gastronomie und Hotel</para>
        /// <para xml:lang="en">gastronomy</para>
        /// </summary>
        GASTRONOMY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Spezialgewerbe</para>
        /// <para xml:lang="en">special purpose</para>
        /// </summary>
        SPECIAL_PURPOSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Anlageimmobilie</para>
        /// <para xml:lang="en">investment</para>
        /// </summary>
        INVESTMENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Zwangsversteigerung</para>
        /// <para xml:lang="en">compulsory auction</para>
        /// </summary>
        COMPULSORY_AUCTION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnen auf Zeit (WAZ)</para>
        /// <para xml:lang="en">living for a short term of time</para>
        /// </summary>
        SHORT_TERM_ACCOMMODATION,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Definiert ein Land mit Angabe von Name und geoCodeIds.</para>
    /// <para xml:lang="en">Defines a country with name and geoCodeIds.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Country", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("country", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0")]
    public partial class Country : GeoHierarchyElement
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Definiert ein Bundesland mit Angabe von Name und geoCodeIds.
    ///            </para>
    /// <para xml:lang="en">Defines a region with name and geoCodeId.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Region", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("region", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0")]
    public partial class Region : GeoHierarchyElement
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Definiert Stadt/Kreis mit Angabe von Name und geoCodeId.
    ///            </para>
    /// <para xml:lang="en">Defines a city with name and geoCodeIds.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("City", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("city", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0")]
    public partial class City : GeoHierarchyElement
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Definiert Bezirk/Gemeinde mit Angabe von Name und geoCodeIds.
    ///            </para>
    /// <para xml:lang="en">Defines a quarter with name and geoCodeIds.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Quarter", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("quarter", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0")]
    public partial class Quarter : GeoHierarchyElement
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Definiert Nachbarschaft mit Angabe der geoCodeIds.</para>
    /// <para xml:lang="en">Defines a neighbourhood with geoCodeIds.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Neighbourhood", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Neighbourhood : GeoHierarchyElement
    {
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Wgs84AddressDescription", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Wgs84AddressDescription
    {
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("text", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Text { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Enthält die Informationen für die API Suche einer Immobilie.
    ///            </para>
    /// <para xml:lang="en">Holds the information for the API search of a real estate.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ApiSearchData", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApiSearchData
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Suchfeld 1</para>
        /// <para xml:lang="de-DE">Suchfeldtyp</para>
        /// <para xml:lang="en">search field 1</para>
        /// <para xml:lang="en">Type of searchField</para>
        /// <para xml:lang="en">Maximum length: 16.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.Xml.Serialization.XmlElementAttribute("searchField1", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SearchField1 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Suchfeld 2</para>
        /// <para xml:lang="de-DE">Suchfeldtyp</para>
        /// <para xml:lang="en">search field 2</para>
        /// <para xml:lang="en">Type of searchField</para>
        /// <para xml:lang="en">Maximum length: 16.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.Xml.Serialization.XmlElementAttribute("searchField2", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SearchField2 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Suchfeld 3</para>
        /// <para xml:lang="de-DE">Suchfeldtyp</para>
        /// <para xml:lang="en">search field 3</para>
        /// <para xml:lang="en">Type of searchField</para>
        /// <para xml:lang="en">Maximum length: 16.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.Xml.Serialization.XmlElementAttribute("searchField3", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SearchField3 { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Veröffentlichungsstatus einer Immobilie.</para>
    /// <para xml:lang="en">Publication state of a real Estate.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RealEstateState", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum RealEstateState
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Veröffentlichungsstatus ist aktiv.</para>
        /// <para xml:lang="en">publication state is active.</para>
        /// </summary>
        ACTIVE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Veröffentlichungsstatus ist inaktiv.</para>
        /// <para xml:lang="en">publication state is inactive.</para>
        /// </summary>
        INACTIVE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Immobilie wurde gelöscht.</para>
        /// <para xml:lang="en">real estate was deleted.</para>
        /// </summary>
        TO_BE_DELETED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Immobilie ist im Entwurf.</para>
        /// <para xml:lang="en">real estate is in draft.</para>
        /// </summary>
        DRAFT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Immobilie ist archiviert.</para>
        /// <para xml:lang="en">real estate is archived.</para>
        /// </summary>
        ARCHIVED,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Allgemeine Elemente für alle Immobilienarten im Expose.
    ///            </para>
    /// <para xml:lang="en">General elements for all real estates for the expose.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AbstractRealEstate", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.ApartmentBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.ApartmentBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.ApartmentRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.ApartmentRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.AssistedLiving))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.AssistedLiving))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.CompulsoryAuction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.CompulsoryAuction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.ExposeRealEstate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.FlatShareRoom))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.FlatShareRoom))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.GarageBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.GarageBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.GarageRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.GarageRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.Gastronomy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.Gastronomy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.HouseBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.HouseBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.HouseRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.HouseRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.HouseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.HouseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.Industry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.Industry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.Investment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.InvestmentProperty))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.LivingBuySite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.LivingBuySite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.LivingRentSite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.LivingRentSite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.Office))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.Office))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.RealEstate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.SeniorCare))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.SeniorCare))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.ShortTermAccommodation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.ShortTermAccommodation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.SpecialPurpose))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.SpecialPurpose))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.Store))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.Store))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Offer.RealEstates.TradeSite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.TradeSite))]
    public partial class AbstractRealEstate : AbstractRealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Gruppennummer der Immobilie</para>
        /// <para xml:lang="en">group number of the real estate</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("groupNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int GroupNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GroupNumber-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GroupNumber property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GroupNumberValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gruppennummer der Immobilie</para>
        /// <para xml:lang="en">group number of the real estate</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> GroupNumber
        {
            get
            {
                if (this.GroupNumberValueSpecified)
                {
                    return this.GroupNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GroupNumberValue = value.GetValueOrDefault();
                this.GroupNumberValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektbeschreibung</para>
        /// <para xml:lang="en">Description of the real estate</para>
        /// <para xml:lang="en">Maximum length: 3999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(3999)]
        [System.Xml.Serialization.XmlElementAttribute("descriptionNote", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string DescriptionNote { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ausstattung</para>
        /// <para xml:lang="en">Furnishing of the real estate</para>
        /// <para xml:lang="en">Maximum length: 3999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(3999)]
        [System.Xml.Serialization.XmlElementAttribute("furnishingNote", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string FurnishingNote { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lage</para>
        /// <para xml:lang="en">Location information of the real estate</para>
        /// <para xml:lang="en">Maximum length: 3999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(3999)]
        [System.Xml.Serialization.XmlElementAttribute("locationNote", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string LocationNote { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Sonstiges</para>
        /// <para xml:lang="en">Other description of the real estate</para>
        /// <para xml:lang="en">Maximum length: 3999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(3999)]
        [System.Xml.Serialization.XmlElementAttribute("otherNote", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OtherNote { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anhänge der Immobilie</para>
        /// <para xml:lang="en">Attachments of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("attachments", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Attachments Attachments { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">ReferencePrice Service Call</para>
        /// <para xml:lang="en">reference price service call</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// <para xml:lang="en">Pattern: (http|https)://\w.*[.]\w.*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(255)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(http|https)://\\w.*[.]\\w.*")]
        [System.Xml.Serialization.XmlElementAttribute("referencePriceServiceCall", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ReferencePriceServiceCall { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">ReferencePrice API Call</para>
        /// <para xml:lang="en">reference price api call</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// <para xml:lang="en">Pattern: (http|https)://\w.*[.]\w.*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(255)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(http|https)://\\w.*[.]\\w.*")]
        [System.Xml.Serialization.XmlElementAttribute("referencePriceApiCall", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ReferencePriceApiCall { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">
        ///                                Nur lesend: Immobilien-Projekt Id 
        ///                            </para>
        /// <para xml:lang="en">
        ///                                Read Only: Represents an id of real estate project.
        ///                            </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("realEstateProjectId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long RealEstateProjectIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RealEstateProjectId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RealEstateProjectId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool RealEstateProjectIdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">
        ///                                Nur lesend: Immobilien-Projekt Id 
        ///                            </para>
        /// <para xml:lang="en">
        ///                                Read Only: Represents an id of real estate project.
        ///                            </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> RealEstateProjectId
        {
            get
            {
                if (this.RealEstateProjectIdValueSpecified)
                {
                    return this.RealEstateProjectIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RealEstateProjectIdValue = value.GetValueOrDefault();
                this.RealEstateProjectIdValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Liste von Anhängen</para>
    /// <para xml:lang="de-DE">Liste von Anhängen</para>
    /// <para xml:lang="en">List of Attachments</para>
    /// <para xml:lang="en">List of Attachments</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Attachments", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("attachments", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public partial class Attachments
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Attachment> _attachment;
        
        /// <summary>
        /// <para xml:lang="de-DE">ein Anhang</para>
        /// <para xml:lang="en">an attachment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("attachment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<Attachment> Attachment
        {
            get
            {
                return this._attachment;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Attachment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Attachment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AttachmentSpecified
        {
            get
            {
                return (this.Attachment.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Attachments" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Attachments" /> class.</para>
        /// </summary>
        public Attachments()
        {
            this._attachment = new System.Collections.ObjectModel.Collection<Attachment>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Ein Anhang</para>
    /// <para xml:lang="de-DE">ein Anhang</para>
    /// <para xml:lang="en">An attachment</para>
    /// <para xml:lang="en">one attachment</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Attachment", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("attachment", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExtendedAttachment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Link))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PDFDocument))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Picture))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.SearchPicture))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StreamingVideo))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VideoFile))]
    public partial class Attachment : IReference
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Titel des Anhangs</para>
        /// <para xml:lang="en">title of the attachment</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(30)]
        [System.Xml.Serialization.XmlElementAttribute("title", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Title { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vergleichssumme dieses Anhangs.</para>
        /// <para xml:lang="en">checksum of this attachment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("checkSum", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string CheckSum { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">
        ///                                Repräsentiert eine kundenspezifische Referenz eines Anhangs.
        ///                            </para>
        /// <para xml:lang="en">
        ///                                Represents a customer specific identifier for the attachment.
        ///                            </para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("externalId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExternalId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Eine kundenspezifische Vergleichssumme dieses Anhangs</para>
        /// <para xml:lang="en">A customer specific checksum of this attachment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("externalCheckSum", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string ExternalCheckSum { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lesbarer Name des Elements (wenn vorhanden).</para>
        /// <para xml:lang="en">Human readable name of the entity (if it exists).</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("label", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Label { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("modification", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime ModificationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Modification-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Modification property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ModificationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Modification
        {
            get
            {
                if (this.ModificationValueSpecified)
                {
                    return this.ModificationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ModificationValue = value.GetValueOrDefault();
                this.ModificationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("creation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime CreationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Creation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Creation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CreationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Creation
        {
            get
            {
                if (this.CreationValueSpecified)
                {
                    return this.CreationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationValue = value.GetValueOrDefault();
                this.CreationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("publishDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime PublishDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublishDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PublishDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> PublishDate
        {
            get
            {
                if (this.PublishDateValueSpecified)
                {
                    return this.PublishDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PublishDateValue = value.GetValueOrDefault();
                this.PublishDateValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Das Logo eines Anbieters</para>
    /// <para xml:lang="en">The logo of a realtor.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RealtorLogo", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("realtorLogo", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public partial class RealtorLogo
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RealtorLogoUrlsUrl> _urls;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("urls", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<RealtorLogoUrlsUrl> Urls
        {
            get
            {
                return this._urls;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Urls-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Urls collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UrlsSpecified
        {
            get
            {
                return (this.Urls.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RealtorLogo" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RealtorLogo" /> class.</para>
        /// </summary>
        public RealtorLogo()
        {
            this._urls = new System.Collections.ObjectModel.Collection<RealtorLogoUrlsUrl>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">URL zum Relatorlogo</para>
        /// <para xml:lang="en">URL to realtor's logo</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("realtorLogoUrl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string RealtorLogoUrl { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RealtorLogoUrls", Namespace="http://rest.immobilienscout24.de/schema/common/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RealtorLogoUrls
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RealtorLogoUrlsUrl> _url;
        
        /// <summary>
        /// <para xml:lang="de-DE">URL des Bildes.</para>
        /// <para xml:lang="en">URL for the picture.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<RealtorLogoUrlsUrl> Url
        {
            get
            {
                return this._url;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RealtorLogoUrls" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RealtorLogoUrls" /> class.</para>
        /// </summary>
        public RealtorLogoUrls()
        {
            this._url = new System.Collections.ObjectModel.Collection<RealtorLogoUrlsUrl>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RealtorLogoUrlsUrl", Namespace="http://rest.immobilienscout24.de/schema/common/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RealtorLogoUrlsUrl
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildergröße</para>
        /// <para xml:lang="en">picture scale</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("scale", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PictureScaleType ScaleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Scale-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Scale property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ScaleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildergröße</para>
        /// <para xml:lang="en">picture scale</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<PictureScaleType> Scale
        {
            get
            {
                if (this.ScaleValueSpecified)
                {
                    return this.ScaleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ScaleValue = value.GetValueOrDefault();
                this.ScaleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">URL zum skaliertem Bild
        ///                          </para>
        /// <para xml:lang="en">URL to scaled picture</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string Href { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Auflistung der verfuegbaren Bildgrößen</para>
    /// <para xml:lang="en">Enumeration for picture size types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PictureScaleType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum PictureScaleType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildgröße 60 x 40</para>
        /// <para xml:lang="en">picture scale 60 x 40</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("SCALE_60x40")]
        SCALE_60X40,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildgröße 60 x 60</para>
        /// <para xml:lang="en">picture scale 60 x 60</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("SCALE_60x60")]
        SCALE_60X60,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildgröße 73 x 73</para>
        /// <para xml:lang="en">picture scale 73 x 73</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("SCALE_73x73")]
        SCALE_73X73,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildgröße 118 x 118</para>
        /// <para xml:lang="en">picture scale 118 x 118</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("SCALE_118x118")]
        SCALE_118X118,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildgröße 155 x 40</para>
        /// <para xml:lang="en">picture scale 155 x 40</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("SCALE_155x40")]
        SCALE_155X40,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildgröße 200 x 200</para>
        /// <para xml:lang="en">picture scale 200 x 200</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("SCALE_200x200")]
        SCALE_200X200,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildgröße 210 x 210</para>
        /// <para xml:lang="en">picture scale 210 x 210</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("SCALE_210x210")]
        SCALE_210X210,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildgröße 300 x 300</para>
        /// <para xml:lang="en">picture scale 300 x 300</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("SCALE_300x300")]
        SCALE_300X300,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildgröße 400 x 300</para>
        /// <para xml:lang="en">picture scale 400 x 300</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("SCALE_400x300")]
        SCALE_400X300,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildgröße 540 x 540</para>
        /// <para xml:lang="en">picture scale 540 x 540</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("SCALE_540x540")]
        SCALE_540X540,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildgröße 1000 x 1000</para>
        /// <para xml:lang="en">picture scale 1000 x 1000</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("SCALE_1000x1000")]
        SCALE_1000X1000,
        
        /// <summary>
        /// <para xml:lang="de-DE">Template für Scaling und Cropping</para>
        /// <para xml:lang="en">template for scaling and cropping image</para>
        /// </summary>
        SCALE_AND_CROP,
        
        /// <summary>
        /// <para xml:lang="de-DE">Template für Scaling</para>
        /// <para xml:lang="en">template for scaling image</para>
        /// </summary>
        SCALE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Template für White filling</para>
        /// <para xml:lang="en">template for white filling image</para>
        /// </summary>
        WHITE_FILLING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bild in höchster Auflösung</para>
        /// <para xml:lang="en">heighest pictures dimension</para>
        /// </summary>
        SCALE_MAX,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Die Konfiguration des Autopiloten</para>
    /// <para xml:lang="en">Autopilot configuration.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AutopilotSettings", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("autopilotSettings", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public partial class AutopilotSettings
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist der Autopilot aktiviert</para>
        /// <para xml:lang="en">is autopilot enabled</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("autopilotEnabled", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool AutopilotEnabledValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AutopilotEnabled-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AutopilotEnabled property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool AutopilotEnabledValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist der Autopilot aktiviert</para>
        /// <para xml:lang="en">is autopilot enabled</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> AutopilotEnabled
        {
            get
            {
                if (this.AutopilotEnabledValueSpecified)
                {
                    return this.AutopilotEnabledValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AutopilotEnabledValue = value.GetValueOrDefault();
                this.AutopilotEnabledValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist der Autopilot Emailreport aktiviert</para>
        /// <para xml:lang="en">is the autpilot email report enabled</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("sendEmailWithAutopilotReport", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool SendEmailWithAutopilotReportValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SendEmailWithAutopilotReport-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SendEmailWithAutopilotReport property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool SendEmailWithAutopilotReportValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist der Autopilot Emailreport aktiviert</para>
        /// <para xml:lang="en">is the autpilot email report enabled</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> SendEmailWithAutopilotReport
        {
            get
            {
                if (this.SendEmailWithAutopilotReportValueSpecified)
                {
                    return this.SendEmailWithAutopilotReportValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SendEmailWithAutopilotReportValue = value.GetValueOrDefault();
                this.SendEmailWithAutopilotReportValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BaseContactDetails", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ContactDetails))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExposeContactDetails))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MasterDataContactDetailsType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RealtorContactDetails))]
    public partial class BaseContactDetails
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">E-Mail des Kontakts.</para>
        /// <para xml:lang="de-DE">Emailadresse mit einer 300 Zeichen Längenbegrenzung.
        ///            </para>
        /// <para xml:lang="en">Email of this contact.</para>
        /// <para xml:lang="en">Common email address with restriction of 300 chars.</para>
        /// <para xml:lang="en">Minimum length: 5. Maximum length: 300.</para>
        /// <para xml:lang="en">Pattern: .+@.+\..+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(300, MinimumLength=5)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute(".+@.+\\..+")]
        [System.Xml.Serialization.XmlElementAttribute("email", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Email { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anrede des Kontakts.</para>
        /// <para xml:lang="en">Salutation of this contact.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("salutation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SalutationType SalutationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Salutation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Salutation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool SalutationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anrede des Kontakts.</para>
        /// <para xml:lang="en">Salutation of this contact.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<SalutationType> Salutation
        {
            get
            {
                if (this.SalutationValueSpecified)
                {
                    return this.SalutationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SalutationValue = value.GetValueOrDefault();
                this.SalutationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vorname des Kontakts.</para>
        /// <para xml:lang="en">Firstname of this contact.</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(30)]
        [System.Xml.Serialization.XmlElementAttribute("firstname", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Firstname { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nachname des Kontakts.</para>
        /// <para xml:lang="en">Lastname of this contact.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("lastname", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Lastname { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Faxländervorwahl des Kontakts.</para>
        /// <para xml:lang="en">Facsimile country code of this contact.</para>
        /// <para xml:lang="en">Pattern: \+[1-9]\d{0,3}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\+[1-9]\\d{0,3}")]
        [System.Xml.Serialization.XmlElementAttribute("faxNumberCountryCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string FaxNumberCountryCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Faxvorwahl des Kontakts.</para>
        /// <para xml:lang="en">Facsimile area code of this contact.</para>
        /// <para xml:lang="en">Pattern: \d{1,10}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{1,10}")]
        [System.Xml.Serialization.XmlElementAttribute("faxNumberAreaCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string FaxNumberAreaCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Faxanschlussnummer des Kontakts.</para>
        /// <para xml:lang="en">Facsimile subscriber number of this contact.</para>
        /// <para xml:lang="en">Pattern: [\d][\d \-]{0,24}[\d].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[\\d][\\d \\-]{0,24}[\\d]")]
        [System.Xml.Serialization.XmlElementAttribute("faxNumberSubscriber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string FaxNumberSubscriber { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Komplette Faxnummer des Kontakts.</para>
        /// <para xml:lang="en">Whole facsimile number of this contact.</para>
        /// <para xml:lang="en">Pattern: (\+[1-9]\d{0,3}) +\d{1,10} +([\d][\d \-]{0,24}[\d]).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(\\+[1-9]\\d{0,3}) +\\d{1,10} +([\\d][\\d \\-]{0,24}[\\d])")]
        [System.Xml.Serialization.XmlElementAttribute("faxNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string FaxNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Telefonländervorwahl des Kontakts.</para>
        /// <para xml:lang="en">Phonenumber country code of this contact.</para>
        /// <para xml:lang="en">Pattern: \+[1-9]\d{0,3}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\+[1-9]\\d{0,3}")]
        [System.Xml.Serialization.XmlElementAttribute("phoneNumberCountryCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string PhoneNumberCountryCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Telefonvorwahl des Kontakts.</para>
        /// <para xml:lang="en">Phonenumber area code of this contact.</para>
        /// <para xml:lang="en">Pattern: \d{1,10}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{1,10}")]
        [System.Xml.Serialization.XmlElementAttribute("phoneNumberAreaCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string PhoneNumberAreaCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Telefonanschlussnummer des Kontakts.</para>
        /// <para xml:lang="en">Phonenumber subscriber number of this contact.</para>
        /// <para xml:lang="en">Pattern: [\d][\d \-]{0,24}[\d].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[\\d][\\d \\-]{0,24}[\\d]")]
        [System.Xml.Serialization.XmlElementAttribute("phoneNumberSubscriber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string PhoneNumberSubscriber { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Komplette Telefonnummer des Kontakts.</para>
        /// <para xml:lang="en">Whole phonenumber number of this contact.</para>
        /// <para xml:lang="en">Pattern: (\+[1-9]\d{0,3}) +\d{1,10} +([\d][\d \-]{0,24}[\d]).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(\\+[1-9]\\d{0,3}) +\\d{1,10} +([\\d][\\d \\-]{0,24}[\\d])")]
        [System.Xml.Serialization.XmlElementAttribute("phoneNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string PhoneNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mobiltelefonländervorwahl des Kontakts.</para>
        /// <para xml:lang="en">Cell phonenumber country code of this contact.</para>
        /// <para xml:lang="en">Pattern: \+[1-9]\d{0,3}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\+[1-9]\\d{0,3}")]
        [System.Xml.Serialization.XmlElementAttribute("cellPhoneNumberCountryCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string CellPhoneNumberCountryCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mobiltelefonvorwahl des Kontakts.</para>
        /// <para xml:lang="en">Cell phonenumber area code of this contact.</para>
        /// <para xml:lang="en">Pattern: \d{1,10}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{1,10}")]
        [System.Xml.Serialization.XmlElementAttribute("cellPhoneNumberAreaCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string CellPhoneNumberAreaCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mobilfunkanschlussnummer des Kontakts.</para>
        /// <para xml:lang="en">Cell phonenumber subscriber number of this contact.
        ///                    </para>
        /// <para xml:lang="en">Pattern: [\d][\d \-]{0,24}[\d].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[\\d][\\d \\-]{0,24}[\\d]")]
        [System.Xml.Serialization.XmlElementAttribute("cellPhoneNumberSubscriber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string CellPhoneNumberSubscriber { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Komplette Mobilfunknnummer des Kontakts.</para>
        /// <para xml:lang="en">Whole cell phonenumber number of this contact.</para>
        /// <para xml:lang="en">Pattern: (\+[1-9]\d{0,3}) +\d{1,10} +([\d][\d \-]{0,24}[\d]).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(\\+[1-9]\\d{0,3}) +\\d{1,10} +([\\d][\\d \\-]{0,24}[\\d])")]
        [System.Xml.Serialization.XmlElementAttribute("cellPhoneNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string CellPhoneNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Basisadresse des Kontakts.</para>
        /// <para xml:lang="en">The base address of this contact.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("address", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Address Address { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Der ISO-3 Ländercode des Kontakts.</para>
        /// <para xml:lang="en">The ISO-3 countrycode for this contact.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("countryCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public CountryCode CountryCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CountryCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CountryCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CountryCodeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Der ISO-3 Ländercode des Kontakts.</para>
        /// <para xml:lang="en">The ISO-3 countrycode for this contact.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<CountryCode> CountryCode
        {
            get
            {
                if (this.CountryCodeValueSpecified)
                {
                    return this.CountryCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountryCodeValue = value.GetValueOrDefault();
                this.CountryCodeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Der Titel des Kontakts</para>
        /// <para xml:lang="en">The contact's title.</para>
        /// <para xml:lang="en">Maximum length: 15.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(15)]
        [System.Xml.Serialization.XmlElementAttribute("title", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Title { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Namenszusatz</para>
        /// <para xml:lang="en">addition to the name</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(30)]
        [System.Xml.Serialization.XmlElementAttribute("additionName", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string AdditionName { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Der Name des Unternehmens</para>
        /// <para xml:lang="en">The name of the company</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("company", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Company { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Homepage des Anbieters</para>
        /// <para xml:lang="en">homepageUrl</para>
        /// <para xml:lang="en">Maximum length: 300.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(300)]
        [System.Xml.Serialization.XmlElementAttribute("homepageUrl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string HomepageUrl { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Url zum Bild des Anbieters</para>
        /// <para xml:lang="en">Url to Contacts Portrait</para>
        /// <para xml:lang="en">Maximum length: 300.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(300)]
        [System.Xml.Serialization.XmlElementAttribute("portraitUrl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string PortraitUrl { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Position oder Taetigkeit im Unternehmen</para>
        /// <para xml:lang="en">The position or function in the company</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("position", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Position { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Anredetyp</para>
    /// <para xml:lang="en">Salutationtype</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SalutationType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum SalutationType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">weibliche Anrede</para>
        /// <para xml:lang="en">female salutation</para>
        /// </summary>
        FEMALE,
        
        /// <summary>
        /// <para xml:lang="de-DE">männnliche Anrede</para>
        /// <para xml:lang="en">male salutation</para>
        /// </summary>
        MALE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Anrede für Firmen</para>
        /// <para xml:lang="en">company salutation</para>
        /// </summary>
        COMPANY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine besondere Anrede.</para>
        /// <para xml:lang="en">No specified salutation.</para>
        /// </summary>
        NO_SALUTATION,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ContactMailCustomStyle", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContactMailCustomStyle
    {
        
        /// <summary>
        /// <para xml:lang="en">color for mail header 1</para>
        /// <para xml:lang="en">Pattern: #([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3}).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})")]
        [System.Xml.Serialization.XmlElementAttribute("header1Color", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Header1Color { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">color for font of the mail header 1</para>
        /// <para xml:lang="en">Pattern: #([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3}).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})")]
        [System.Xml.Serialization.XmlElementAttribute("header1FontColor", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Header1FontColor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">color for mail header 2</para>
        /// <para xml:lang="en">Pattern: #([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3}).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})")]
        [System.Xml.Serialization.XmlElementAttribute("header2Color", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Header2Color { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">color for font of the mail header 2</para>
        /// <para xml:lang="en">Pattern: #([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3}).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})")]
        [System.Xml.Serialization.XmlElementAttribute("header2FontColor", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Header2FontColor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">color for mail header 3</para>
        /// <para xml:lang="en">Pattern: #([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3}).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})")]
        [System.Xml.Serialization.XmlElementAttribute("header3Color", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Header3Color { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">color for font of the mail header 3</para>
        /// <para xml:lang="en">Pattern: #([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3}).</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})")]
        [System.Xml.Serialization.XmlElementAttribute("header3FontColor", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Header3FontColor { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MasterDataContactDetailsType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MasterDataContactDetailsType : BaseContactDetails
    {
        
        /// <summary>
        /// <para xml:lang="en">tells weather the address is a post office box
        ///                            </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("postOfficeBox", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool PostOfficeBoxValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PostOfficeBox-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PostOfficeBox property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PostOfficeBoxValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">tells weather the address is a post office box
        ///                            </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> PostOfficeBox
        {
            get
            {
                if (this.PostOfficeBoxValueSpecified)
                {
                    return this.PostOfficeBoxValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PostOfficeBoxValue = value.GetValueOrDefault();
                this.PostOfficeBoxValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Die Kontaktdaten.</para>
    /// <para xml:lang="en">The contact details.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ContactDetails", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExposeContactDetails))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RealtorContactDetails))]
    public partial class ContactDetails : BaseContactDetails
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Bürozeiten</para>
        /// <para xml:lang="en">office hours</para>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("officeHours", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OfficeHours { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Die Kontaktdaten eines Anbieters</para>
    /// <para xml:lang="de-DE">Die Kontaktdaten eines Anbieters</para>
    /// <para xml:lang="en">The contact details for a realtor.</para>
    /// <para xml:lang="en">The contact details for a realtor.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RealtorContactDetails", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("realtorContactDetail", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public partial class RealtorContactDetails : ContactDetails
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist dies die Standard Adresse des Anbieters?
        ///                            </para>
        /// <para xml:lang="en">Is this the realtors default contact?</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("defaultContact", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool DefaultContactValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DefaultContact-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DefaultContact property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DefaultContactValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist dies die Standard Adresse des Anbieters?
        ///                            </para>
        /// <para xml:lang="en">Is this the realtors default contact?</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> DefaultContact
        {
            get
            {
                if (this.DefaultContactValueSpecified)
                {
                    return this.DefaultContactValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DefaultContactValue = value.GetValueOrDefault();
                this.DefaultContactValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist dies die Adresse eines Partners vor Ort?
        ///                            </para>
        /// <para xml:lang="en">Is this a local partner contact?</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("localPartnerContact", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool LocalPartnerContactValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocalPartnerContact-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LocalPartnerContact property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LocalPartnerContactValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist dies die Adresse eines Partners vor Ort?
        ///                            </para>
        /// <para xml:lang="en">Is this a local partner contact?</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> LocalPartnerContact
        {
            get
            {
                if (this.LocalPartnerContactValueSpecified)
                {
                    return this.LocalPartnerContactValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LocalPartnerContactValue = value.GetValueOrDefault();
                this.LocalPartnerContactValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist dies die Visitenkarte Adresse des Anbieters?
        ///                            </para>
        /// <para xml:lang="en">Is this the realtors business card contact?
        ///                            </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("businessCardContact", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BusinessCardContactValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BusinessCardContact-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BusinessCardContact property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BusinessCardContactValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist dies die Visitenkarte Adresse des Anbieters?
        ///                            </para>
        /// <para xml:lang="en">Is this the realtors business card contact?
        ///                            </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> BusinessCardContact
        {
            get
            {
                if (this.BusinessCardContactValueSpecified)
                {
                    return this.BusinessCardContactValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BusinessCardContactValue = value.GetValueOrDefault();
                this.BusinessCardContactValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der Immobilien die diese Adresse referenzieren
        ///                            </para>
        /// <para xml:lang="en">Number of realestates that reference this contact
        ///                            </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("realEstateReferenceCount", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long RealEstateReferenceCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RealEstateReferenceCount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RealEstateReferenceCount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool RealEstateReferenceCountValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der Immobilien die diese Adresse referenzieren
        ///                            </para>
        /// <para xml:lang="en">Number of realestates that reference this contact
        ///                            </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> RealEstateReferenceCount
        {
            get
            {
                if (this.RealEstateReferenceCountValueSpecified)
                {
                    return this.RealEstateReferenceCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RealEstateReferenceCountValue = value.GetValueOrDefault();
                this.RealEstateReferenceCountValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">
        ///                                Repräsentiert eine kundenspezifische Referenz einer Kontaktadresse.
        ///                                Der Kennzeichner muss eineindeutig in Verbindung mit der Kundennummer sein.
        ///                            </para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">
        ///                                Represents a customer specific identifier for the contact address.
        ///                                This identifier is unique in combination with the customer id.
        ///                            </para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("externalId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ExternalId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kontakt ist sichtbar in Profile Page</para>
        /// <para xml:lang="en">Contact is visible on Profile Page</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("showOnProfilePage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool ShowOnProfilePageValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ShowOnProfilePage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ShowOnProfilePage property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ShowOnProfilePageValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kontakt ist sichtbar in Profile Page</para>
        /// <para xml:lang="en">Contact is visible on Profile Page</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> ShowOnProfilePage
        {
            get
            {
                if (this.ShowOnProfilePageValueSpecified)
                {
                    return this.ShowOnProfilePageValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ShowOnProfilePageValue = value.GetValueOrDefault();
                this.ShowOnProfilePageValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Die Kontaktdaten eines Exposes</para>
    /// <para xml:lang="en">The contact details for an expose.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ExposeContactDetails", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExposeContactDetails : ContactDetails
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">URL zum Relatorlogo</para>
        /// <para xml:lang="en">URL to realtor's logo</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("realtorLogo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string RealtorLogo { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Ein Benutzer</para>
    /// <para xml:lang="en">one user</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("User", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("user", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Searcher.Searcher))]
    public partial class User
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kondaktdaten des Users welche auch die notwendige Emailadresse
        ///                        enthält.
        ///                    </para>
        /// <para xml:lang="en">ContactDetails of the user also includes the required email
        ///                        address..
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("contactDetails", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ContactDetails ContactDetails { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Passwort für die Anlage/Veränderung des Users (ist immer leer bei
        ///                        GET Operationen).
        ///                    </para>
        /// <para xml:lang="en">Password of the user for creation and update (is always empty for
        ///                        GET operations).
        ///                    </para>
        /// <para xml:lang="en">Minimum length: 5. Maximum length: 40.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40, MinimumLength=5)]
        [System.Xml.Serialization.XmlElementAttribute("password", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Password { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id von der Gruppe, falls der Nutzer gemensame Suche/Merkzettel
        ///                        nutzt.
        ///                    </para>
        /// <para xml:lang="en">Id of the Group in case if user is sharing his shortlist.
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("sharedShortlistGroupId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long SharedShortlistGroupIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SharedShortlistGroupId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SharedShortlistGroupId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool SharedShortlistGroupIdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id von der Gruppe, falls der Nutzer gemensame Suche/Merkzettel
        ///                        nutzt.
        ///                    </para>
        /// <para xml:lang="en">Id of the Group in case if user is sharing his shortlist.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> SharedShortlistGroupId
        {
            get
            {
                if (this.SharedShortlistGroupIdValueSpecified)
                {
                    return this.SharedShortlistGroupIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SharedShortlistGroupIdValue = value.GetValueOrDefault();
                this.SharedShortlistGroupIdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Eineindeutige Kennung des Benutzers.</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">Unique ID of the user.</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Id { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Eineindeutige Personen Id des Benutzers.</para>
        /// <para xml:lang="en">Unique PersonID of the user.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("peid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long PeidValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Peid-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Peid property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PeidValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Eineindeutige Personen Id des Benutzers.</para>
        /// <para xml:lang="en">Unique PersonID of the user.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Peid
        {
            get
            {
                if (this.PeidValueSpecified)
                {
                    return this.PeidValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PeidValue = value.GetValueOrDefault();
                this.PeidValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Ein Bild</para>
    /// <para xml:lang="en">A single picture.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Picture", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Picture : Attachment
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _floorplan = false;
        
        /// <summary>
        /// <para xml:lang="de-DE">Gibt an ob dieses Bild einen Grundriss darstellt.
        ///                            </para>
        /// <para xml:lang="en">Indicates whether this picture represents a floorplan.
        ///                            </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("floorplan", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Floorplan
        {
            get
            {
                return this._floorplan;
            }
            set
            {
                this._floorplan = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _titlePicture = false;
        
        /// <summary>
        /// <para xml:lang="de-DE">Gibt an, ob dieses Bild das Titelbild dieser Immobilie
        ///                                ist.
        ///                            </para>
        /// <para xml:lang="en">Indicates whether this picture is the titlepicture of this
        ///                                real estate.
        ///                            </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("titlePicture", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool TitlePicture
        {
            get
            {
                return this._titlePicture;
            }
            set
            {
                this._titlePicture = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<PictureUrlsUrl> _urls;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("urls", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<PictureUrlsUrl> Urls
        {
            get
            {
                return this._urls;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Urls-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Urls collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UrlsSpecified
        {
            get
            {
                return (this.Urls.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Picture" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Picture" /> class.</para>
        /// </summary>
        public Picture()
        {
            this._urls = new System.Collections.ObjectModel.Collection<PictureUrlsUrl>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PictureUrls", Namespace="http://rest.immobilienscout24.de/schema/common/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PictureUrls
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<PictureUrlsUrl> _url;
        
        /// <summary>
        /// <para xml:lang="de-DE">URL des Bildes.</para>
        /// <para xml:lang="en">URL for the picture.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<PictureUrlsUrl> Url
        {
            get
            {
                return this._url;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PictureUrls" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PictureUrls" /> class.</para>
        /// </summary>
        public PictureUrls()
        {
            this._url = new System.Collections.ObjectModel.Collection<PictureUrlsUrl>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PictureUrlsUrl", Namespace="http://rest.immobilienscout24.de/schema/common/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PictureUrlsUrl
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildergröße</para>
        /// <para xml:lang="en">picture scale</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("scale", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PictureScaleType ScaleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Scale-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Scale property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ScaleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildergröße</para>
        /// <para xml:lang="en">picture scale</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<PictureScaleType> Scale
        {
            get
            {
                if (this.ScaleValueSpecified)
                {
                    return this.ScaleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ScaleValue = value.GetValueOrDefault();
                this.ScaleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">URL zum skaliertem Bild
        ///                                                </para>
        /// <para xml:lang="en">URL to scaled picture</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Href { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Ein Dokument</para>
    /// <para xml:lang="en">A document</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ExtendedAttachment", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PDFDocument))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(VideoFile))]
    public partial class ExtendedAttachment : Attachment
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">URL zum Anhang</para>
        /// <para xml:lang="en">URL to the attachment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string Url { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Ein gestreamtes Video</para>
    /// <para xml:lang="en">A video streaming</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StreamingVideo", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StreamingVideo : Attachment
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Identifikationsnummer des Videos</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">the video identifier</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("videoId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string VideoId { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">streaming video urls von screen9</para>
    /// <para xml:lang="en">screen9 streaming video urls</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("VideoInfo", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VideoInfo
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<VideoUrlList> _videoUrlList;
        
        /// <summary>
        /// <para xml:lang="de-DE">streaming video url Liste von screen9</para>
        /// <para xml:lang="en">screen9 streaming video url list</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("videoUrlList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<VideoUrlList> VideoUrlList
        {
            get
            {
                return this._videoUrlList;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="VideoInfo" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="VideoInfo" /> class.</para>
        /// </summary>
        public VideoInfo()
        {
            this._videoUrlList = new System.Collections.ObjectModel.Collection<VideoUrlList>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Video Abspieldauer in ms</para>
        /// <para xml:lang="en">Video duration in ms</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("duration", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DurationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Duration-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Duration property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DurationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Video Abspieldauer in ms</para>
        /// <para xml:lang="en">Video duration in ms</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> Duration
        {
            get
            {
                if (this.DurationValueSpecified)
                {
                    return this.DurationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DurationValue = value.GetValueOrDefault();
                this.DurationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teaser Bild für das gegebene Video</para>
        /// <para xml:lang="en">Picture teaser for this video</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("teaserUrl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string TeaserUrl { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Titel vom Video</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">Title of the video</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("title", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Title { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Progress in percent information for media which is either processing or re-processing.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 100.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("processingProgress", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int ProcessingProgressValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProcessingProgress-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProcessingProgress property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ProcessingProgressValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Progress in percent information for media which is either processing or re-processing.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 100.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> ProcessingProgress
        {
            get
            {
                if (this.ProcessingProgressValueSpecified)
                {
                    return this.ProcessingProgressValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ProcessingProgressValue = value.GetValueOrDefault();
                this.ProcessingProgressValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">The status of this media</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("processingStatus", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public VideoProcessingStatusType ProcessingStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProcessingStatus-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProcessingStatus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ProcessingStatusValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">The status of this media</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<VideoProcessingStatusType> ProcessingStatus
        {
            get
            {
                if (this.ProcessingStatusValueSpecified)
                {
                    return this.ProcessingStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ProcessingStatusValue = value.GetValueOrDefault();
                this.ProcessingStatusValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">eine Entität einer screen9 streaming video url mit dem video Format</para>
    /// <para xml:lang="en">screen9 single entity for one url</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("videoUrlList", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VideoUrlList
    {
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("format", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Format { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Url { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("videoProcessingStatusType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum VideoProcessingStatusType
    {
        
        /// <summary>
        /// <para xml:lang="en">media status is incomming</para>
        /// </summary>
        INCOMING,
        
        /// <summary>
        /// <para xml:lang="en">media status is processing</para>
        /// </summary>
        PROCESSING,
        
        /// <summary>
        /// <para xml:lang="en">media status is successful</para>
        /// </summary>
        SUCCESSFUL,
        
        /// <summary>
        /// <para xml:lang="en">media status is failed</para>
        /// </summary>
        FAILED,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Ein PDF-Dokument</para>
    /// <para xml:lang="en">A pdf document</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PDFDocument", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PDFDocument : ExtendedAttachment
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _floorplan = false;
        
        /// <summary>
        /// <para xml:lang="de-DE">Gibt an ob dieses Bild einen Grundriss darstellt.
        ///                            </para>
        /// <para xml:lang="en">Indicates whether this picture represents a floorplan.
        ///                            </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("floorplan", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Floorplan
        {
            get
            {
                return this._floorplan;
            }
            set
            {
                this._floorplan = value;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eine Videodatei</para>
    /// <para xml:lang="en">A video file</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("VideoFile", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VideoFile : ExtendedAttachment
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Ein Verweis</para>
    /// <para xml:lang="en">A link</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Link", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Link : Attachment
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">URL des Verweises</para>
        /// <para xml:lang="en">URL of the link</para>
        /// <para xml:lang="en">Maximum length: 255.</para>
        /// <para xml:lang="en">Pattern: (http|https)://\w.*[.]\w.*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(255)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(http|https)://\\w.*[.]\\w.*")]
        [System.Xml.Serialization.XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Url { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Ein Preis der für Budgets benutzt wird</para>
    /// <para xml:lang="en">A price with a scope concerning a budget</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BudgetPrice", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BudgetPrice : Price
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Wenn der Preis-Typ BUDGET_RENT ist, dann Informiert
        ///                                dieses Element, welche Kosten in "value" enthalten sind.
        ///                            </para>
        /// <para xml:lang="en">If the price type is BUDGET_RENT, this element tells you,
        ///                                what you are paying with "value"
        ///                            </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("rentScope", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public RentScopeType RentScopeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RentScope-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RentScope property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool RentScopeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wenn der Preis-Typ BUDGET_RENT ist, dann Informiert
        ///                                dieses Element, welche Kosten in "value" enthalten sind.
        ///                            </para>
        /// <para xml:lang="en">If the price type is BUDGET_RENT, this element tells you,
        ///                                what you are paying with "value"
        ///                            </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<RentScopeType> RentScope
        {
            get
            {
                if (this.RentScopeValueSpecified)
                {
                    return this.RentScopeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RentScopeValue = value.GetValueOrDefault();
                this.RentScopeValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Basistyp für Preise.</para>
    /// <para xml:lang="en">General type for prices.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Price", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BudgetPrice))]
    public partial class Price
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis</para>
        /// <para xml:lang="en">value</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("value", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Währung des Preises (i.d.R EUR)</para>
        /// <para xml:lang="en">Currency of the price (generally EUR)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("currency", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Currency Currency { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bestimmt die Bedeutung des Preises näher. Pflichtfeld
        ///                        für Gewerbeimmobilien.</para>
        /// <para xml:lang="en">Defines the meaning of the price value. Mandatory for
        ///                        commercial real estates.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("marketingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public MarketingType MarketingTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MarketingType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MarketingType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MarketingTypeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bestimmt die Bedeutung des Preises näher. Pflichtfeld
        ///                        für Gewerbeimmobilien.</para>
        /// <para xml:lang="en">Defines the meaning of the price value. Mandatory for
        ///                        commercial real estates.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<MarketingType> MarketingType
        {
            get
            {
                if (this.MarketingTypeValueSpecified)
                {
                    return this.MarketingTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MarketingTypeValue = value.GetValueOrDefault();
                this.MarketingTypeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Das Intervall um den Preis zu zahlen (Tag, Monat, Jahr,
        ///                        einmalig).
        ///                    </para>
        /// <para xml:lang="en">The interval to pay the price (day, month, year, one-time charge).
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("priceIntervalType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PriceIntervalType PriceIntervalTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PriceIntervalType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PriceIntervalType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PriceIntervalTypeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Das Intervall um den Preis zu zahlen (Tag, Monat, Jahr,
        ///                        einmalig).
        ///                    </para>
        /// <para xml:lang="en">The interval to pay the price (day, month, year, one-time charge).
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<PriceIntervalType> PriceIntervalType
        {
            get
            {
                if (this.PriceIntervalTypeValueSpecified)
                {
                    return this.PriceIntervalTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PriceIntervalTypeValue = value.GetValueOrDefault();
                this.PriceIntervalTypeValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Unterstützte Währungen</para>
    /// <para xml:lang="en">Enumeration of supported currencies</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Currency", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum Currency
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Euro</para>
        /// <para xml:lang="en">Euro</para>
        /// </summary>
        EUR,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Unterstützte Vermarktungsarten (Miete, Kauf oder Pacht)
    ///            </para>
    /// <para xml:lang="en">Supported marketing types (rent, buy or lease)</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MarketingType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum MarketingType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kauf</para>
        /// <para xml:lang="en">purchase</para>
        /// </summary>
        PURCHASE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kauf pro Quadratmeter</para>
        /// <para xml:lang="en">purchase per square metre</para>
        /// </summary>
        PURCHASE_PER_SQM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Miete</para>
        /// <para xml:lang="en">rent</para>
        /// </summary>
        RENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Miete pro Quadratmeter</para>
        /// <para xml:lang="en">rent per square metre</para>
        /// </summary>
        RENT_PER_SQM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Pacht</para>
        /// <para xml:lang="en">lease</para>
        /// </summary>
        LEASE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Erbpacht</para>
        /// <para xml:lang="en">leasehold</para>
        /// </summary>
        LEASEHOLD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtmiete aus allen verfügbaren Miet-Informationen zum
        ///                        Vergleich zu einem gegebenen Monatsbudget
        ///                    </para>
        /// <para xml:lang="en">all available rent information to compare against a monthly budget
        ///                    </para>
        /// </summary>
        BUDGET_RENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Miete und Kauf</para>
        /// <para xml:lang="en">rent and buy</para>
        /// </summary>
        RENT_AND_BUY,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Das Intervall um den Preis zu zahlen (Tag, Monat, Jahr, einmalig)
    ///            </para>
    /// <para xml:lang="en">The interval to pay the price (day, month, year, one-time charge)
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PriceIntervalType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum PriceIntervalType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Zahlung pro Tag</para>
        /// <para xml:lang="en">Pay per day</para>
        /// </summary>
        DAY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Zahlung pro Woche</para>
        /// <para xml:lang="en">Pay per week</para>
        /// </summary>
        WEEK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Zahlung pro Monat</para>
        /// <para xml:lang="en">Pay per month</para>
        /// </summary>
        MONTH,
        
        /// <summary>
        /// <para xml:lang="de-DE">Zahlung pro Jahr</para>
        /// <para xml:lang="en">Pay per year</para>
        /// </summary>
        YEAR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Einmalzahlung</para>
        /// <para xml:lang="en">One time charge</para>
        /// </summary>
        ONE_TIME_CHARGE,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Die zur Bildung der Gesamtmiete zur Verfügung stehenden Informationen.
    ///            </para>
    /// <para xml:lang="en">Contained scope for budget rent information</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RentScopeType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum RentScopeType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Netto Kaltmiete ohne irgendwelche Betriebskosten
        ///                    </para>
        /// <para xml:lang="en">net rent per month without any service charges</para>
        /// </summary>
        NET_RENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Netto Kaltmiete plus Betriebskosten Kalt</para>
        /// <para xml:lang="en">net rent plus service charges cold</para>
        /// </summary>
        GROSS_RENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Netto Kaltmiete plus Betriebskosten Kalt und Warm, mit
        ///                        Inkonsistenzen
        ///                    </para>
        /// <para xml:lang="en">net rent plus service charges cold and warm, inconsistent
        ///                    </para>
        /// </summary>
        INCONSISTENT_WARM_RENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Netto Kaltmiete plus Betriebskosten Kalt und Warm
        ///                    </para>
        /// <para xml:lang="en">net rent plus service charges cold and warm</para>
        /// </summary>
        WARM_RENT,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Money", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Money
    {
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("amount", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="decimal")]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("currency", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Currency Currency { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Money13.2", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Money13Period2
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Typ zur Validierung</para>
        /// <para xml:lang="en">type for validation</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 10000000000000.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("amount", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Amount { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("currency", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Currency Currency { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Typen für Preise.</para>
    /// <para xml:lang="en">General types for prices.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PriceType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum PriceType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Miete pro Monat</para>
        /// <para xml:lang="en">rent per month</para>
        /// </summary>
        RENT_PER_MONTH,
        
        /// <summary>
        /// <para xml:lang="de-DE">Miete pro Quadratmeter</para>
        /// <para xml:lang="en">rent per squaremeter</para>
        /// </summary>
        RENT_PER_SQM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaufpreis</para>
        /// <para xml:lang="en">purchase price</para>
        /// </summary>
        PURCHASE_PRICE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Pacht</para>
        /// <para xml:lang="en">lease amount</para>
        /// </summary>
        LEASE,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CourtageInfo", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CourtageInfo
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionpflichtig:'YES' oder 'NO', der Wert NOT_APPLICABLE ist nicht mehr erlaubt.</para>
        /// <para xml:lang="en">has courtage: 'YES' or 'NO'. The value NOT_APPLICABLE is no more allowed</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("hasCourtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public YesNoNotApplicableType HasCourtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionshöhe, muss spezifiziert werden wenn hasCourtage 'YES' ist</para>
        /// <para xml:lang="en">courtage, must be provided if hasCourtage is 'YES'</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionshinweis</para>
        /// <para xml:lang="en">courtage note</para>
        /// <para xml:lang="en">Maximum length: 1800.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(1800)]
        [System.Xml.Serialization.XmlElementAttribute("courtageNote", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CourtageNote { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung für Tristate-Boolean-Elemente (boolesche Werte die drei
    ///                Status abbilden können).
    ///            </para>
    /// <para xml:lang="en">Enumeration for thristate boolean elements.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("YesNoNotApplicableType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum YesNoNotApplicableType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Ja</para>
        /// <para xml:lang="en">yes</para>
        /// </summary>
        YES,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nein</para>
        /// <para xml:lang="en">no</para>
        /// </summary>
        NO,
        
        /// <summary>
        /// <para xml:lang="de-DE">keine Angabe</para>
        /// <para xml:lang="en">not applicable</para>
        /// </summary>
        NOT_APPLICABLE,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CountyCourt", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountyCourt
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 16.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.Xml.Serialization.XmlElementAttribute("courtNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string CourtNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 40.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        [System.Xml.Serialization.XmlElementAttribute("name", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Name { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Befeuerungsarten</para>
    /// <para xml:lang="en">firing types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FiringTypes", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FiringTypes
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<FiringType> _firingType;
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsart</para>
        /// <para xml:lang="en">firing type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("firingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<FiringType> FiringType
        {
            get
            {
                return this._firingType;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FiringType-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the FiringType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FiringTypeSpecified
        {
            get
            {
                return (this.FiringType.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="FiringTypes" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="FiringTypes" /> class.</para>
        /// </summary>
        public FiringTypes()
        {
            this._firingType = new System.Collections.ObjectModel.Collection<FiringType>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">DEPRECATED benutze EnergySourceEnev2014 Auflistung der wesentlichen Energieträger</para>
    /// <para xml:lang="en">DEPRECATED use EnergySourceEnev2014 Enumeration for energy sources</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FiringType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum FiringType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Erdwärme</para>
        /// <para xml:lang="en">geothermal</para>
        /// </summary>
        GEOTHERMAL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Solarheizung</para>
        /// <para xml:lang="en">solar heating</para>
        /// </summary>
        SOLAR_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Pelletheizung</para>
        /// <para xml:lang="en">pellet heating</para>
        /// </summary>
        PELLET_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gas</para>
        /// <para xml:lang="en">gas</para>
        /// </summary>
        GAS,
        
        /// <summary>
        /// <para xml:lang="de-DE">Öl</para>
        /// <para xml:lang="en">oil</para>
        /// </summary>
        OIL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Fernwärme</para>
        /// <para xml:lang="en">district heating</para>
        /// </summary>
        DISTRICT_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Strom</para>
        /// <para xml:lang="en">electricity</para>
        /// </summary>
        ELECTRICITY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kohle</para>
        /// <para xml:lang="en">coal</para>
        /// </summary>
        COAL,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">wesentliche Energieträger</para>
    /// <para xml:lang="en">energy sources</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EnergySourcesEnev2014", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnergySourcesEnev2014
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<EnergySourceEnev2014> _energySourceEnev2014;
        
        /// <summary>
        /// <para xml:lang="de-DE">wesentliche Energieträger</para>
        /// <para xml:lang="en">energy source</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("energySourceEnev2014", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<EnergySourceEnev2014> EnergySourceEnev2014
        {
            get
            {
                return this._energySourceEnev2014;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergySourceEnev2014-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the EnergySourceEnev2014 collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnergySourceEnev2014Specified
        {
            get
            {
                return (this.EnergySourceEnev2014.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="EnergySourcesEnev2014" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="EnergySourcesEnev2014" /> class.</para>
        /// </summary>
        public EnergySourcesEnev2014()
        {
            this._energySourceEnev2014 = new System.Collections.ObjectModel.Collection<EnergySourceEnev2014>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Auflistung der wesentlichen Energieträger für Energiezertifikat</para>
    /// <para xml:lang="en">enumeration for energy sources for energy certificate</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EnergySourceEnev2014", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum EnergySourceEnev2014
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Erdwärme</para>
        /// <para xml:lang="en">geothermal</para>
        /// </summary>
        GEOTHERMAL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Solarheizung</para>
        /// <para xml:lang="en">solar heating</para>
        /// </summary>
        SOLAR_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Pelletheizung</para>
        /// <para xml:lang="en">pellet heating</para>
        /// </summary>
        PELLET_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gas</para>
        /// <para xml:lang="en">gas</para>
        /// </summary>
        GAS,
        
        /// <summary>
        /// <para xml:lang="de-DE">Öl</para>
        /// <para xml:lang="en">oil</para>
        /// </summary>
        OIL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Fernwärme</para>
        /// <para xml:lang="en">district heating</para>
        /// </summary>
        DISTRICT_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Strom</para>
        /// <para xml:lang="en">electricity</para>
        /// </summary>
        ELECTRICITY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kohle</para>
        /// <para xml:lang="en">coal</para>
        /// </summary>
        COAL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Erdgas leicht</para>
        /// <para xml:lang="en">acid gas</para>
        /// </summary>
        ACID_GAS,
        
        /// <summary>
        /// <para xml:lang="de-DE">Erdgas schwer</para>
        /// <para xml:lang="en">sour gas</para>
        /// </summary>
        SOUR_GAS,
        
        /// <summary>
        /// <para xml:lang="de-DE">Flüssiggas</para>
        /// <para xml:lang="en">liquid gas</para>
        /// </summary>
        LIQUID_GAS,
        
        /// <summary>
        /// <para xml:lang="de-DE">Fernwärme Dampf</para>
        /// <para xml:lang="en">steam district heating</para>
        /// </summary>
        STEAM_DISTRICT_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Holz</para>
        /// <para xml:lang="en">wood</para>
        /// </summary>
        WOOD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Holz-Hackschnitzel</para>
        /// <para xml:lang="en">wood chips</para>
        /// </summary>
        WOOD_CHIPS,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kohle/Koks</para>
        /// <para xml:lang="en">coal/coke</para>
        /// </summary>
        COAL_COKE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nahwärme</para>
        /// <para xml:lang="en">local heating</para>
        /// </summary>
        LOCAL_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wärmelieferung</para>
        /// <para xml:lang="en">heat supply</para>
        /// </summary>
        HEAT_SUPPLY,
        
        /// <summary>
        /// <para xml:lang="de-DE">BIO Energie</para>
        /// <para xml:lang="en">bio energy</para>
        /// </summary>
        BIO_ENERGY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Windenergie</para>
        /// <para xml:lang="en">wind energy</para>
        /// </summary>
        WIND_ENERGY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wasserenergie</para>
        /// <para xml:lang="en">hydro energy</para>
        /// </summary>
        HYDRO_ENERGY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Umweltwärme</para>
        /// <para xml:lang="en">environmental thermal energy</para>
        /// </summary>
        ENVIRONMENTAL_THERMAL_ENERGY,
        
        /// <summary>
        /// <para xml:lang="de-DE">KWK fossil</para>
        /// <para xml:lang="en">combined heat and power fossil fuels</para>
        /// </summary>
        COMBINED_HEAT_AND_POWER_FOSSIL_FUELS,
        
        /// <summary>
        /// <para xml:lang="de-DE">KWK erneuerbar</para>
        /// <para xml:lang="en">combined heat and power renewable energy</para>
        /// </summary>
        COMBINED_HEAT_AND_POWER_RENEWABLE_ENERGY,
        
        /// <summary>
        /// <para xml:lang="de-DE">KWK regenerativ</para>
        /// <para xml:lang="en">combined heat and power regenerative energy</para>
        /// </summary>
        COMBINED_HEAT_AND_POWER_REGENERATIVE_ENERGY,
        
        /// <summary>
        /// <para xml:lang="de-DE">KWK bio</para>
        /// <para xml:lang="en">combined heat and power bio energy</para>
        /// </summary>
        COMBINED_HEAT_AND_POWER_BIO_ENERGY,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Ermöglicht die seitenweise Iteration über Daten(1-basiert).
    ///            </para>
    /// <para xml:lang="en">Provides one-based paging functionality.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Paging", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Paging
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Referenz auf die nächste Ergebnissseite.</para>
        /// <para xml:lang="en">Reference to the next result page.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("next", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReferenceLink Next { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Referenz auf die vorherige Seite.</para>
        /// <para xml:lang="en">Reference to the previous result page.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("previous", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ReferenceLink Previous { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nummer der aktuellen Seite.</para>
        /// <para xml:lang="en">Number of the current page.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("pageNumber", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int PageNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PageNumber-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PageNumber property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PageNumberValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nummer der aktuellen Seite.</para>
        /// <para xml:lang="en">Number of the current page.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> PageNumber
        {
            get
            {
                if (this.PageNumberValueSpecified)
                {
                    return this.PageNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PageNumberValue = value.GetValueOrDefault();
                this.PageNumberValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl von Ergebnise pro Seite.</para>
        /// <para xml:lang="en">The number of entries per page.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("pageSize", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int PageSizeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PageSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PageSize property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PageSizeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl von Ergebnise pro Seite.</para>
        /// <para xml:lang="en">The number of entries per page.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> PageSize
        {
            get
            {
                if (this.PageSizeValueSpecified)
                {
                    return this.PageSizeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PageSizeValue = value.GetValueOrDefault();
                this.PageSizeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtanzahl von Seiten.</para>
        /// <para xml:lang="en">The total count of pages.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("numberOfPages", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfPagesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfPages-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfPages property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NumberOfPagesValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtanzahl von Seiten.</para>
        /// <para xml:lang="en">The total count of pages.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> NumberOfPages
        {
            get
            {
                if (this.NumberOfPagesValueSpecified)
                {
                    return this.NumberOfPagesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberOfPagesValue = value.GetValueOrDefault();
                this.NumberOfPagesValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _numberOfHits = 0;
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der Suchergebnisse.</para>
        /// <para xml:lang="en">Number of the hits.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfHits", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfHits
        {
            get
            {
                return this._numberOfHits;
            }
            set
            {
                this._numberOfHits = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private int _numberOfListings = 0;
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der Sucheinträge.</para>
        /// <para xml:lang="en">Number of the listingss.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfListings", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int NumberOfListings
        {
            get
            {
                return this._numberOfListings;
            }
            set
            {
                this._numberOfListings = value;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Link</para>
    /// <para xml:lang="en">Link</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ReferenceLink", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReferenceLink
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Referenz auf andere Entitäten.</para>
        /// <para xml:lang="en">Reference to other entities.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Liste der Trefferzahlen zu den Verfeinerungskriterien.</para>
    /// <para xml:lang="en">List of all match counts.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MatchCountList", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatchCountList
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MatchCount> _matchCount;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("matchCount", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<MatchCount> MatchCount
        {
            get
            {
                return this._matchCount;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MatchCount-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the MatchCount collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MatchCountSpecified
        {
            get
            {
                return (this.MatchCount.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MatchCountList" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MatchCountList" /> class.</para>
        /// </summary>
        public MatchCountList()
        {
            this._matchCount = new System.Collections.ObjectModel.Collection<MatchCount>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Trefferzahl zu Verfeinerungskriterium.</para>
    /// <para xml:lang="en">a match count.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MatchCount", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatchCount
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Der Name dieses Verfeinerungskriteriums.</para>
        /// <para xml:lang="en">The name of this match.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("name", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Name { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Der Wert dieses Verfeinerungskriteriums.</para>
        /// <para xml:lang="en">The value of this match.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("value", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Anzahl an Treffern für dieses Verfeinerungskriterium.
        ///                </para>
        /// <para xml:lang="en">The count of matches for this name and value.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("count", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int CountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Count-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Count property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CountValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Anzahl an Treffern für dieses Verfeinerungskriterium.
        ///                </para>
        /// <para xml:lang="en">The count of matches for this name and value.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> Count
        {
            get
            {
                if (this.CountValueSpecified)
                {
                    return this.CountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CountValue = value.GetValueOrDefault();
                this.CountValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung für Tristate-Boolean-Elemente (boolesche Werte die drei
    ///                Status abbilden können).
    ///            </para>
    /// <para xml:lang="en">Enumeration for tristate boolean elements.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("YesNoBothType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum YesNoBothType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Ja</para>
        /// <para xml:lang="en">yes</para>
        /// </summary>
        YES,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nein</para>
        /// <para xml:lang="en">no</para>
        /// </summary>
        NO,
        
        /// <summary>
        /// <para xml:lang="de-DE">beide</para>
        /// <para xml:lang="en">both</para>
        /// </summary>
        BOTH,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung für zwei-status Elemente</para>
    /// <para xml:lang="en">Enumeration for two-state boolean elements</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("YesNotApplicableType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum YesNotApplicableType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Ja</para>
        /// <para xml:lang="en">yes</para>
        /// </summary>
        YES,
        
        /// <summary>
        /// <para xml:lang="de-DE">keine Angabe</para>
        /// <para xml:lang="en">not applicable</para>
        /// </summary>
        NOT_APPLICABLE,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung für ein-status Elemente mit true, anderfalls muss weggelassen sein</para>
    /// <para xml:lang="en">Enumeration for one-state boolean elements with true, in other fall should be ommited</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TrueOnlyType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum TrueOnlyType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">wahr</para>
        /// <para xml:lang="en">true</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("true")]
        True,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung für Pflichtfeld oder optionales Feld</para>
    /// <para xml:lang="en">Enumeration for optional or mandatory elements</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MandatoryOptionalType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum MandatoryOptionalType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflichtfeld</para>
        /// <para xml:lang="en">mandatory</para>
        /// </summary>
        MANDATORY,
        
        /// <summary>
        /// <para xml:lang="de-DE">optionales Feld</para>
        /// <para xml:lang="en">optional</para>
        /// </summary>
        OPTIONAL,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Auflistung der verfuegbaren Wohnungsarten</para>
    /// <para xml:lang="en">Enumeration for apartment types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ApartmentType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum ApartmentType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Dachgeschoss</para>
        /// <para xml:lang="en">roof storey</para>
        /// </summary>
        ROOF_STOREY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Loft</para>
        /// <para xml:lang="en">loft</para>
        /// </summary>
        LOFT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Maisonette</para>
        /// <para xml:lang="en">maisonette</para>
        /// </summary>
        MAISONETTE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Penthouse</para>
        /// <para xml:lang="en">penthouse</para>
        /// </summary>
        PENTHOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Terrassenwohnung</para>
        /// <para xml:lang="en">terraced flat</para>
        /// </summary>
        TERRACED_FLAT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Erdgeschosswohnung</para>
        /// <para xml:lang="en">ground floor</para>
        /// </summary>
        GROUND_FLOOR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenwohnung</para>
        /// <para xml:lang="en">apartment</para>
        /// </summary>
        APARTMENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Hochparterre</para>
        /// <para xml:lang="en">raised ground floor</para>
        /// </summary>
        RAISED_GROUND_FLOOR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Souterrain</para>
        /// <para xml:lang="en">half basement</para>
        /// </summary>
        HALF_BASEMENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Sonstige</para>
        /// <para xml:lang="en">other</para>
        /// </summary>
        OTHER,
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe (wird zusammen mit OTHER verwendet)
        ///                    </para>
        /// <para xml:lang="en">no information (used in conjunction with OTHER)</para>
        /// <para xml:lang="en">[Obsolete]</para>
        /// </summary>
        NO_INFORMATION,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Auflistung der verfuegbaren Gebäudearten</para>
    /// <para xml:lang="en">Enumeration for building types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BuildingType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum BuildingType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe (wird zusammen mit OTHER verwendet)
        ///                    </para>
        /// <para xml:lang="en">no information (used in conjunction with OTHER)</para>
        /// <para xml:lang="en">[Obsolete]</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Einfamilienhaus (freistehend)</para>
        /// <para xml:lang="en">single family house</para>
        /// </summary>
        SINGLE_FAMILY_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Reihenmittelhaus</para>
        /// <para xml:lang="en">mid terrace house</para>
        /// </summary>
        MID_TERRACE_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Reiheneckhaus</para>
        /// <para xml:lang="en">end terrace house</para>
        /// </summary>
        END_TERRACE_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Mehrfamilienhaus</para>
        /// <para xml:lang="en">multi family house</para>
        /// </summary>
        MULTI_FAMILY_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bungalow</para>
        /// <para xml:lang="en">bungalow</para>
        /// </summary>
        BUNGALOW,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bauernhaus</para>
        /// <para xml:lang="en">farm house</para>
        /// </summary>
        FARMHOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Doppelhaushälfte</para>
        /// <para xml:lang="en">semi detached house</para>
        /// </summary>
        SEMIDETACHED_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Villa</para>
        /// <para xml:lang="en">villa</para>
        /// </summary>
        VILLA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Burg/Schloss</para>
        /// <para xml:lang="en">castle manor house</para>
        /// </summary>
        CASTLE_MANOR_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Besondere Immobilie</para>
        /// <para xml:lang="en">special real estate</para>
        /// </summary>
        SPECIAL_REAL_ESTATE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Reihenhaus</para>
        /// <para xml:lang="en">terrace house</para>
        /// </summary>
        TERRACE_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnimmobilie (sonstige)</para>
        /// <para xml:lang="en">other</para>
        /// </summary>
        OTHER,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung des Typen von Wohnen auf Zeit (Wohnung, Zimmer oder Haus)
    ///            </para>
    /// <para xml:lang="en">Enumeration of the types of the short term accomodation (apartment,
    ///                room or house)
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ShortTermAccommodationType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum ShortTermAccommodationType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnung und Apartment</para>
        /// <para xml:lang="en">apartment or flat</para>
        /// </summary>
        APARTMENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnung</para>
        /// <para xml:lang="en">flat</para>
        /// </summary>
        FLAT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Haus</para>
        /// <para xml:lang="en">house</para>
        /// </summary>
        HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmer</para>
        /// <para xml:lang="en">room</para>
        /// </summary>
        ROOM,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung der
    ///                Pflegeplatztypen
    ///            </para>
    /// <para xml:lang="en">Enumeration of types of
    ///                care
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CareType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum CareType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vollstationäre Pflege
        ///                    </para>
        /// <para xml:lang="en">stationary care
        ///                    </para>
        /// </summary>
        STATIONARY_CARE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Tagespflege
        ///                    </para>
        /// <para xml:lang="en">day care
        ///                    </para>
        /// </summary>
        DAY_CARE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kurzzeitpflege
        ///                    </para>
        /// <para xml:lang="en">short term care
        ///                    </para>
        /// </summary>
        SHORT_TERM_CARE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Verhinderungspflege
        ///                    </para>
        /// <para xml:lang="en">respite care
        ///                    </para>
        /// </summary>
        RESPITE_CARE,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung der
    ///                Zimmertypen von Altenpflegeeinrichtungen.
    ///            </para>
    /// <para xml:lang="en">Enumeration of room types
    ///                for senior care facilities.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RoomType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum RoomType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Einzelzimmer
        ///                    </para>
        /// <para xml:lang="en">a single room
        ///                    </para>
        /// </summary>
        SINGLE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Mehrbettzimmer
        ///                    </para>
        /// <para xml:lang="en">a shared room (multiple occupancy)
        ///                    </para>
        /// </summary>
        SHARED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Einzel- und Mehrbettzimmer
        ///                    </para>
        /// <para xml:lang="en">single and shared rooms
        ///                    </para>
        /// </summary>
        SINGLE_AND_SHARED,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung für Vorhandensein eines Balkones.</para>
    /// <para xml:lang="en">Enumeration if a balcony is available.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BalconyAvailableType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum BalconyAvailableType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Ja</para>
        /// <para xml:lang="en">yes</para>
        /// </summary>
        YES,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nein</para>
        /// <para xml:lang="en">no</para>
        /// </summary>
        NO,
        
        /// <summary>
        /// <para xml:lang="de-DE">keine Angabe</para>
        /// <para xml:lang="en">not applicable</para>
        /// </summary>
        NOT_APPLICABLE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilweise</para>
        /// <para xml:lang="en">partially</para>
        /// </summary>
        PARTIALLY,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung der versorgten
    ///                Pflegestufen einer Altenpflegeeinrichtung.
    ///            </para>
    /// <para xml:lang="en">Enumeration of care
    ///                levels for senior care facilities.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CareLevel", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum CareLevel
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflegestufe 1
        ///                    </para>
        /// <para xml:lang="en">care level 1
        ///                    </para>
        /// </summary>
        CARE_LEVEL_1,
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflegestufe 2
        ///                    </para>
        /// <para xml:lang="en">care level 2
        ///                    </para>
        /// </summary>
        CARE_LEVEL_2,
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflegestufe 3
        ///                    </para>
        /// <para xml:lang="en">care level 3
        ///                    </para>
        /// </summary>
        CARE_LEVEL_3,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung der versorgten
    ///                Pflegestufen einer Altenpflegeeinrichtung für Exposes.
    ///            </para>
    /// <para xml:lang="en">Enumeration of care
    ///                levels for senior care facilities for exposes.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CareLevelExpose", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum CareLevelExpose
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflegestufe 1
        ///                    </para>
        /// <para xml:lang="en">care level 1
        ///                    </para>
        /// </summary>
        CARE_LEVEL_1,
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflegestufe 2
        ///                    </para>
        /// <para xml:lang="en">care level 2
        ///                    </para>
        /// </summary>
        CARE_LEVEL_2,
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflegestufe 3
        ///                    </para>
        /// <para xml:lang="en">care level 3
        ///                    </para>
        /// </summary>
        CARE_LEVEL_3,
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflegestufen 1 und 2
        ///                    </para>
        /// <para xml:lang="en">care levels 1 and 2
        ///                    </para>
        /// </summary>
        CARE_LEVEL_1_AND_2,
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflegestufen 2 und 3
        ///                    </para>
        /// <para xml:lang="en">care levels 2 and 3
        ///                    </para>
        /// </summary>
        CARE_LEVEL_2_AND_3,
        
        /// <summary>
        /// <para xml:lang="de-DE">Alle Pflegestufen
        ///                    </para>
        /// <para xml:lang="en">all care levels
        ///                    </para>
        /// </summary>
        ALL,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung der Arten von Gatronomie, wie z.B. Hotels, Diskotheken oder
    ///                Restaurants
    ///            </para>
    /// <para xml:lang="en">Enumeration of types for gastronomy like hotels, clubs or restaurants
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GastronomyType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum GastronomyType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Barbetrieb/Lounge</para>
        /// <para xml:lang="en">bar or lounge</para>
        /// </summary>
        BAR_LOUNGE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Cafe</para>
        /// <para xml:lang="en">cafe</para>
        /// </summary>
        CAFE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Club/Diskothek</para>
        /// <para xml:lang="en">club or discothek</para>
        /// </summary>
        CLUB_DISCO,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gästehaus</para>
        /// <para xml:lang="en">guest house</para>
        /// </summary>
        GUESTS_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gaststätte</para>
        /// <para xml:lang="en">tavern</para>
        /// </summary>
        TAVERN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Hotel</para>
        /// <para xml:lang="en">hotel</para>
        /// </summary>
        HOTEL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Hotelanwesen</para>
        /// <para xml:lang="en">hotel residence</para>
        /// </summary>
        HOTEL_RESIDENCE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Hotel garni (Ein Hotel, dass nur Frühstück anbietet /Tageshotel)
        ///                    </para>
        /// <para xml:lang="en">hotel garni (hotel with breakfast only)</para>
        /// </summary>
        HOTEL_GARNI,
        
        /// <summary>
        /// <para xml:lang="de-DE">Pension</para>
        /// <para xml:lang="en">pension</para>
        /// </summary>
        PENSION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Restaurant</para>
        /// <para xml:lang="en">restaurant</para>
        /// </summary>
        RESTAURANT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ferienbungalows</para>
        /// <para xml:lang="en">bungalow</para>
        /// </summary>
        BUNGALOW,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung der Arten von Spezialgewerbe wie z.B. Bauernhof, Werkstatt
    ///                oder Gewerbepark
    ///            </para>
    /// <para xml:lang="en">Enumeration of Types for special industries like farm, repair shop or
    ///                commercial centre
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SpecialPurposeType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum SpecialPurposeType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Anwesen</para>
        /// <para xml:lang="en">residence</para>
        /// </summary>
        RESIDENCE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bauernhof</para>
        /// <para xml:lang="en">farm</para>
        /// </summary>
        FARM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Reiterhof</para>
        /// <para xml:lang="en">horse farm</para>
        /// </summary>
        HORSE_FARM,
        
        /// <summary>
        /// <para xml:lang="de-DE">Weingut</para>
        /// <para xml:lang="en">vineyard</para>
        /// </summary>
        VINEYARD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Werkstatt</para>
        /// <para xml:lang="en">repair shop</para>
        /// </summary>
        REPAIR_SHOP,
        
        /// <summary>
        /// <para xml:lang="de-DE">Freizeitanlage</para>
        /// <para xml:lang="en">leisure facility</para>
        /// </summary>
        LEISURE_FACILITY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gewerbefläche</para>
        /// <para xml:lang="en">industrial area</para>
        /// </summary>
        INDUSTRIAL_AREA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Spezialobjekt</para>
        /// <para xml:lang="en">special estate</para>
        /// </summary>
        SPECIAL_ESTATE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gewerbepark</para>
        /// <para xml:lang="en">commercial centre</para>
        /// </summary>
        COMMERCIAL_CENTRE,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Aufzählung der Arten von Anlageimmobilien-Objekte wie z.B.
    ///                Einfamilienhäuser, Lager oder Wohnanlagen
    ///            </para>
    /// <para xml:lang="en">Enumeration of Types for investment objects, like single family
    ///                houses, storages or housing estates
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InvestmentType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum InvestmentType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Einfamilienhaus</para>
        /// <para xml:lang="en">single family house</para>
        /// </summary>
        SINGLE_FAMILY_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Mehrfamilienhaus</para>
        /// <para xml:lang="en">multi family house</para>
        /// </summary>
        MULTI_FAMILY_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Eigentumswohnung</para>
        /// <para xml:lang="en">freehold flat</para>
        /// </summary>
        FREEHOLD_FLAT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Einkaufszentrum</para>
        /// <para xml:lang="en">shopping centre</para>
        /// </summary>
        SHOPPING_CENTRE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gaststätte</para>
        /// <para xml:lang="en">restaurant</para>
        /// </summary>
        RESTAURANT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Hotel</para>
        /// <para xml:lang="en">hotel</para>
        /// </summary>
        HOTEL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Freizeitanlage</para>
        /// <para xml:lang="en">leisure facility</para>
        /// </summary>
        LEISURE_FACILITY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gewerbeeinheit</para>
        /// <para xml:lang="en">commercial unit</para>
        /// </summary>
        COMMERCIAL_UNIT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bürogebäude</para>
        /// <para xml:lang="en">office building</para>
        /// </summary>
        OFFICE_BUILDING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Geschäftshaus</para>
        /// <para xml:lang="en">commercial building</para>
        /// </summary>
        COMMERCIAL_BUILDING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gewerbeanwesen</para>
        /// <para xml:lang="en">commercial property</para>
        /// </summary>
        COMMERCIAL_PROPERTY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Halle/Lager</para>
        /// <para xml:lang="en">hall or storage</para>
        /// </summary>
        HALL_STORAGE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Industrieanwesen</para>
        /// <para xml:lang="en">industrial property</para>
        /// </summary>
        INDUSTRIAL_PROPERTY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Laden/Verkaufsfläche</para>
        /// <para xml:lang="en">shop sales floor</para>
        /// </summary>
        SHOP_SALES_FLOOR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Servicecenter</para>
        /// <para xml:lang="en">service centre</para>
        /// </summary>
        SERVICE_CENTRE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Sonstige</para>
        /// <para xml:lang="en">other</para>
        /// </summary>
        OTHER,
        
        /// <summary>
        /// <para xml:lang="de-DE">Supermarkt</para>
        /// <para xml:lang="en">supermarket</para>
        /// </summary>
        SUPERMARKET,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohn-/ Geschäftshaus</para>
        /// <para xml:lang="en">living and business house</para>
        /// </summary>
        LIVING_BUSINESS_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnanlage</para>
        /// <para xml:lang="en">housing estate</para>
        /// </summary>
        HOUSING_ESTATE,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Auflistung der verfuegbaren Konstruktionsphasen</para>
    /// <para xml:lang="en">Enumeration for construction phase types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ConstructionPhaseType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum ConstructionPhaseType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Haus in Planung</para>
        /// <para xml:lang="en">projected</para>
        /// </summary>
        PROJECTED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Haus in Bau</para>
        /// <para xml:lang="en">under construction</para>
        /// </summary>
        UNDER_CONSTRUCTION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Haus fertig gestellt</para>
        /// <para xml:lang="en">completed</para>
        /// </summary>
        COMPLETED,
        
        /// <summary>
        /// <para xml:lang="de-DE">keine genaue Angabe zur Bauphase</para>
        /// <para xml:lang="en">no information about construction phase</para>
        /// </summary>
        NO_INFORMATION,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">DEPRECATED benutze HeatingTypeEnev2014 Auflistung der verfügbaren Heizungsarten</para>
    /// <para xml:lang="en">DEPRECATED use HeatingTypeEnev2014 Enumeration for heating types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("HeatingType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum HeatingType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenheizung</para>
        /// <para xml:lang="en">self contained central heating</para>
        /// </summary>
        SELF_CONTAINED_CENTRAL_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ofenheizung</para>
        /// <para xml:lang="en">stove heating</para>
        /// </summary>
        STOVE_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Zentralheizung</para>
        /// <para xml:lang="en">central heating</para>
        /// </summary>
        CENTRAL_HEATING,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Auflistung der verfügbaren Heizungsarten für Energiezertifikat</para>
    /// <para xml:lang="en">Enumeration for heating types for energy certificate</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("HeatingTypeEnev2014", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum HeatingTypeEnev2014
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenheizung</para>
        /// <para xml:lang="en">self contained central heating</para>
        /// </summary>
        SELF_CONTAINED_CENTRAL_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ofenheizung</para>
        /// <para xml:lang="en">stove heating</para>
        /// </summary>
        STOVE_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Zentralheizung</para>
        /// <para xml:lang="en">central heating</para>
        /// </summary>
        CENTRAL_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Blockheizkraftwerk</para>
        /// <para xml:lang="en">combined heat and power plant</para>
        /// </summary>
        COMBINED_HEAT_AND_POWER_PLANT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Elektro-Heizung</para>
        /// <para xml:lang="en">electric heating</para>
        /// </summary>
        ELECTRIC_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Fernwärmedampf</para>
        /// <para xml:lang="en">steam district heating</para>
        /// </summary>
        DISTRICT_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Fußbodenheizung</para>
        /// <para xml:lang="en">floor heating</para>
        /// </summary>
        FLOOR_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gas-Heizung</para>
        /// <para xml:lang="en">gas heating</para>
        /// </summary>
        GAS_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Holz-Pelletheizung</para>
        /// <para xml:lang="en">wood pellet heating</para>
        /// </summary>
        WOOD_PELLET_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nachtspeicherofen</para>
        /// <para xml:lang="en">night storage heating</para>
        /// </summary>
        NIGHT_STORAGE_HEATER,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ölheizung</para>
        /// <para xml:lang="en">oil heating</para>
        /// </summary>
        OIL_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Solar-Heizung</para>
        /// <para xml:lang="en">solar heating</para>
        /// </summary>
        SOLAR_HEATING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wärmepumpe</para>
        /// <para xml:lang="en">heat pump</para>
        /// </summary>
        HEAT_PUMP,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Das Intervall für das die Immobilie mietbar ist (Tag, Monat, Woche)
    ///            </para>
    /// <para xml:lang="en">The interval this real estate is rentable (day, month, week)
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DurationType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum DurationType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">mietbar pro Tag</para>
        /// <para xml:lang="en">rentable per day</para>
        /// </summary>
        DAY,
        
        /// <summary>
        /// <para xml:lang="de-DE">mietbar pro Woche</para>
        /// <para xml:lang="en">rentable per week</para>
        /// </summary>
        WEEK,
        
        /// <summary>
        /// <para xml:lang="de-DE">mietbar pro Monat</para>
        /// <para xml:lang="en">rentable per month</para>
        /// </summary>
        MONTH,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Das Intervall für das ein Grundstück/eine Immobilie pachtbar ist
    ///            </para>
    /// <para xml:lang="en">The interval this real estate is leasable
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LeaseIntervalType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum LeaseIntervalType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Tag</para>
        /// <para xml:lang="en">day</para>
        /// </summary>
        DAY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Woche</para>
        /// <para xml:lang="en">week</para>
        /// </summary>
        WEEK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Monat</para>
        /// <para xml:lang="en">month</para>
        /// </summary>
        MONTH,
        
        /// <summary>
        /// <para xml:lang="de-DE">Jahr</para>
        /// <para xml:lang="en">year</para>
        /// </summary>
        YEAR,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FlooringType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum FlooringType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Beton</para>
        /// <para xml:lang="en">concrete</para>
        /// </summary>
        CONCRETE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Epoxydharzboden</para>
        /// <para xml:lang="en">epoxy resin</para>
        /// </summary>
        EPOXY_RESIN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Fliesen</para>
        /// <para xml:lang="en">tiles</para>
        /// </summary>
        TILES,
        
        /// <summary>
        /// <para xml:lang="de-DE">Dielen</para>
        /// <para xml:lang="en">planks</para>
        /// </summary>
        PLANKS,
        
        /// <summary>
        /// <para xml:lang="de-DE">Laminat</para>
        /// <para xml:lang="en">laminate</para>
        /// </summary>
        LAMINATE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkett</para>
        /// <para xml:lang="en">parquet</para>
        /// </summary>
        PARQUET,
        
        /// <summary>
        /// <para xml:lang="de-DE">PVC</para>
        /// <para xml:lang="en">PVC</para>
        /// </summary>
        PVC,
        
        /// <summary>
        /// <para xml:lang="de-DE">Teppichboden</para>
        /// <para xml:lang="en">carpet</para>
        /// </summary>
        CARPET,
        
        /// <summary>
        /// <para xml:lang="de-DE">antistatischer Teppichboden</para>
        /// <para xml:lang="en">antistatic floor</para>
        /// </summary>
        ANTISTATIC_FLOOR,
        
        /// <summary>
        /// <para xml:lang="de-DE">stuhlrollenfeste Teppichfliesen</para>
        /// <para xml:lang="en">office carpet</para>
        /// </summary>
        OFFICE_CARPET,
        
        /// <summary>
        /// <para xml:lang="de-DE">Stein</para>
        /// <para xml:lang="en">stone</para>
        /// </summary>
        STONE,
        
        /// <summary>
        /// <para xml:lang="de-DE">nach Mieterwunsch</para>
        /// <para xml:lang="en">customizable</para>
        /// </summary>
        CUSTOMIZABLE,
        
        /// <summary>
        /// <para xml:lang="de-DE">ohne Bodenbelag</para>
        /// <para xml:lang="en">without</para>
        /// </summary>
        WITHOUT,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Typenhaus Gebäudeart</para>
    /// <para xml:lang="en">house type building type</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("HouseTypeBuildingType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum HouseTypeBuildingType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Blockhaus</para>
        /// <para xml:lang="en">blockhouse</para>
        /// </summary>
        BLOCKHOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bungalow</para>
        /// <para xml:lang="en">bungalow</para>
        /// </summary>
        BUNGALOW,
        
        /// <summary>
        /// <para xml:lang="de-DE">Doppelhaushaelfte</para>
        /// <para xml:lang="en">semi detached house</para>
        /// </summary>
        SEMI_DETACHED_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Einfamilienhaus</para>
        /// <para xml:lang="en">one family house</para>
        /// </summary>
        ONE_FAMILY_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Haus mit Einlegerwohnung</para>
        /// <para xml:lang="en">family house with lodger flat</para>
        /// </summary>
        FAMILY_HOUSE_WITH_LODGER_FLAT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Haus im Tudorstil</para>
        /// <para xml:lang="en">tudor house</para>
        /// </summary>
        TUDOR_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Holzhaus</para>
        /// <para xml:lang="en">wooden house</para>
        /// </summary>
        WOODEN_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Landhaus</para>
        /// <para xml:lang="en">country house</para>
        /// </summary>
        COUNTRY_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Appartment Gebäude</para>
        /// <para xml:lang="en">apartment building</para>
        /// </summary>
        APARTMENT_BUILDING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Freistehendes Haus</para>
        /// <para xml:lang="en">non detached house</para>
        /// </summary>
        NON_DETACHED_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Stadtvilla</para>
        /// <para xml:lang="en">city villa</para>
        /// </summary>
        CITY_VILLA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Villa</para>
        /// <para xml:lang="en">villa</para>
        /// </summary>
        VILLA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Doppelhaus</para>
        /// <para xml:lang="en">semi detached house pair</para>
        /// </summary>
        SEMI_DETACHED_HOUSE_PAIR,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">mögliche Bauweisen von Typenhäusern</para>
    /// <para xml:lang="en">construction methods of house types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("HouseTypeConstructionMethodType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum HouseTypeConstructionMethodType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">nicht spezifiziert</para>
        /// <para xml:lang="en">unspecified</para>
        /// </summary>
        UNSPECIFIED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Fertigteilhaus</para>
        /// <para xml:lang="en">prefabricated</para>
        /// </summary>
        PREFABRICATED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Fertigteilhaus aus Holz</para>
        /// <para xml:lang="en">wood prefabricated</para>
        /// </summary>
        WOOD_PREFABRICATED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Massivhaus</para>
        /// <para xml:lang="en">solid</para>
        /// </summary>
        SOLID,
        
        /// <summary>
        /// <para xml:lang="de-DE">Fertigteilhaus Massiv</para>
        /// <para xml:lang="en">solid prefabricated</para>
        /// </summary>
        SOLID_PREFABRICATED,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Typenhaus Ausbaustufe</para>
    /// <para xml:lang="en">house type stage of extension</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("HouseTypeStageOfCompletionType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum HouseTypeStageOfCompletionType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">nicht spezifiziert</para>
        /// <para xml:lang="en">unspecified</para>
        /// </summary>
        UNSPECIFIED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bausatzhaus</para>
        /// <para xml:lang="en">construction kit</para>
        /// </summary>
        CONSTRUCTIONKIT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ausbauhaus</para>
        /// <para xml:lang="en">upgrading</para>
        /// </summary>
        UPGRADING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Schlüsselfertig mit Keller</para>
        /// <para xml:lang="en">turnkey with cellar</para>
        /// </summary>
        TURNKEYWITHCELLAR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Schlüsselfertig ohne Bodenplatte</para>
        /// <para xml:lang="en">turnkey without floorslap</para>
        /// </summary>
        TURNKEYWITHOUTFLOORSLAP,
        
        /// <summary>
        /// <para xml:lang="de-DE">Schlüsselfertig mit Bodenplatte</para>
        /// <para xml:lang="en">turnkey with floorslap</para>
        /// </summary>
        TURNKEYWITHFLOORSLAP,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Typenhaus Energiestandard</para>
    /// <para xml:lang="en">house type energy standard</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("HouseTypeEnergyStandardType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum HouseTypeEnergyStandardType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">nicht spezifiziert</para>
        /// <para xml:lang="en">unspecified</para>
        /// </summary>
        UNSPECIFIED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Niedrigenergiehaus KfW 40</para>
        /// <para xml:lang="en">low energy 40</para>
        /// </summary>
        LOW_ENERGY_40,
        
        /// <summary>
        /// <para xml:lang="de-DE">Niedriegenergiehaus KfW60</para>
        /// <para xml:lang="en">low energy 60</para>
        /// </summary>
        LOW_ENERGY_60,
        
        /// <summary>
        /// <para xml:lang="de-DE">Passivhaus</para>
        /// <para xml:lang="en">passive house</para>
        /// </summary>
        PASSIVE_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">KfW-Effizienzhaus 40</para>
        /// <para xml:lang="en">energy efficient 40</para>
        /// </summary>
        ENERGY_EFFICIENT_40,
        
        /// <summary>
        /// <para xml:lang="de-DE">KfW-Effizienzhaus 55</para>
        /// <para xml:lang="en">energy efficient 55</para>
        /// </summary>
        ENERGY_EFFICIENT_55,
        
        /// <summary>
        /// <para xml:lang="de-DE">KfW-Effizienzhaus 70</para>
        /// <para xml:lang="en">energy efficient 70</para>
        /// </summary>
        ENERGY_EFFICIENT_70,
        
        /// <summary>
        /// <para xml:lang="de-DE">Niedrigenergiehaus</para>
        /// <para xml:lang="en">low energy house</para>
        /// </summary>
        LOW_ENERGY_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nullenergiehaus</para>
        /// <para xml:lang="en">null energy house</para>
        /// </summary>
        NULL_ENERGY_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Plusenergiehaus</para>
        /// <para xml:lang="en">plus energy house</para>
        /// </summary>
        PLUS_ENERGY_HOUSE,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfficeRentDuration", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum OfficeRentDuration
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">wochenweise</para>
        /// <para xml:lang="en">weekly</para>
        /// </summary>
        WEEKLY,
        
        /// <summary>
        /// <para xml:lang="de-DE">monatsweise</para>
        /// <para xml:lang="en">monthly</para>
        /// </summary>
        MONTHLY,
        
        /// <summary>
        /// <para xml:lang="de-DE">1 bis 2 Jahre</para>
        /// <para xml:lang="en">1-2 years</para>
        /// </summary>
        YEARLY,
        
        /// <summary>
        /// <para xml:lang="de-DE">langfristig</para>
        /// <para xml:lang="en">longterm</para>
        /// </summary>
        LONG_TERM,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfficeType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum OfficeType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Loft</para>
        /// <para xml:lang="en">loft</para>
        /// </summary>
        LOFT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Atelier</para>
        /// <para xml:lang="en">studio</para>
        /// </summary>
        STUDIO,
        
        /// <summary>
        /// <para xml:lang="de-DE">Büro</para>
        /// <para xml:lang="en">office</para>
        /// </summary>
        OFFICE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Büroetage</para>
        /// <para xml:lang="en">office floor</para>
        /// </summary>
        OFFICE_FLOOR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bürohaus</para>
        /// <para xml:lang="en">office building</para>
        /// </summary>
        OFFICE_BUILDING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bürozentrum</para>
        /// <para xml:lang="en">office centre</para>
        /// </summary>
        OFFICE_CENTRE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Büro-/ Lagergebäude</para>
        /// <para xml:lang="en">office storage building</para>
        /// </summary>
        OFFICE_STORAGE_BUILDING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Praxis</para>
        /// <para xml:lang="en">surgery</para>
        /// </summary>
        SURGERY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Praxisetage</para>
        /// <para xml:lang="en">surgery floor</para>
        /// </summary>
        SURGERY_FLOOR,
        
        /// <summary>
        /// <para xml:lang="de-DE">Praxishaus</para>
        /// <para xml:lang="en">surgery building</para>
        /// </summary>
        SURGERY_BUILDING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gewerbezentrum</para>
        /// <para xml:lang="en">commercial centre</para>
        /// </summary>
        COMMERCIAL_CENTRE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohn- und Geschäftsgebäude</para>
        /// <para xml:lang="en">living and commercial building</para>
        /// </summary>
        LIVING_AND_COMMERCIAL_BUILDING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Büro- und Geschäftsgebäude</para>
        /// <para xml:lang="en">office and commercial building</para>
        /// </summary>
        OFFICE_AND_COMMERCIAL_BUILDING,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("StoreType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum StoreType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Ausstellungsfläche</para>
        /// <para xml:lang="en">showroom space</para>
        /// </summary>
        SHOWROOM_SPACE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Einkaufszentrum</para>
        /// <para xml:lang="en">shopping centre</para>
        /// </summary>
        SHOPPING_CENTRE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Factory Outlet</para>
        /// <para xml:lang="en">factory outlet</para>
        /// </summary>
        FACTORY_OUTLET,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaufhaus</para>
        /// <para xml:lang="en">department store</para>
        /// </summary>
        DEPARTMENT_STORE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kiosk</para>
        /// <para xml:lang="en">kiosk</para>
        /// </summary>
        KIOSK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Laden</para>
        /// <para xml:lang="en">store</para>
        /// </summary>
        STORE,
        
        /// <summary>
        /// <para xml:lang="de-DE">SB-Markt</para>
        /// <para xml:lang="en">self-service market</para>
        /// </summary>
        SELF_SERVICE_MARKET,
        
        /// <summary>
        /// <para xml:lang="de-DE">Verkaufsfläche</para>
        /// <para xml:lang="en">surgery</para>
        /// </summary>
        SALES_AREA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Verkaufshalle</para>
        /// <para xml:lang="en">sales hall</para>
        /// </summary>
        SALES_HALL,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SupplyType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum SupplyType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Direkter Zugang</para>
        /// <para xml:lang="en">direct approach</para>
        /// </summary>
        DIRECT_APPROACH,
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine direkte Anfahrt</para>
        /// <para xml:lang="en">no direct approach</para>
        /// </summary>
        NO_DIRECT_APPROACH,
        
        /// <summary>
        /// <para xml:lang="de-DE">PKW-Zufahrt</para>
        /// <para xml:lang="en">car approach</para>
        /// </summary>
        CAR_APPROACH,
        
        /// <summary>
        /// <para xml:lang="de-DE">Anfahrt von vorne</para>
        /// <para xml:lang="en">approach to the front</para>
        /// </summary>
        APPROACH_TO_THE_FRONT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Anfahrt von hinten</para>
        /// <para xml:lang="en">approach to the back</para>
        /// </summary>
        APPROACH_TO_THE_BACK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ganztägig</para>
        /// <para xml:lang="en">full time</para>
        /// </summary>
        FULL_TIME,
        
        /// <summary>
        /// <para xml:lang="de-DE">Vormittags</para>
        /// <para xml:lang="en">forenoon</para>
        /// </summary>
        FORENOON,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("IndustryType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum IndustryType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Ausstellungsfläche</para>
        /// <para xml:lang="en">showroom space</para>
        /// </summary>
        SHOWROOM_SPACE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Halle</para>
        /// <para xml:lang="en">shopping centre</para>
        /// </summary>
        HALL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Hochregallager</para>
        /// <para xml:lang="en">high lack storage</para>
        /// </summary>
        HIGH_LACK_STORAGE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Industriehalle</para>
        /// <para xml:lang="en">industry hall</para>
        /// </summary>
        INDUSTRY_HALL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Industriehalle mit Freifläche</para>
        /// <para xml:lang="en">industry hall with open area</para>
        /// </summary>
        INDUSTRY_HALL_WITH_OPEN_AREA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kühlhaus</para>
        /// <para xml:lang="en">cold storage</para>
        /// </summary>
        COLD_STORAGE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kühlregallager</para>
        /// <para xml:lang="en">multideck cabinet storage</para>
        /// </summary>
        MULTIDECK_CABINET_STORAGE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Lager mit Freifläche</para>
        /// <para xml:lang="en">storage with open area</para>
        /// </summary>
        STORAGE_WITH_OPEN_AREA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Lagerfläche</para>
        /// <para xml:lang="en">storage area</para>
        /// </summary>
        STORAGE_AREA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Lagerhalle</para>
        /// <para xml:lang="en">storage hall</para>
        /// </summary>
        STORAGE_HALL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Servicefläche</para>
        /// <para xml:lang="en">service area</para>
        /// </summary>
        SERVICE_AREA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Speditionslager</para>
        /// <para xml:lang="en">shipping storage</para>
        /// </summary>
        SHIPPING_STORAGE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Werkstatt</para>
        /// <para xml:lang="en">repair shop</para>
        /// </summary>
        REPAIR_SHOP,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CompulsoryAuctionType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum CompulsoryAuctionType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Eigentumswohnungen</para>
        /// <para xml:lang="en">freehold flat</para>
        /// </summary>
        FREEHOLD_FLAT,
        
        /// <summary>
        /// <para xml:lang="de-DE">1+2 Familienhäuser</para>
        /// <para xml:lang="en">family house</para>
        /// </summary>
        FAMILY_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gewerbe + Rendite</para>
        /// <para xml:lang="en">business and yield</para>
        /// </summary>
        BUSINESS_AND_YIELD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücke</para>
        /// <para xml:lang="en">lot</para>
        /// </summary>
        LOT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Garagen + Sonstiges</para>
        /// <para xml:lang="en">garage and other</para>
        /// </summary>
        GARAGE_AND_OTHER,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RealEstateCondition", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum RealEstateCondition
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Erstbezug</para>
        /// <para xml:lang="en">first time use</para>
        /// </summary>
        FIRST_TIME_USE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Erstbezug nach Sanierung</para>
        /// <para xml:lang="en">first time use after refurbishment</para>
        /// </summary>
        FIRST_TIME_USE_AFTER_REFURBISHMENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Neuwertig</para>
        /// <para xml:lang="en">mint condition</para>
        /// </summary>
        MINT_CONDITION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Saniert</para>
        /// <para xml:lang="en">refurbished</para>
        /// </summary>
        REFURBISHED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Modernisiert</para>
        /// <para xml:lang="en">modernized</para>
        /// </summary>
        MODERNIZED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Vollständig renoviert</para>
        /// <para xml:lang="en">fully renovated</para>
        /// </summary>
        FULLY_RENOVATED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gepflegt</para>
        /// <para xml:lang="en">well kept</para>
        /// </summary>
        WELL_KEPT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Renovierungsbedürftig</para>
        /// <para xml:lang="en">need of renovation</para>
        /// </summary>
        NEED_OF_RENOVATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nach Vereinbarung</para>
        /// <para xml:lang="en">negotiable</para>
        /// </summary>
        NEGOTIABLE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Abbruchreif</para>
        /// <para xml:lang="en">ripe for demolition</para>
        /// </summary>
        RIPE_FOR_DEMOLITION,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InteriorQuality", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum InteriorQuality
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Luxus</para>
        /// <para xml:lang="en">luxury</para>
        /// </summary>
        LUXURY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gehoben</para>
        /// <para xml:lang="en">sophisticated</para>
        /// </summary>
        SOPHISTICATED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Normal</para>
        /// <para xml:lang="en">normal</para>
        /// </summary>
        NORMAL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Einfach</para>
        /// <para xml:lang="en">simple</para>
        /// </summary>
        SIMPLE,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BuildingEnergyRatingType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum BuildingEnergyRatingType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Endenergiebedarf</para>
        /// <para xml:lang="en">energy required</para>
        /// </summary>
        ENERGY_REQUIRED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">energy consumption</para>
        /// </summary>
        ENERGY_CONSUMPTION,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParkingSpaceType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum ParkingSpaceType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage</para>
        /// <para xml:lang="en">garage</para>
        /// </summary>
        GARAGE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Außenstellplatz</para>
        /// <para xml:lang="en">outside</para>
        /// </summary>
        OUTSIDE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Carport</para>
        /// <para xml:lang="en">carport</para>
        /// </summary>
        CARPORT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Duplex</para>
        /// <para xml:lang="en">duplex</para>
        /// </summary>
        DUPLEX,
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkhaus</para>
        /// <para xml:lang="en">car park</para>
        /// </summary>
        CAR_PARK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Tiefgarage</para>
        /// <para xml:lang="en">underground garage</para>
        /// </summary>
        UNDERGROUND_GARAGE,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GarageType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum GarageType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage</para>
        /// <para xml:lang="en">garage</para>
        /// </summary>
        GARAGE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Außenstellplatz</para>
        /// <para xml:lang="en">street parking</para>
        /// </summary>
        STREET_PARKING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Carport</para>
        /// <para xml:lang="en">carport</para>
        /// </summary>
        CARPORT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Duplex</para>
        /// <para xml:lang="en">duplex</para>
        /// </summary>
        DUPLEX,
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkhaus</para>
        /// <para xml:lang="en">car park</para>
        /// </summary>
        CAR_PARK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Tiefgarage</para>
        /// <para xml:lang="en">underground garage</para>
        /// </summary>
        UNDERGROUND_GARAGE,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FacilityType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum FacilityType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Seniorenwohnen</para>
        /// <para xml:lang="en">assisted living</para>
        /// </summary>
        ASSISTED_LIVING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Residenz</para>
        /// <para xml:lang="en">residence</para>
        /// </summary>
        RESIDENCE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Seniorenwohnpark</para>
        /// <para xml:lang="en">senior park</para>
        /// </summary>
        SENIOR_PARK,
    }
    
    /// <summary>
    /// <para xml:lang="en">Represents forward tracking information; contains the code (FTC) and type
    ///                (direct|later).
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ForwardTracking", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForwardTracking
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1. Maximum length: 60.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(60, MinimumLength=1)]
        [System.Xml.Serialization.XmlElementAttribute("code", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Code { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("type", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ForwardTrackingType Type { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ForwardTrackingType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum ForwardTrackingType
    {
        
        /// <summary>
        /// <para xml:lang="en">Indicates that the customer was forwarded to us by a
        ///                        partner/affiliate within the current session.
        ///                    </para>
        /// </summary>
        DIRECT,
        
        /// <summary>
        /// <para xml:lang="en">Indicates that the customer was forwarded to us by a
        ///                        partner/affiliate previously and has now returned independently of the partner/affiliate.
        ///                    </para>
        /// </summary>
        LATER,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Pflegeplatztypen</para>
    /// <para xml:lang="en">List of type of care</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CareTypes", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CareTypes
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<CareType> _careType;
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflegeplatztyp</para>
        /// <para xml:lang="en">Type of care</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("careType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<CareType> CareType
        {
            get
            {
                return this._careType;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="CareTypes" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="CareTypes" /> class.</para>
        /// </summary>
        public CareTypes()
        {
            this._careType = new System.Collections.ObjectModel.Collection<CareType>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Haustiere erlaubt Typ</para>
    /// <para xml:lang="en">pets allowed type</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PetsAllowedType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum PetsAllowedType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nach Vereinbarung</para>
        /// <para xml:lang="en">negotiable</para>
        /// </summary>
        NEGOTIABLE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ja</para>
        /// <para xml:lang="en">yes</para>
        /// </summary>
        YES,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nein</para>
        /// <para xml:lang="en">no</para>
        /// </summary>
        NO,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Fernsehanschluss Typ</para>
    /// <para xml:lang="en">tv connection type</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TvConnectionType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum TvConnectionType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kabel</para>
        /// <para xml:lang="en">cable</para>
        /// </summary>
        CABLE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Satellit</para>
        /// <para xml:lang="en">satellite</para>
        /// </summary>
        SATELLITE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kabel und Satellit</para>
        /// <para xml:lang="en">cable and satellite</para>
        /// </summary>
        CABLE_AND_SATELLITE,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Fernsehanschluss Typ</para>
    /// <para xml:lang="en">tv connection type</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TelephoneConnectionType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum TelephoneConnectionType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Analog</para>
        /// <para xml:lang="en">analog</para>
        /// </summary>
        ANALOG,
        
        /// <summary>
        /// <para xml:lang="de-DE">ISDN</para>
        /// <para xml:lang="en">ISDN</para>
        /// </summary>
        ISDN,
        
        /// <summary>
        /// <para xml:lang="de-DE">nicht verfügbar</para>
        /// <para xml:lang="en">not available</para>
        /// </summary>
        NOT_AVAILABLE,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Fernsehanschluss Typ</para>
    /// <para xml:lang="en">tv connection type</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParkingSituationType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum ParkingSituationType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gut</para>
        /// <para xml:lang="en">good</para>
        /// </summary>
        GOOD,
        
        /// <summary>
        /// <para xml:lang="de-DE">schlecht</para>
        /// <para xml:lang="en">bad</para>
        /// </summary>
        BAD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Anwohnerparkplatz verfügbar</para>
        /// <para xml:lang="en">resident parking available</para>
        /// </summary>
        RESIDENT_PARKING,
        
        /// <summary>
        /// <para xml:lang="de-DE">eigener Parkplatz verfügbar</para>
        /// <para xml:lang="en">own parking space available</para>
        /// </summary>
        OWN_PARKING_SPACE,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Internet Typ</para>
    /// <para xml:lang="en">internet connection type</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("InternetConnectionType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum InternetConnectionType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">DSL</para>
        /// <para xml:lang="en">DSL</para>
        /// </summary>
        DSL,
        
        /// <summary>
        /// <para xml:lang="de-DE">DSL Flatrate</para>
        /// <para xml:lang="en">DSL flatrate</para>
        /// </summary>
        DSL_FLATRATE,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Rauchen erlaubt</para>
    /// <para xml:lang="en">smoking allowed</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SmokingAllowedType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum SmokingAllowedType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Erlaubt</para>
        /// <para xml:lang="en">allowed</para>
        /// </summary>
        ALLOWED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Unerwünscht</para>
        /// <para xml:lang="en">unwanted</para>
        /// </summary>
        UNWANTED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nur im eigenem Zimmer</para>
        /// <para xml:lang="en">own room only</para>
        /// </summary>
        OWN_ROOM_ONLY,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gesuchter Mitbewohner</para>
    /// <para xml:lang="en">flat mate gender type</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FlatMateGenderType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum FlatMateGenderType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Männlich oder weiblich</para>
        /// <para xml:lang="en">male or female</para>
        /// </summary>
        MALE_OR_FEMALE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Männlich</para>
        /// <para xml:lang="en">male</para>
        /// </summary>
        MALE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Weiblich</para>
        /// <para xml:lang="en">female</para>
        /// </summary>
        FEMALE,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Garagensuchtyp</para>
    /// <para xml:lang="en">garage query type</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GarageQueryType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum GarageQueryType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage</para>
        /// <para xml:lang="en">garage</para>
        /// </summary>
        GARAGE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Außenstellplatz</para>
        /// <para xml:lang="en">street parking</para>
        /// </summary>
        STREET_PARKING,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Nutzungsart</para>
    /// <para xml:lang="en">utilization trade site</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("UtilizationTradeSite", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum UtilizationTradeSite
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Freizeit</para>
        /// <para xml:lang="en">leisure</para>
        /// </summary>
        LEISURE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Land- / Forstwirtschaft</para>
        /// <para xml:lang="en">agriculture forestry</para>
        /// </summary>
        AGRICULTURE_FORESTRY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gewerbe</para>
        /// <para xml:lang="en">trade</para>
        /// </summary>
        TRADE,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Vermarktungsart (trade site)</para>
    /// <para xml:lang="en">commercialization type (trade site)
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CommercializationType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum CommercializationType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kauf</para>
        /// <para xml:lang="en">buy</para>
        /// </summary>
        BUY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Miete</para>
        /// <para xml:lang="en">rent</para>
        /// </summary>
        RENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Pacht</para>
        /// <para xml:lang="en">lease</para>
        /// </summary>
        LEASE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Erbpacht</para>
        /// <para xml:lang="en">long lease</para>
        /// </summary>
        LEASEHOLD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Zwangsversteigerung</para>
        /// <para xml:lang="en">compulsory auction</para>
        /// </summary>
        COMPULSORY_AUCTION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Miete und Kauf</para>
        /// <para xml:lang="en">rent and buy</para>
        /// </summary>
        RENT_AND_BUY,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Erschließungsarten</para>
    /// <para xml:lang="en">site development types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SiteDevelopmentType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum SiteDevelopmentType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Erschlossen</para>
        /// <para xml:lang="en">developed</para>
        /// </summary>
        DEVELOPED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilerschlossen</para>
        /// <para xml:lang="en">developed partially</para>
        /// </summary>
        DEVELOPED_PARTIALLY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Unerschlossen</para>
        /// <para xml:lang="en">not developed</para>
        /// </summary>
        NOT_DEVELOPED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Bebaubar nach</para>
    /// <para xml:lang="en">site constructible types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SiteConstructibleType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum SiteConstructibleType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Bebauungsplan</para>
        /// <para xml:lang="en">construction plan</para>
        /// </summary>
        CONSTRUCTIONPLAN,
        
        /// <summary>
        /// <para xml:lang="de-DE">wie Nachbarbebauung</para>
        /// <para xml:lang="en">neighbour construction</para>
        /// </summary>
        NEIGHBOURCONSTRUCTION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Aussengebiet</para>
        /// <para xml:lang="en">external area</para>
        /// </summary>
        EXTERNALAREA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Empfohlene Nutzung Gewerbegrundstück</para>
    /// <para xml:lang="en">recommended site use type</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SiteRecommendedUseForTradeType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum SiteRecommendedUseForTradeType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ackerland</para>
        /// <para xml:lang="en">farmland</para>
        /// </summary>
        FARMLAND,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bauerwartungsland</para>
        /// <para xml:lang="en">future development land</para>
        /// </summary>
        FUTURE_DEVELOPMENT_LAND,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bootsstand</para>
        /// <para xml:lang="en">moorage</para>
        /// </summary>
        MOORAGE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Büro</para>
        /// <para xml:lang="en">office</para>
        /// </summary>
        OFFICE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Camping</para>
        /// <para xml:lang="en">camping</para>
        /// </summary>
        CAMPING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Einzelhandel - groß</para>
        /// <para xml:lang="en">big store</para>
        /// </summary>
        BIG_STORE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Einzelhandel - klein</para>
        /// <para xml:lang="en">little store</para>
        /// </summary>
        LITTLE_STORE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage</para>
        /// <para xml:lang="en">garage</para>
        /// </summary>
        GARAGE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">garden</para>
        /// </summary>
        GARDEN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gastronomie</para>
        /// <para xml:lang="en">gastronomy</para>
        /// </summary>
        GASTRONOMY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gewerbe</para>
        /// <para xml:lang="en">business</para>
        /// </summary>
        BUSINESS,
        
        /// <summary>
        /// <para xml:lang="de-DE">Hotel</para>
        /// <para xml:lang="en">hotel</para>
        /// </summary>
        HOTEL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Industrie</para>
        /// <para xml:lang="en">industry</para>
        /// </summary>
        INDUSTRY,
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Bebauung</para>
        /// <para xml:lang="en">no development</para>
        /// </summary>
        NO_DEVELOPMENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Kleingewerbe</para>
        /// <para xml:lang="en">small business</para>
        /// </summary>
        SMALL_BUSINESS,
        
        /// <summary>
        /// <para xml:lang="de-DE">Lager</para>
        /// <para xml:lang="en">stock</para>
        /// </summary>
        STOCK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Obstpflanzung</para>
        /// <para xml:lang="en">orchard</para>
        /// </summary>
        ORCHARD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkhaus</para>
        /// <para xml:lang="en">car park</para>
        /// </summary>
        CAR_PARK,
        
        /// <summary>
        /// <para xml:lang="de-DE">Produktion</para>
        /// <para xml:lang="en">production</para>
        /// </summary>
        PRODUCTION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Stellplätze</para>
        /// <para xml:lang="en">parking space</para>
        /// </summary>
        PARKING_SPACE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wald</para>
        /// <para xml:lang="en">forrest</para>
        /// </summary>
        FORREST,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Empfohlene Nutzungsarten eines Gewerbegrundstuecks</para>
    /// <para xml:lang="en">recommended site use types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SiteRecommendedUseForTradeTypes", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SiteRecommendedUseForTradeTypes
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SiteRecommendedUseForTradeType> _siteRecommendedUseForTradeType;
        
        /// <summary>
        /// <para xml:lang="de-DE">Empfohlene Nutzung Gewerbegrundstueck</para>
        /// <para xml:lang="en">recommended site use type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("siteRecommendedUseForTradeType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<SiteRecommendedUseForTradeType> SiteRecommendedUseForTradeType
        {
            get
            {
                return this._siteRecommendedUseForTradeType;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SiteRecommendedUseForTradeType-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SiteRecommendedUseForTradeType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SiteRecommendedUseForTradeTypeSpecified
        {
            get
            {
                return (this.SiteRecommendedUseForTradeType.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SiteRecommendedUseForTradeTypes" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SiteRecommendedUseForTradeTypes" /> class.</para>
        /// </summary>
        public SiteRecommendedUseForTradeTypes()
        {
            this._siteRecommendedUseForTradeType = new System.Collections.ObjectModel.Collection<SiteRecommendedUseForTradeType>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Empfohlene Nutzungsarten eines Wohngrundstuecks</para>
    /// <para xml:lang="en">recommended site use types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SiteRecommendedUseTypes", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SiteRecommendedUseTypes
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SiteRecommendedUseType> _siteRecommendedUseType;
        
        /// <summary>
        /// <para xml:lang="de-DE">Empfohlene Nutzung Wohnungsgrundstueck</para>
        /// <para xml:lang="en">recommended site use type</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("siteRecommendedUseType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<SiteRecommendedUseType> SiteRecommendedUseType
        {
            get
            {
                return this._siteRecommendedUseType;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SiteRecommendedUseType-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SiteRecommendedUseType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SiteRecommendedUseTypeSpecified
        {
            get
            {
                return (this.SiteRecommendedUseType.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SiteRecommendedUseTypes" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SiteRecommendedUseTypes" /> class.</para>
        /// </summary>
        public SiteRecommendedUseTypes()
        {
            this._siteRecommendedUseType = new System.Collections.ObjectModel.Collection<SiteRecommendedUseType>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Empfohlene Nutzung Wohnen-Grundstück</para>
    /// <para xml:lang="en">site constructible types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SiteRecommendedUseType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum SiteRecommendedUseType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Bauerwartungsland</para>
        /// <para xml:lang="en">future development land</para>
        /// </summary>
        FUTURE_DEVELOPMENT_LAND,
        
        /// <summary>
        /// <para xml:lang="de-DE">Doppelhaushälfte</para>
        /// <para xml:lang="en">twinhouse</para>
        /// </summary>
        TWINHOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Einfamilienhaus</para>
        /// <para xml:lang="en">single family house</para>
        /// </summary>
        SINGLE_FAMILY_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage</para>
        /// <para xml:lang="en">garage</para>
        /// </summary>
        GARAGE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">garden</para>
        /// </summary>
        GARDEN,
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Bebauung</para>
        /// <para xml:lang="en">no development</para>
        /// </summary>
        NO_DEVELOPMENT,
        
        /// <summary>
        /// <para xml:lang="de-DE">Mehrfamilienhaus</para>
        /// <para xml:lang="en">apartment building</para>
        /// </summary>
        APARTMENT_BUILDING,
        
        /// <summary>
        /// <para xml:lang="de-DE">Obstpflanzung</para>
        /// <para xml:lang="en">orchard</para>
        /// </summary>
        ORCHARD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Reihenhaus</para>
        /// <para xml:lang="en">terrace house</para>
        /// </summary>
        TERRACE_HOUSE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Stellplätze</para>
        /// <para xml:lang="en">parking space</para>
        /// </summary>
        PARKING_SPACE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Villa</para>
        /// <para xml:lang="en">villa</para>
        /// </summary>
        VILLA,
        
        /// <summary>
        /// <para xml:lang="de-DE">Wald</para>
        /// <para xml:lang="en">forrest</para>
        /// </summary>
        FORREST,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">DV-Verkabelung</para>
    /// <para xml:lang="en">IT infrastructure types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ItInfrastructureType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum ItInfrastructureType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ja</para>
        /// <para xml:lang="en">yes</para>
        /// </summary>
        YES,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nein</para>
        /// <para xml:lang="en">no</para>
        /// </summary>
        NO,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nach Vereinbarung</para>
        /// <para xml:lang="en">by appointment</para>
        /// </summary>
        BY_APPOINTMENT,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AirConditioningType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum AirConditioningType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ja</para>
        /// <para xml:lang="en">yes</para>
        /// </summary>
        YES,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nein</para>
        /// <para xml:lang="en">no</para>
        /// </summary>
        NO,
        
        /// <summary>
        /// <para xml:lang="de-DE">Nach Vereinbarung</para>
        /// <para xml:lang="en">by appointment</para>
        /// </summary>
        BY_APPOINTMENT,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LocationClassificationType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum LocationClassificationType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NO_INFORMATION,
        
        /// <summary>
        /// <para xml:lang="de-DE">A-Lage</para>
        /// <para xml:lang="en">classification a</para>
        /// </summary>
        CLASSIFICATION_A,
        
        /// <summary>
        /// <para xml:lang="de-DE">B-Lage</para>
        /// <para xml:lang="en">classification b</para>
        /// </summary>
        CLASSIFICATION_B,
        
        /// <summary>
        /// <para xml:lang="de-DE">im Schoppingcenter</para>
        /// <para xml:lang="en">within shopping centre</para>
        /// </summary>
        SHOPPING_CENTRE,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Bereich der Zimmeranzahl</para>
    /// <para xml:lang="en">number of rooms range</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("NumberOfRoomsRange", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NumberOfRoomsRange
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimale Anzahl der Räume</para>
        /// <para xml:lang="de-DE">Anzahl Räume Typ zur Validierung</para>
        /// <para xml:lang="en">minimal number of rooms</para>
        /// <para xml:lang="en">number of room type for validation</para>
        /// <para xml:lang="en">Total number of digits: 6.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.5.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minimal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal MinimalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Minimal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Minimal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinimalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimale Anzahl der Räume</para>
        /// <para xml:lang="de-DE">Anzahl Räume Typ zur Validierung</para>
        /// <para xml:lang="en">minimal number of rooms</para>
        /// <para xml:lang="en">number of room type for validation</para>
        /// <para xml:lang="en">Total number of digits: 6.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.5.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> Minimal
        {
            get
            {
                if (this.MinimalValueSpecified)
                {
                    return this.MinimalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinimalValue = value.GetValueOrDefault();
                this.MinimalValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Maximale Anzahl der Räume</para>
        /// <para xml:lang="de-DE">Anzahl Räume Typ zur Validierung</para>
        /// <para xml:lang="en">maximal number of rooms</para>
        /// <para xml:lang="en">number of room type for validation</para>
        /// <para xml:lang="en">Total number of digits: 6.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.5.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("maximal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal MaximalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Maximal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Maximal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MaximalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Maximale Anzahl der Räume</para>
        /// <para xml:lang="de-DE">Anzahl Räume Typ zur Validierung</para>
        /// <para xml:lang="en">maximal number of rooms</para>
        /// <para xml:lang="en">number of room type for validation</para>
        /// <para xml:lang="en">Total number of digits: 6.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.5.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> Maximal
        {
            get
            {
                if (this.MaximalValueSpecified)
                {
                    return this.MaximalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaximalValue = value.GetValueOrDefault();
                this.MaximalValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Bereich der Etage</para>
    /// <para xml:lang="en">floor range</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FloorRange", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FloorRange
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimale Nummer der Etage</para>
        /// <para xml:lang="en">minimal floor</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minimal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int MinimalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Minimal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Minimal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinimalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimale Nummer der Etage</para>
        /// <para xml:lang="en">minimal floor</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> Minimal
        {
            get
            {
                if (this.MinimalValueSpecified)
                {
                    return this.MinimalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinimalValue = value.GetValueOrDefault();
                this.MinimalValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Maximale Nummer der Etage</para>
        /// <para xml:lang="en">maximal floor</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("maximal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int MaximalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Maximal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Maximal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MaximalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Maximale Nummer der Etage</para>
        /// <para xml:lang="en">maximal floor</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> Maximal
        {
            get
            {
                if (this.MaximalValueSpecified)
                {
                    return this.MaximalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaximalValue = value.GetValueOrDefault();
                this.MaximalValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Bereich des Preises</para>
    /// <para xml:lang="en">price range</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PriceRange", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PriceRange
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimaler Preis</para>
        /// <para xml:lang="de-DE">Typ zur Validierung</para>
        /// <para xml:lang="en">minimal price</para>
        /// <para xml:lang="en">type for validation</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 10000000000000.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minimal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal MinimalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Minimal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Minimal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinimalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimaler Preis</para>
        /// <para xml:lang="de-DE">Typ zur Validierung</para>
        /// <para xml:lang="en">minimal price</para>
        /// <para xml:lang="en">type for validation</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 10000000000000.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> Minimal
        {
            get
            {
                if (this.MinimalValueSpecified)
                {
                    return this.MinimalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinimalValue = value.GetValueOrDefault();
                this.MinimalValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Maximaler Preis</para>
        /// <para xml:lang="de-DE">Typ zur Validierung</para>
        /// <para xml:lang="en">maximal price</para>
        /// <para xml:lang="en">type for validation</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 10000000000000.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("maximal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal MaximalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Maximal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Maximal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MaximalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Maximaler Preis</para>
        /// <para xml:lang="de-DE">Typ zur Validierung</para>
        /// <para xml:lang="en">maximal price</para>
        /// <para xml:lang="en">type for validation</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 10000000000000.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> Maximal
        {
            get
            {
                if (this.MaximalValueSpecified)
                {
                    return this.MaximalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaximalValue = value.GetValueOrDefault();
                this.MaximalValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Bereich des Preises</para>
    /// <para xml:lang="en">price range</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PriceRangeMandatory", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PriceRangeMandatory
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimaler Preis</para>
        /// <para xml:lang="de-DE">Typ zur Validierung</para>
        /// <para xml:lang="en">minimal price</para>
        /// <para xml:lang="en">type for validation</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 10000000000000.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("minimal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Minimal { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Maximaler Preis</para>
        /// <para xml:lang="de-DE">Typ zur Validierung</para>
        /// <para xml:lang="en">maximal price</para>
        /// <para xml:lang="en">type for validation</para>
        /// <para xml:lang="en">Total number of digits: 15.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 10000000000000.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("maximal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Maximal { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Bereich der Fläche</para>
    /// <para xml:lang="en">area range</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AreaRange", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AreaRange
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimale Fläche</para>
        /// <para xml:lang="de-DE">Typ zur Validierung</para>
        /// <para xml:lang="en">minimal area</para>
        /// <para xml:lang="en">type for validation</para>
        /// <para xml:lang="en">Total number of digits: 10.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 100000000.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minimal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal MinimalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Minimal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Minimal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinimalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimale Fläche</para>
        /// <para xml:lang="de-DE">Typ zur Validierung</para>
        /// <para xml:lang="en">minimal area</para>
        /// <para xml:lang="en">type for validation</para>
        /// <para xml:lang="en">Total number of digits: 10.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 100000000.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> Minimal
        {
            get
            {
                if (this.MinimalValueSpecified)
                {
                    return this.MinimalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinimalValue = value.GetValueOrDefault();
                this.MinimalValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Maximale Fläche</para>
        /// <para xml:lang="de-DE">Typ zur Validierung</para>
        /// <para xml:lang="en">maximal area</para>
        /// <para xml:lang="en">type for validation</para>
        /// <para xml:lang="en">Total number of digits: 10.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 100000000.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("maximal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal MaximalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Maximal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Maximal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MaximalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Maximale Fläche</para>
        /// <para xml:lang="de-DE">Typ zur Validierung</para>
        /// <para xml:lang="en">maximal area</para>
        /// <para xml:lang="en">type for validation</para>
        /// <para xml:lang="en">Total number of digits: 10.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 100000000.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> Maximal
        {
            get
            {
                if (this.MaximalValueSpecified)
                {
                    return this.MaximalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaximalValue = value.GetValueOrDefault();
                this.MaximalValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Bereich der Fläche</para>
    /// <para xml:lang="en">area range</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AreaRangeMandatory", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AreaRangeMandatory
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimale Fläche</para>
        /// <para xml:lang="de-DE">Typ zur Validierung</para>
        /// <para xml:lang="en">minimal area</para>
        /// <para xml:lang="en">type for validation</para>
        /// <para xml:lang="en">Total number of digits: 10.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 100000000.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("minimal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Minimal { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Maximale Fläche</para>
        /// <para xml:lang="de-DE">Typ zur Validierung</para>
        /// <para xml:lang="en">maximal area</para>
        /// <para xml:lang="en">type for validation</para>
        /// <para xml:lang="en">Total number of digits: 10.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum exclusive value: 100000000.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("maximal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public decimal Maximal { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Bereich der Jahre (z.B. Baujahr)</para>
    /// <para xml:lang="en">year range</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("YearRange", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class YearRange
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimales Jahr</para>
        /// <para xml:lang="de-DE">Eine positive Zahl</para>
        /// <para xml:lang="en">minimal year</para>
        /// <para xml:lang="en">a positive number</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minimal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MinimalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Minimal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Minimal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinimalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimales Jahr</para>
        /// <para xml:lang="de-DE">Eine positive Zahl</para>
        /// <para xml:lang="en">minimal year</para>
        /// <para xml:lang="en">a positive number</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> Minimal
        {
            get
            {
                if (this.MinimalValueSpecified)
                {
                    return this.MinimalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinimalValue = value.GetValueOrDefault();
                this.MinimalValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Maximales Jahr</para>
        /// <para xml:lang="de-DE">Eine positive Zahl</para>
        /// <para xml:lang="en">maximal year</para>
        /// <para xml:lang="en">a positive number</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("maximal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MaximalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Maximal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Maximal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MaximalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Maximales Jahr</para>
        /// <para xml:lang="de-DE">Eine positive Zahl</para>
        /// <para xml:lang="en">maximal year</para>
        /// <para xml:lang="en">a positive number</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> Maximal
        {
            get
            {
                if (this.MaximalValueSpecified)
                {
                    return this.MaximalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaximalValue = value.GetValueOrDefault();
                this.MaximalValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Bereich des Parkplätze</para>
    /// <para xml:lang="en">parking space range</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ParkingSpaceRange", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ParkingSpaceRange
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimale Parkplatzanzahl</para>
        /// <para xml:lang="de-DE">Eine positive Zahl</para>
        /// <para xml:lang="en">minimal parking space</para>
        /// <para xml:lang="en">a positive number</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minimal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MinimalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Minimal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Minimal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinimalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimale Parkplatzanzahl</para>
        /// <para xml:lang="de-DE">Eine positive Zahl</para>
        /// <para xml:lang="en">minimal parking space</para>
        /// <para xml:lang="en">a positive number</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> Minimal
        {
            get
            {
                if (this.MinimalValueSpecified)
                {
                    return this.MinimalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinimalValue = value.GetValueOrDefault();
                this.MinimalValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Maximale Parkplatzanzahl</para>
        /// <para xml:lang="de-DE">Eine positive Zahl</para>
        /// <para xml:lang="en">maximal parking space</para>
        /// <para xml:lang="en">a positive number</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("maximal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int MaximalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Maximal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Maximal property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MaximalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Maximale Parkplatzanzahl</para>
        /// <para xml:lang="de-DE">Eine positive Zahl</para>
        /// <para xml:lang="en">maximal parking space</para>
        /// <para xml:lang="en">a positive number</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> Maximal
        {
            get
            {
                if (this.MaximalValueSpecified)
                {
                    return this.MaximalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MaximalValue = value.GetValueOrDefault();
                this.MaximalValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Generelles Element für die Geo Criterias</para>
    /// <para xml:lang="en">general type for geo criteria</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AbstractGeoCriteria", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RadiusCriteria))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RegionCriteria))]
    public partial class AbstractGeoCriteria
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Kriterien für die Umkreissuche</para>
    /// <para xml:lang="en">radius criteria</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RadiusCriteria", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RadiusCriteria : AbstractGeoCriteria
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">WGS84-Koordinate (GPS)</para>
        /// <para xml:lang="en">WGS84 Coordinate (GPS)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("wgs84", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Wgs84Coordinate Wgs84 { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Radius der Umkreissuche</para>
        /// <para xml:lang="en">radius for the radius search</para>
        /// <para xml:lang="en">Minimum exclusive value: 0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("radiusKm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double RadiusKm { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">formatierte Adresse</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">formatted address</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("label", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Label { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Adresse für die gespeicherte Suche.</para>
        /// <para xml:lang="en">Address for saved search search.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("address", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Address Address { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Kriterien für die Regionssuche</para>
    /// <para xml:lang="en">region criteria</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RegionCriteria", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegionCriteria : AbstractGeoCriteria
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<GeoInfoNodeCriteria> _geoInfoNodeCriteria;
        
        /// <summary>
        /// <para xml:lang="de-DE">Liste der IS24 Geo-Ids.</para>
        /// <para xml:lang="en">list of is24 geo ids.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("geoInfoNodeCriteria", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<GeoInfoNodeCriteria> GeoInfoNodeCriteria
        {
            get
            {
                return this._geoInfoNodeCriteria;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RegionCriteria" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RegionCriteria" /> class.</para>
        /// </summary>
        public RegionCriteria()
        {
            this._geoInfoNodeCriteria = new System.Collections.ObjectModel.Collection<GeoInfoNodeCriteria>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Liste der IS24 Geo-Ids.</para>
    /// <para xml:lang="en">list of is24 geo ids.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GeoInfoNodeCriteria", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeoInfoNodeCriteria
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kontinent Id</para>
        /// <para xml:lang="en">continent id</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("continentId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long ContinentId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Land Id</para>
        /// <para xml:lang="en">country id</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("countryId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long CountryId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bundesland Id</para>
        /// <para xml:lang="en">region id</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("regionId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long RegionIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RegionId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegionId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool RegionIdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bundesland Id</para>
        /// <para xml:lang="en">region id</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> RegionId
        {
            get
            {
                if (this.RegionIdValueSpecified)
                {
                    return this.RegionIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RegionIdValue = value.GetValueOrDefault();
                this.RegionIdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Stadt Id</para>
        /// <para xml:lang="en">city id</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("cityId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long CityIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CityId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CityId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CityIdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Stadt Id</para>
        /// <para xml:lang="en">city id</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> CityId
        {
            get
            {
                if (this.CityIdValueSpecified)
                {
                    return this.CityIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CityIdValue = value.GetValueOrDefault();
                this.CityIdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Stadtteil/Bezirk Id</para>
        /// <para xml:lang="en">district id</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("districtId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long DistrictIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistrictId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistrictId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DistrictIdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Stadtteil/Bezirk Id</para>
        /// <para xml:lang="en">district id</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> DistrictId
        {
            get
            {
                if (this.DistrictIdValueSpecified)
                {
                    return this.DistrictIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DistrictIdValue = value.GetValueOrDefault();
                this.DistrictIdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Name der Region</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">name of the region</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("label", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Label { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Art des Kontaktformulars</para>
    /// <para xml:lang="en">type of the contact form</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ContactFormType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum ContactFormType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">E-Mail-Kontaktformular (Schnellkontakt)</para>
        /// <para xml:lang="en">email contact (quick contact)</para>
        /// </summary>
        EMAIL,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ausfuehrliches Kontaktformular</para>
        /// <para xml:lang="en">detailed contact</para>
        /// </summary>
        LONG,
        
        /// <summary>
        /// <para xml:lang="de-DE">Telefon-Kontaktformular</para>
        /// <para xml:lang="en">phone contact</para>
        /// </summary>
        PHONE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Zeigt an, dass kein Kontaktformular sinnvoll angezeigt werden
        ///                        kann, z.B. da der Anbieter zwar Kontaktaufnahme per E-Mail wuenscht, aber selbst keine
        ///                        E-Mail-Adresse angegeben hat.
        ///                    </para>
        /// <para xml:lang="en">In case that it does not make sense to show a contact form, e.g.
        ///                        when the vendor requests an email contact but does not have any email-address
        ///                    </para>
        /// </summary>
        NONE,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Verweis auf einen Veröffentlichungskanal.</para>
    /// <para xml:lang="en">Reference to a publish channel.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PublishChannel", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PublishChannel
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Title des Elements.</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">Title of entity entry.</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("title", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Title { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Objekt das den Zusammenhang zwischen einer Immobilie und einem
    ///                Veröffentlichungskanal beschreibt.
    ///            </para>
    /// <para xml:lang="en">Object which describes the combination of a real estate and a publish
    ///                channel.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PublishObject", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("publishObject", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public partial class PublishObject
    {
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("realEstate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PublishObjectRealEstate RealEstate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Verweis auf einen Veröffentlichungskanal.</para>
        /// <para xml:lang="en">Reference to a publish channel.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("publishChannel", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public PublishChannel PublishChannel { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">IS24 ID des Veröffentlichungsobjektes</para>
        /// <para xml:lang="en">IS24 ID of the publish object</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Id { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Verweis auf eine Immobilie.</para>
    /// <para xml:lang="en">Reference to a real estate.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PublishObjectRealEstate", Namespace="http://rest.immobilienscout24.de/schema/common/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PublishObjectRealEstate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Title des Elements.</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">Title of entity entry.</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("title", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Title { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Veröffentlichungsatum auf IS24</para>
        /// <para xml:lang="en">date of the first publication on is24 channel</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("firstActivationDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime FirstActivationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FirstActivationDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FirstActivationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FirstActivationDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Veröffentlichungsatum auf IS24</para>
        /// <para xml:lang="en">date of the first publication on is24 channel</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> FirstActivationDate
        {
            get
            {
                if (this.FirstActivationDateValueSpecified)
                {
                    return this.FirstActivationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FirstActivationDateValue = value.GetValueOrDefault();
                this.FirstActivationDateValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Die Genauigkeit der Geokodierung.</para>
    /// <para xml:lang="en">The precision of the geocoding.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GeoCodingPrecisionType", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum GeoCodingPrecisionType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">schornsteingenau</para>
        /// <para xml:lang="en">precision rooftop</para>
        /// </summary>
        ROOFTOP,
        
        /// <summary>
        /// <para xml:lang="de-DE">hausnummerngenau</para>
        /// <para xml:lang="en">precision house</para>
        /// </summary>
        HOUSE_NUMBER,
        
        /// <summary>
        /// <para xml:lang="de-DE">strassenabschnittsgenau</para>
        /// <para xml:lang="en">precision street</para>
        /// </summary>
        STREET,
        
        /// <summary>
        /// <para xml:lang="de-DE">PLZ-genau</para>
        /// <para xml:lang="en">precision quarter</para>
        /// </summary>
        QUARTER,
        
        /// <summary>
        /// <para xml:lang="de-DE">stadtgenau</para>
        /// <para xml:lang="en">precision city</para>
        /// </summary>
        CITY,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Listenelement für GeoHierarchyElement.</para>
    /// <para xml:lang="en">List element for GeoHierarchyElement.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GeoHierarchyElements", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeoHierarchyElements
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<GeoHierarchyElement> _geoHierarchyElement;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("geoHierarchyElement", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<GeoHierarchyElement> GeoHierarchyElement
        {
            get
            {
                return this._geoHierarchyElement;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GeoHierarchyElement-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the GeoHierarchyElement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GeoHierarchyElementSpecified
        {
            get
            {
                return (this.GeoHierarchyElement.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="GeoHierarchyElements" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GeoHierarchyElements" /> class.</para>
        /// </summary>
        public GeoHierarchyElements()
        {
            this._geoHierarchyElement = new System.Collections.ObjectModel.Collection<GeoHierarchyElement>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Impressum</para>
    /// <para xml:lang="de-DE">Impressum vom Benutzer.</para>
    /// <para xml:lang="en">Impressum/Imprint</para>
    /// <para xml:lang="en">Impressum/Imprint of the user.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Imprint", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("imprint", Namespace="http://rest.immobilienscout24.de/schema/user/1.0")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Expose.Imprint))]
    public partial class Imprint
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("text", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Text { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Datum von bis</para>
    /// <para xml:lang="en">date range</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DateRange", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DateRange
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">von Datum</para>
        /// <para xml:lang="en">date from</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("dateFrom", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime DateFromValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DateFrom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateFrom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DateFromValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">von Datum</para>
        /// <para xml:lang="en">date from</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> DateFrom
        {
            get
            {
                if (this.DateFromValueSpecified)
                {
                    return this.DateFromValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateFromValue = value.GetValueOrDefault();
                this.DateFromValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">bis Datum</para>
        /// <para xml:lang="en">date to</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("dateTo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime DateToValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DateTo-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateTo property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DateToValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">bis Datum</para>
        /// <para xml:lang="en">date to</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> DateTo
        {
            get
            {
                if (this.DateToValueSpecified)
                {
                    return this.DateToValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateToValue = value.GetValueOrDefault();
                this.DateToValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Energieausweis</para>
    /// <para xml:lang="en">energy certificate</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EnergyPerformanceCertificate", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnergyPerformanceCertificate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Verfügbarkeit vom Energieausweis</para>
        /// <para xml:lang="en">availibility of the energy certificate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyCertificateAvailability", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EnergyCertificateAvailability EnergyCertificateAvailabilityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyCertificateAvailability-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyCertificateAvailability property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyCertificateAvailabilityValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Verfügbarkeit vom Energieausweis</para>
        /// <para xml:lang="en">availibility of the energy certificate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<EnergyCertificateAvailability> EnergyCertificateAvailability
        {
            get
            {
                if (this.EnergyCertificateAvailabilityValueSpecified)
                {
                    return this.EnergyCertificateAvailabilityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyCertificateAvailabilityValue = value.GetValueOrDefault();
                this.EnergyCertificateAvailabilityValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Erstellungsdatum vom Energieausweis</para>
        /// <para xml:lang="en">date of the creation of energy certificate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyCertificateCreationDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EnergyCertificateCreationDate EnergyCertificateCreationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyCertificateCreationDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyCertificateCreationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyCertificateCreationDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Erstellungsdatum vom Energieausweis</para>
        /// <para xml:lang="en">date of the creation of energy certificate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<EnergyCertificateCreationDate> EnergyCertificateCreationDate
        {
            get
            {
                if (this.EnergyCertificateCreationDateValueSpecified)
                {
                    return this.EnergyCertificateCreationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyCertificateCreationDateValue = value.GetValueOrDefault();
                this.EnergyCertificateCreationDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieeffizenzklasse</para>
        /// <para xml:lang="en">energy efficiency elass</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyEfficiencyClass", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EnergyEfficiencyClass EnergyEfficiencyClassValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyEfficiencyClass-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyEfficiencyClass property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyEfficiencyClassValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieeffizenzklasse</para>
        /// <para xml:lang="en">energy efficiency elass</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<EnergyEfficiencyClass> EnergyEfficiencyClass
        {
            get
            {
                if (this.EnergyEfficiencyClassValueSpecified)
                {
                    return this.EnergyEfficiencyClassValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyEfficiencyClassValue = value.GetValueOrDefault();
                this.EnergyEfficiencyClassValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Stromverbrauchskennwert kWh/(m²*a)</para>
        /// <para xml:lang="en">electricity consumption kWh/(m²*a)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("electricityConsumption", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ElectricityConsumptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ElectricityConsumption-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ElectricityConsumption property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ElectricityConsumptionValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Stromverbrauchskennwert kWh/(m²*a)</para>
        /// <para xml:lang="en">electricity consumption kWh/(m²*a)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> ElectricityConsumption
        {
            get
            {
                if (this.ElectricityConsumptionValueSpecified)
                {
                    return this.ElectricityConsumptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ElectricityConsumptionValue = value.GetValueOrDefault();
                this.ElectricityConsumptionValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizenergieverbrauchskennwert kWh/(m²*a)</para>
        /// <para xml:lang="en">heating consumption kWh/(m²*a)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("heatingConsumption", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double HeatingConsumptionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HeatingConsumption-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HeatingConsumption property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool HeatingConsumptionValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizenergieverbrauchskennwert kWh/(m²*a)</para>
        /// <para xml:lang="en">heating consumption kWh/(m²*a)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> HeatingConsumption
        {
            get
            {
                if (this.HeatingConsumptionValueSpecified)
                {
                    return this.HeatingConsumptionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HeatingConsumptionValue = value.GetValueOrDefault();
                this.HeatingConsumptionValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Endenergieverbrauch Strom kWh/(m²*a)</para>
        /// <para xml:lang="en">energy consumption electricity kWh/(m²*a)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyConsumptionElectricity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double EnergyConsumptionElectricityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyConsumptionElectricity-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyConsumptionElectricity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyConsumptionElectricityValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Endenergieverbrauch Strom kWh/(m²*a)</para>
        /// <para xml:lang="en">energy consumption electricity kWh/(m²*a)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> EnergyConsumptionElectricity
        {
            get
            {
                if (this.EnergyConsumptionElectricityValueSpecified)
                {
                    return this.EnergyConsumptionElectricityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyConsumptionElectricityValue = value.GetValueOrDefault();
                this.EnergyConsumptionElectricityValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Endenergieverbrauch Wärme kWh/(m²*a)</para>
        /// <para xml:lang="en">energy consumption heating kWh/(m²*a)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyConsumptionHeating", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double EnergyConsumptionHeatingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyConsumptionHeating-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyConsumptionHeating property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyConsumptionHeatingValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Endenergieverbrauch Wärme kWh/(m²*a)</para>
        /// <para xml:lang="en">energy consumption heating kWh/(m²*a)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> EnergyConsumptionHeating
        {
            get
            {
                if (this.EnergyConsumptionHeatingValueSpecified)
                {
                    return this.EnergyConsumptionHeatingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyConsumptionHeatingValue = value.GetValueOrDefault();
                this.EnergyConsumptionHeatingValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Endenergiebedarf Strom kWh/(m²*a)</para>
        /// <para xml:lang="en">thermal characteristic electricity kWh/(m²*a)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("thermalCharacteristicElectricity", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ThermalCharacteristicElectricityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThermalCharacteristicElectricity-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThermalCharacteristicElectricity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ThermalCharacteristicElectricityValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Endenergiebedarf Strom kWh/(m²*a)</para>
        /// <para xml:lang="en">thermal characteristic electricity kWh/(m²*a)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> ThermalCharacteristicElectricity
        {
            get
            {
                if (this.ThermalCharacteristicElectricityValueSpecified)
                {
                    return this.ThermalCharacteristicElectricityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ThermalCharacteristicElectricityValue = value.GetValueOrDefault();
                this.ThermalCharacteristicElectricityValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Endenergiebedarf Wärme kWh/(m²*a)</para>
        /// <para xml:lang="en">thermal characteristic hetaing kWh/(m²*a)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("thermalCharacteristicHeating", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double ThermalCharacteristicHeatingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ThermalCharacteristicHeating-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ThermalCharacteristicHeating property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ThermalCharacteristicHeatingValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Endenergiebedarf Wärme kWh/(m²*a)</para>
        /// <para xml:lang="en">thermal characteristic hetaing kWh/(m²*a)</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> ThermalCharacteristicHeating
        {
            get
            {
                if (this.ThermalCharacteristicHeatingValueSpecified)
                {
                    return this.ThermalCharacteristicHeatingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ThermalCharacteristicHeatingValue = value.GetValueOrDefault();
                this.ThermalCharacteristicHeatingValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EnergyCertificateAvailability", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum EnergyCertificateAvailability
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">vorhanden</para>
        /// <para xml:lang="en">certificate is available</para>
        /// </summary>
        AVAILABLE,
        
        /// <summary>
        /// <para xml:lang="de-DE">noch nicht vorhanden</para>
        /// <para xml:lang="en">certificate is not available</para>
        /// </summary>
        NOT_AVAILABLE_YET,
        
        /// <summary>
        /// <para xml:lang="de-DE">nicht notwendig</para>
        /// <para xml:lang="en">certificate is not required</para>
        /// </summary>
        NOT_REQUIRED,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EnergyCertificateCreationDate", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum EnergyCertificateCreationDate
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NOT_APPLICABLE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ausgestellt vor dem 01.05.2014</para>
        /// <para xml:lang="en">created before 01.05.2014</para>
        /// </summary>
        BEFORE_01_MAY_2014,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ausgestellt ab dem 01.05.2014</para>
        /// <para xml:lang="en">created from 01.05.2014</para>
        /// </summary>
        FROM_01_MAY_2014,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("EnergyEfficiencyClass", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public enum EnergyEfficiencyClass
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">keine Angabe</para>
        /// <para xml:lang="en">no information</para>
        /// </summary>
        NOT_APPLICABLE,
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("A+")]
        APlus,
        
        /// <summary>
        /// </summary>
        A,
        
        /// <summary>
        /// </summary>
        B,
        
        /// <summary>
        /// </summary>
        C,
        
        /// <summary>
        /// </summary>
        D,
        
        /// <summary>
        /// </summary>
        E,
        
        /// <summary>
        /// </summary>
        F,
        
        /// <summary>
        /// </summary>
        G,
        
        /// <summary>
        /// </summary>
        H,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Kontingent-Information</para>
    /// <para xml:lang="en">Contingent information</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Contingent", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Contingent
    {
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("count", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Count { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("tolerance", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Tolerance { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseApartment
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        Price Price
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        double LivingSpace
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms of an apartment</para>
        /// </summary>
        double NumberOfRooms
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is a information about the energie index available
        ///                    </para>
        /// </summary>
        System.Nullable<bool> EnergyPerformanceCertificate
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">has a built-in kitchen</para>
        /// </summary>
        System.Nullable<bool> BuiltInKitchen
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        System.Nullable<bool> Balcony
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnberechtigungsschein</para>
        /// <para xml:lang="en">needs certificate of eligibility</para>
        /// </summary>
        System.Nullable<bool> CertificateOfEligibilityNeeded
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        System.Nullable<bool> Garden
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        CourtageInfo Courtage
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseApartmentRent
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Ein Preis der für Bugets benutzt wird</para>
        /// <para xml:lang="en">A price with a scope concerning a budget</para>
        /// </summary>
        BudgetPrice CalculatedPrice
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseHouse
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an.
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval.
        ///                    </para>
        /// </summary>
        Price Price
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        double LivingSpace
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        double PlotArea
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms of a house</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        double NumberOfRooms
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available
        ///                    </para>
        /// </summary>
        System.Nullable<bool> EnergyPerformanceCertificate
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        CourtageInfo Courtage
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseHouseRent
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">has a built-in kitchen</para>
        /// </summary>
        bool BuiltInKitchen
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ein Preis der für Bugets benutzt wird</para>
        /// <para xml:lang="en">A price with a scope concerning a budget</para>
        /// </summary>
        BudgetPrice CalculatedPrice
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseShortTermAccommodation
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Pauschalmiete, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">total rent, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        Price Price
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        System.Nullable<double> LivingSpace
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms</para>
        /// </summary>
        System.Nullable<double> NumberOfRooms
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Frühester Mietbeginn</para>
        /// <para xml:lang="en">earliest time to begin the rent</para>
        /// </summary>
        System.DateTime StartRentalDate
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        System.Nullable<bool> Balcony
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        System.Nullable<bool> Garden
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Raucher oder Nichtraucher</para>
        /// <para xml:lang="en">if you cannot smoke in the rooms</para>
        /// </summary>
        System.Nullable<bool> NonSmoker
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Typ von Wohnen auf Zeit (Wohnung, Zimmer oder Haus)
        ///                    </para>
        /// <para xml:lang="en">Type of the short term accomodation (apartment, room or house)
        ///                    </para>
        /// </summary>
        ShortTermAccommodationType ShortTermAccomodationType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        CourtageInfo Courtage
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseHouseType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        Price Price
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        double LivingSpace
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche</para>
        /// <para xml:lang="en">total area</para>
        /// </summary>
        System.Nullable<double> TotalArea
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundfläche</para>
        /// <para xml:lang="en">base area</para>
        /// </summary>
        System.Nullable<double> BaseArea
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms</para>
        /// </summary>
        System.Nullable<double> NumberOfRooms
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        CourtageInfo Courtage
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bauweise</para>
        /// <para xml:lang="en">construction method</para>
        /// </summary>
        System.Nullable<HouseTypeConstructionMethodType> ConstructionMethod
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseCommercialRealEstates
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        CommercializationType CommercializationType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        Price Price
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        Price CalculatedPrice
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        System.Nullable<double> TotalFloorSpace
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        System.Nullable<double> NetFloorSpace
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        System.Nullable<double> MinDivisible
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        CourtageInfo Courtage
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseGastronomy
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Gastronomietyp</para>
        /// <para xml:lang="en">type of gastronomy</para>
        /// </summary>
        GastronomyType GastronomyType
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseSpecialPurpose
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Arten von Spezialgewerbe wie z.B. Bauernhof, Werkstatt oder
        ///                        Gewerbepark
        ///                    </para>
        /// <para xml:lang="en">Types for special industries like farm, repair shop or commercial
        ///                        centre
        ///                    </para>
        /// </summary>
        SpecialPurposeType SpecialPurposeType
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseInvestment
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        Price Price
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">vermietbare Fläche</para>
        /// <para xml:lang="en">area for rent</para>
        /// </summary>
        System.Nullable<double> IndustrialArea
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        System.Nullable<double> PlotArea
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtflaeche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        System.Nullable<double> NetFloorSpace
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Arten von Anlageimmobilien-Objekte wie z.B. Einfamilienhäuser,
        ///                        Lager oder Wohnanlagen
        ///                    </para>
        /// <para xml:lang="en">Type for investment objects, like single family houses, storages
        ///                        or housing estates
        ///                    </para>
        /// </summary>
        InvestmentType InvestmentType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available</para>
        /// </summary>
        System.Nullable<bool> EnergyPerformanceCertificate
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        CourtageInfo Courtage
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseCompulsoryAuction
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Marktwert der Immobilie, die Attribute geben die Art, die Währung
        ///                        und den Intervall an
        ///                    </para>
        /// <para xml:lang="en">Market value of the real estate, the attributes named the type,
        ///                        the currency and the interval
        ///                    </para>
        /// </summary>
        Price MarketValue
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mindestangebot zur Immobilie, die Attribute geben die Art, die
        ///                        Währung und den Intervall an. Das Feld wird berechnet mit 5/10 des Markpreises.
        ///                    </para>
        /// <para xml:lang="en">The lowest bid for the real estate, the attributes named the type,
        ///                        the currency and the interval, that is calculated by 5/10 of the market value.
        ///                    </para>
        /// </summary>
        Price LowestBid
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wiederholungstermin (Zweiter Termin)</para>
        /// <para xml:lang="en">Second date for the auction</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(false)]
        bool RecurrenceAppointment
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseSite
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        Price Price
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        double PlotArea
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        System.Nullable<double> MinDivisible
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        CourtageInfo Courtage
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseGarage
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        Price Price
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">area, you can use from this real estate typ</para>
        /// </summary>
        System.Nullable<double> UsableFloorSpace
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        CourtageInfo Courtage
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseFlatShareRoom
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        Price Price
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmerfläche</para>
        /// <para xml:lang="en">roomSize</para>
        /// </summary>
        double RoomSize
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Frühester Mietbeginn</para>
        /// <para xml:lang="en">earliest time to begin the rent</para>
        /// </summary>
        System.DateTime StartRentalDate
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        CourtageInfo Courtage
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Grundelemente für die Immobilientpyen zum Seniorenwohnen
    ///                (Altenpflege und Seniorenwohnen)
    ///            </para>
    /// <para xml:lang="en">General elements for all senior types (SeniorCare and Assisted
    ///                Living)
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseSenior
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kurzbeschreibung</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">short report about the real estate type</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string ShortDescription
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haustiere erlaubt</para>
        /// <para xml:lang="en">pets are allowed in the real estate</para>
        /// </summary>
        PetsAllowedType PetsAllowed
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Probewohnen</para>
        /// <para xml:lang="en">test living in the real estate</para>
        /// </summary>
        YesNotApplicableType TrialLivingPossible
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseAssistedLiving
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Eigene Kochmöglichkeit</para>
        /// <para xml:lang="en">has a cooking possibilty</para>
        /// </summary>
        YesNotApplicableType CookingPossibilty
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart (Miete, Kauf oder Pacht)</para>
        /// <para xml:lang="en">The Type of the marketing (rent, buy or lease)</para>
        /// </summary>
        MarketingType MarketingType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Seniorenwohnen Typ</para>
        /// <para xml:lang="en">The Type of the facility</para>
        /// </summary>
        FacilityType FacilityType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        bool Balcony
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseSeniorCare
    {
        
        /// <summary>
        /// </summary>
        System.Collections.ObjectModel.Collection<CareType> CareTypes
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        bool Balcony
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Haus-Kauf Immobilientyp.</para>
    /// <para xml:lang="en">Elements for the House-Buy realestate type.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedHouseBuy
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Einliegerwohnung</para>
        /// <para xml:lang="en">lodger flat</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> LodgerFlat
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bauphase</para>
        /// <para xml:lang="en">construction phase</para>
        /// </summary>
        System.Nullable<ConstructionPhaseType> ConstructionPhase
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Zusätzliche Eigenschaften für den Haustypen, die sich nicht in der
    ///                Ergebnisliste befinden.
    ///            </para>
    /// <para xml:lang="en">Additional Elements for the House types (not in Resultlist).
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedHouse
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Gebäudeart</para>
        /// <para xml:lang="en">building type</para>
        /// </summary>
        BuildingType BuildingType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweis</para>
        /// <para xml:lang="en">energy performance certificate</para>
        /// </summary>
        EnergyPerformanceCertificate EnergyCertificate
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Wohntypen</para>
    /// <para xml:lang="en">Elements for the living types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface ILivingInformation
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">cellar</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Cellar
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">handicapped accessible</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> HandicappedAccessible
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkflächenanzahl</para>
        /// <para xml:lang="en">number of parking spaces</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99999.</para>
        /// </summary>
        System.Nullable<int> NumberOfParkingSpaces
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        System.Nullable<RealEstateCondition> Condition
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Jahr der letzte Modernisierung</para>
        /// <para xml:lang="en">Year of last refurbishment</para>
        /// <para xml:lang="en">Minimum inclusive value: 1000.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        System.Nullable<int> LastRefurbishment
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Qualität der Ausstattung</para>
        /// <para xml:lang="en">interior quality</para>
        /// </summary>
        System.Nullable<InteriorQuality> InteriorQuality
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        System.Nullable<int> ConstructionYear
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr ist unbekannt</para>
        /// <para xml:lang="en">construction year unknown: true value only expected, instead of false set construction year</para>
        /// </summary>
        System.Nullable<bool> ConstructionYearUnknown
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        string FreeFrom
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED benutze heatingTypeEnev2014 Heizungsart</para>
        /// <para xml:lang="en">DEPRECATED use heatingTypeEnev2014 heating type</para>
        /// </summary>
        System.Nullable<HeatingType> HeatingType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        System.Nullable<HeatingTypeEnev2014> HeatingTypeEnev2014
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsarten</para>
        /// <para xml:lang="en">firing types</para>
        /// </summary>
        System.Collections.ObjectModel.Collection<FiringType> FiringTypes
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">wesentliche Energieträger</para>
        /// <para xml:lang="en">energy sources</para>
        /// </summary>
        System.Collections.ObjectModel.Collection<EnergySourceEnev2014> EnergySourcesEnev2014
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweistyp</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        System.Nullable<BuildingEnergyRatingType> BuildingEnergyRatingType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        System.Nullable<double> ThermalCharacteristic
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> EnergyConsumptionContainsWarmWater
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenzahl</para>
        /// <para xml:lang="en">number of floors</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        System.Nullable<int> NumberOfFloors
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">usable floor space</para>
        /// </summary>
        System.Nullable<double> UsableFloorSpace
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Schlafzimmer</para>
        /// <para xml:lang="en">number of bed rooms</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99.</para>
        /// </summary>
        System.Nullable<int> NumberOfBedRooms
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Badezimmer</para>
        /// <para xml:lang="en">number of bath rooms</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99.</para>
        /// </summary>
        System.Nullable<int> NumberOfBathRooms
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gästetoilette</para>
        /// <para xml:lang="en">guest toilet</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> GuestToilet
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz</para>
        /// <para xml:lang="en">parking space type</para>
        /// </summary>
        System.Nullable<ParkingSpaceType> ParkingSpaceType
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Wohn/Kauftypen</para>
    /// <para xml:lang="en">Elements for the livin buy types</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface ILivingBuy
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermietet</para>
        /// <para xml:lang="en">rented</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Rented
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mieteinnahmen pro Monat</para>
        /// <para xml:lang="en">rental income</para>
        /// </summary>
        System.Nullable<double> RentalIncome
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Denkmalschutzobjekt</para>
        /// <para xml:lang="en">monument</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Listed
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz-Kaufpreis</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        System.Nullable<double> ParkingSpacePrice
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Als Ferienhaus geeignet</para>
        /// <para xml:lang="en">summer residence practical</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> SummerResidencePractical
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedLivingRent : IBaseLivingRent
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Haustiere erlaubt</para>
        /// <para xml:lang="en">pets allowed</para>
        /// </summary>
        System.Nullable<PetsAllowedType> PetsAllowed
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Stellplatzmiete</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        System.Nullable<double> ParkingSpacePrice
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">"WG-geeigne</para>
        /// <para xml:lang="en">usable as flat share room</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> UseAsFlatshareRoom
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseLivingRent
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaltmiete</para>
        /// <para xml:lang="en">base rent</para>
        /// </summary>
        double BaseRent
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Warmmiete</para>
        /// <para xml:lang="en">total rent</para>
        /// </summary>
        System.Nullable<double> TotalRent
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenkosten</para>
        /// <para xml:lang="en">service charge</para>
        /// </summary>
        System.Nullable<double> ServiceCharge
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaution</para>
        /// <para xml:lang="de-DE">Kaution</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        string Deposit
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungskosten</para>
        /// <para xml:lang="en">heating costs</para>
        /// </summary>
        System.Nullable<double> HeatingCosts
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizkosten in Nebenkosten enthalten</para>
        /// <para xml:lang="en">heating costs in service charge</para>
        /// </summary>
        System.Nullable<YesNoNotApplicableType> HeatingCostsInServiceCharge
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedGarageRent
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Verfügbar ab</para>
        /// <para xml:lang="en">free from</para>
        /// </summary>
        System.Nullable<System.DateTime> FreeFrom
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Verfügbar bis</para>
        /// <para xml:lang="en">free until</para>
        /// </summary>
        System.Nullable<System.DateTime> FreeUntil
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IGarageInformation
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Garagentyp</para>
        /// <para xml:lang="en">The garage type (BUY,LONG_LEASE)</para>
        /// </summary>
        GarageType GarageType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        System.Nullable<int> ConstructionYear
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garagenlänge</para>
        /// <para xml:lang="en">length of the garage</para>
        /// </summary>
        System.Nullable<double> LengthGarage
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garagenbreite</para>
        /// <para xml:lang="en">width of the garage</para>
        /// </summary>
        System.Nullable<double> WidthGarage
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garagenhöhe</para>
        /// <para xml:lang="en">height of the garage</para>
        /// </summary>
        System.Nullable<double> HeightGarage
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        System.Nullable<RealEstateCondition> Condition
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letzte Modernisierung</para>
        /// <para xml:lang="en">last refurbishment</para>
        /// </summary>
        System.Nullable<int> LastRefurbishment
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Zusätzliche Eigenschaften für den Wohnungstypen Pflegeheim, die sich
    ///                nicht in der
    ///                Ergebnisliste befinden.
    ///            </para>
    /// <para xml:lang="en">Additional Elements for the apartment type senior care (not in Resultlist).
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedSeniorCare
    {
        
        /// <summary>
        /// </summary>
        System.Collections.ObjectModel.Collection<CareType> CareTypes
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflegestufe</para>
        /// <para xml:lang="en">Care level</para>
        /// </summary>
        CareLevelExpose CareLevel
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        Price Price
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bettenanzahl</para>
        /// <para xml:lang="en">number of beds</para>
        /// </summary>
        System.Nullable<int> NumberOfBeds
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Eroeffnung/Bezug</para>
        /// <para xml:lang="en">Opening</para>
        /// </summary>
        System.Nullable<System.DateTime> Opening
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflege von Demenz Patienten</para>
        /// <para xml:lang="en">Care of dementia patients</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> CareOfDementia
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflege von kuenstlicher Beatmung</para>
        /// <para xml:lang="en">Care of artificial respiration</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> CareOfArtificialRespiration
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflege von Wachkoma</para>
        /// <para xml:lang="en">Care of coma vigil</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> CareOfComaVigil
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflege von Schlaganfall</para>
        /// <para xml:lang="en">Care of stroke patients</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> CareOfStroke
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflege von Parkinson Patienten</para>
        /// <para xml:lang="en">Care of Parkinson patients</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> CareOfParkinson
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflege von Alzheimer Patienten</para>
        /// <para xml:lang="en">Care of Alzheimer patients</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> CareOfAlzheimer
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pflege von Multipler Sklerosis</para>
        /// <para xml:lang="en">Care of Multiple Sclerosis</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> CareOfMultipleSclerosis
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Hauseigene Küche verfügbar</para>
        /// <para xml:lang="en">Kitchen available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> KitchenAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmertyp</para>
        /// <para xml:lang="en">Room type</para>
        /// </summary>
        System.Nullable<RoomType> RoomType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Therapieangebot verfügbar</para>
        /// <para xml:lang="en">Therapy offerings available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> TherapyOfferingsAvailable
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Zusätzliche Eigenschaften für die Wohnungstypen Pflegeheim und
    ///                Seniorenwohnen, die sich nicht in der
    ///                Ergebnisliste befinden.
    ///            </para>
    /// <para xml:lang="en">Additional Elements for the apartment types senior care and assisted living
    ///                (not in Resultlist).
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IAssistedLivingInformation
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">barriere free</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> BarrierFree
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl betreute Wohnungen</para>
        /// <para xml:lang="en">number of apartments that are looked after</para>
        /// </summary>
        System.Nullable<int> NumberOfLookedAfterApartments
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Pflegeplätze</para>
        /// <para xml:lang="en">Number of the nursing places</para>
        /// </summary>
        System.Nullable<int> NumberOfNursingPlaces
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche von</para>
        /// <para xml:lang="en">Living space to</para>
        /// </summary>
        System.Nullable<double> LivingSpaceFrom
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche bis</para>
        /// <para xml:lang="en">Living space to</para>
        /// </summary>
        System.Nullable<double> LivingSpaceTo
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Behindertengerecht</para>
        /// <para xml:lang="en">handicapped accessible</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> HandicappedAccessible
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gästeappartments verfügbar</para>
        /// <para xml:lang="en">Guest apartments available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> GuestApartmentsAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Restaurant/ Café verfügbar</para>
        /// <para xml:lang="en">Restaurant available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> RestaurantAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Eigene Kochmöglichkeit</para>
        /// <para xml:lang="en">Cooking facilities available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> CookingFacilitiesAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mitnahme eigener Möbel möglich</para>
        /// <para xml:lang="en">Own furniture possible</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> OwnFurniturePossible
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Reinigungsservice verfügbar</para>
        /// <para xml:lang="en">Cleaning service available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> CleaningServiceAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einkaufsmöglichkeiten im Haus</para>
        /// <para xml:lang="en">Shopping facilities available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> ShoppingFacilitiesAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">24 Stunden Sicherheit</para>
        /// <para xml:lang="en">security 24 hours</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Security24Hours
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kulturprogramm verfügbar</para>
        /// <para xml:lang="en">cultural program available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> CulturalProgramAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Freizeitaktivitäten verfügbar</para>
        /// <para xml:lang="en">leisureActivitiesAvailable</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> LeisureActivitiesAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Religiöse Angebote</para>
        /// <para xml:lang="en">Religious offerings available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> ReligiousOfferingsAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmertyp</para>
        /// <para xml:lang="en">Room type</para>
        /// </summary>
        System.Nullable<BalconyAvailableType> BalconyAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Branchenbucheintrag</para>
        /// <para xml:lang="en">listed in yellow pages</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(false)]
        bool BranchEntry
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Zusätzliche Eigenschaften für den Wohnungstypen Seniorenwohnen, die sich
    ///                nicht in der
    ///                Ergebnisliste befinden.
    ///            </para>
    /// <para xml:lang="en">Additional Elements for the apartment type assisted living (not in
    ///                Resultlist).
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedAssistedLiving
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart (Miete, Kauf oder Pacht)</para>
        /// <para xml:lang="en">The Type of the marketing (rent, buy or lease)</para>
        /// </summary>
        MarketingType MarketingType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Seniorenwohnen Typ</para>
        /// <para xml:lang="en">The Type of the facility</para>
        /// </summary>
        FacilityType FacilityType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimaler Mietpreis; die Attribute geben die Art, die Währung und
        ///                        den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Minimal rent; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        Price MinBaseRent
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Minimaler Kaufpreis; die Attribute geben die Art, die Währung und
        ///                        den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Minimal purchase price; the attributes named the type, the currency
        ///                        and the
        ///                        interval
        ///                    </para>
        /// </summary>
        Price MinPurchasePrice
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// </summary>
        System.Nullable<int> ConstructionYear
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr ist unbekannt</para>
        /// <para xml:lang="en">construction year unknown: true value only expected, instead of false set construction year</para>
        /// </summary>
        System.Nullable<bool> ConstructionYearUnknown
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED numberOfRoomsFrom benutzen</para>
        /// <para xml:lang="en">DEPRECATED use numberOfRoomsFrom</para>
        /// </summary>
        System.Nullable<double> RoomAvailableFrom
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED numberOfRoomsTo benutzen</para>
        /// <para xml:lang="en">DEPRECATED use numberOfRoomsTo</para>
        /// </summary>
        System.Nullable<double> RoomAvailableTo
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED cookingFacilitiesAvailable benutzen</para>
        /// <para xml:lang="en">DEPRECATED use cookingFacilitiesAvailable</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> CookingPossibilty
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz verfügbar</para>
        /// <para xml:lang="en">Garage/parking available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> ParkingAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gemeinschaftsräume verfügbar</para>
        /// <para xml:lang="en">Common rooms available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> CommonRoomsAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gartenanlage/Park verfügbar</para>
        /// <para xml:lang="en">Garden/park available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> GardenAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Fitnessraum verfügbar</para>
        /// <para xml:lang="en">Fitness room available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> FitnessAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Schwimmbad verfügbar</para>
        /// <para xml:lang="en">pool available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> PoolAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Öffentl. Verkehrsmittel fußläufig erreichbar verfügbar
        ///                    </para>
        /// <para xml:lang="en">Public transportation in walking distance available
        ///                    </para>
        /// </summary>
        System.Nullable<YesNotApplicableType> PublicTransportationAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ambulanter Pflegedienst verfügbar</para>
        /// <para xml:lang="en">Ambulant nursing service available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> AmbulantNursingServiceAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bewohnernotruf im Zimmer verfügbar</para>
        /// <para xml:lang="en">Emergency call in room available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> EmergencyCallInRoomAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Durchgehend besetzter Empfang</para>
        /// <para xml:lang="en">Reception is manned at all times</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> ReceptionManned
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Med. Betreuung vor Ort verfügbar</para>
        /// <para xml:lang="en">Medical assistance on site available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> MedicalAssistanceAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haushaltshilfen verfügbar</para>
        /// <para xml:lang="en">Home help available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> HomeHelpAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Seelsorgerische Betreuung verfügbar</para>
        /// <para xml:lang="en">Counseling available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> CounselingAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohndarlehen verfügbar</para>
        /// <para xml:lang="en">loans available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> LoansAvailable
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl von</para>
        /// <para xml:lang="de-DE">Anzahl Räume Typ zur Validierung</para>
        /// <para xml:lang="en">count of rooms from</para>
        /// <para xml:lang="en">number of room type for validation</para>
        /// <para xml:lang="en">Total number of digits: 6.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.5.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        System.Nullable<decimal> NumberOfRoomsFrom
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl bis</para>
        /// <para xml:lang="de-DE">Anzahl Räume Typ zur Validierung</para>
        /// <para xml:lang="en">count of rooms to</para>
        /// <para xml:lang="en">number of room type for validation</para>
        /// <para xml:lang="en">Total number of digits: 6.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.5.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        System.Nullable<decimal> NumberOfRoomsTo
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweis</para>
        /// <para xml:lang="en">energy performance certificate</para>
        /// </summary>
        EnergyPerformanceCertificate EnergyCertificate
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        System.Nullable<HeatingTypeEnev2014> HeatingTypeEnev2014
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">wesentliche Energieträger</para>
        /// <para xml:lang="en">energy sources</para>
        /// </summary>
        System.Collections.ObjectModel.Collection<EnergySourceEnev2014> EnergySourcesEnev2014
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweistyp</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        System.Nullable<BuildingEnergyRatingType> BuildingEnergyRatingType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        System.Nullable<double> ThermalCharacteristic
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> EnergyConsumptionContainsWarmWater
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Zusätzliche Eigenschaften für den Wohnungstypen, die sich nicht in der
    ///                Ergebnisliste befinden.
    ///            </para>
    /// <para xml:lang="en">Additional Elements for the Apartment types (not in Resultlist).
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedApartment
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnungstyp</para>
        /// <para xml:lang="en">apartment type</para>
        /// </summary>
        System.Nullable<ApartmentType> ApartmentType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etage</para>
        /// <para xml:lang="en">floor</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// </summary>
        System.Nullable<int> Floor
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        System.Nullable<bool> Lift
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED Behindertengerecht,
        ///                        LivingInformation.handicappedAccessible ist zu verwenden
        ///                    </para>
        /// <para xml:lang="en">DEPRECATED assisted living, use
        ///                        LivingInformation.handicappedAccessible
        ///                    </para>
        /// </summary>
        System.Nullable<bool> AssistedLiving
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweis</para>
        /// <para xml:lang="en">energy performance certificate</para>
        /// </summary>
        EnergyPerformanceCertificate EnergyCertificate
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedCompulsoryAuction
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der Auktion</para>
        /// <para xml:lang="en">date of auction</para>
        /// </summary>
        System.DateTime DateOfAuction
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Änderung</para>
        /// <para xml:lang="en">last cahnge date</para>
        /// </summary>
        System.Nullable<System.DateTime> LastChangeDate
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aufhebungsdatum</para>
        /// <para xml:lang="en">date of cancellation</para>
        /// </summary>
        System.Nullable<System.DateTime> CancellationDate
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Erfassungsdatum</para>
        /// <para xml:lang="en">date of recordation</para>
        /// </summary>
        System.Nullable<System.DateTime> RecordationDate
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Fläche, unterschiedlich je nach Typ</para>
        /// <para xml:lang="en">area, different per type</para>
        /// </summary>
        double Area
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektart der Auktion</para>
        /// <para xml:lang="en">object type of the auction</para>
        /// </summary>
        CompulsoryAuctionType AuctionObjectType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Das Amtsgericht das für die Auktion verantwortlich ist
        ///                    </para>
        /// <para xml:lang="en">the county court responsible for the auction</para>
        /// </summary>
        CountyCourt CountyCourt
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Das Aktenzeichen beim Amtsgericht</para>
        /// <para xml:lang="en">the file reference at the county court</para>
        /// <para xml:lang="en">Maximum length: 18.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(18)]
        string FileReferenceAtCountyCourt
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundbuchsblatt-Nummer</para>
        /// <para xml:lang="en">number of folio</para>
        /// <para xml:lang="en">Maximum length: 40.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(40)]
        string NumberOfFolio
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilungsversteigerung</para>
        /// <para xml:lang="en">splitting auction</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(false)]
        bool SplittingAuction
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Besitzer des zu versteigernden Objekts</para>
        /// <para xml:lang="en">Owner of the object to be auctioned</para>
        /// <para xml:lang="en">Maximum length: 80.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(80)]
        string Owner
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweis</para>
        /// <para xml:lang="en">energy performance certificate</para>
        /// </summary>
        EnergyPerformanceCertificate EnergyCertificate
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        System.Nullable<HeatingTypeEnev2014> HeatingTypeEnev2014
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">wesentliche Energieträger</para>
        /// <para xml:lang="en">energy sources</para>
        /// </summary>
        System.Collections.ObjectModel.Collection<EnergySourceEnev2014> EnergySourcesEnev2014
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweistyp</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        System.Nullable<BuildingEnergyRatingType> BuildingEnergyRatingType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        System.Nullable<double> ThermalCharacteristic
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> EnergyConsumptionContainsWarmWater
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        System.Nullable<int> ConstructionYear
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr ist unbekannt</para>
        /// <para xml:lang="en">construction year unknown: true value only expected, instead of false set construction year</para>
        /// </summary>
        System.Nullable<bool> ConstructionYearUnknown
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedShortTermAccommodation
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaltmiete</para>
        /// <para xml:lang="en">base rent</para>
        /// </summary>
        System.Nullable<double> BaseRent
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        System.Nullable<BuildingEnergyRatingType> BuildingEnergyRatingType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">cellar</para>
        /// </summary>
        System.Nullable<bool> Cellar
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        System.Nullable<RealEstateCondition> Condition
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaution</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string Deposit
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Frei bis</para>
        /// <para xml:lang="en">end rental date</para>
        /// </summary>
        System.Nullable<System.DateTime> EndRentalDate
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> EnergyConsumptionContainsWarmWater
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsarten</para>
        /// <para xml:lang="en">firing types</para>
        /// </summary>
        System.Collections.ObjectModel.Collection<FiringType> FiringTypes
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">wesentliche Energieträger</para>
        /// <para xml:lang="en">energy sources</para>
        /// </summary>
        System.Collections.ObjectModel.Collection<EnergySourceEnev2014> EnergySourcesEnev2014
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etage</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">floor</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string Floor
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Geschlecht</para>
        /// <para xml:lang="en">gender type</para>
        /// </summary>
        System.Nullable<FlatMateGenderType> Gender
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gaeste-WC</para>
        /// <para xml:lang="en">guest toilet</para>
        /// </summary>
        System.Nullable<bool> GuestToilet
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">barrierefrei</para>
        /// <para xml:lang="en">handicapped accessible</para>
        /// </summary>
        System.Nullable<bool> HandicappedAccessible
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Moeblierung</para>
        /// <para xml:lang="en">has furniture</para>
        /// </summary>
        System.Nullable<YesNoNotApplicableType> HasFurniture
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED benutze heatingTypeEnev2014 Heizungsart </para>
        /// <para xml:lang="en">DEPRECATED use heatingTypeEnev2014 heating type</para>
        /// </summary>
        System.Nullable<HeatingType> HeatingType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        System.Nullable<HeatingTypeEnev2014> HeatingTypeEnev2014
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Personenaufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        System.Nullable<bool> Lift
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">maximale Personenanzahl</para>
        /// <para xml:lang="en">max number of persons</para>
        /// </summary>
        System.Nullable<int> MaxNumberOfPersons
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">maximale Mietdauer</para>
        /// <para xml:lang="en">max rental time</para>
        /// </summary>
        System.Nullable<double> MaxRentalTime
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mindestmietdauer</para>
        /// <para xml:lang="en">min rental time</para>
        /// </summary>
        System.Nullable<double> MinRentalTime
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenzahl</para>
        /// <para xml:lang="en">number of floors</para>
        /// </summary>
        System.Nullable<int> NumberOfFloors
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Garagen/Stellplatz</para>
        /// <para xml:lang="en">number of parking spaces</para>
        /// </summary>
        System.Nullable<int> NumberOfParkingSpaces
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/Stellplatz-Miete</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        System.Nullable<double> ParkingSpacePrice
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage-/Stellplatzart</para>
        /// <para xml:lang="en">parking space type</para>
        /// </summary>
        System.Nullable<ParkingSpaceType> ParkingSpaceType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haustiere</para>
        /// <para xml:lang="en">pets allowed</para>
        /// </summary>
        System.Nullable<PetsAllowedType> PetsAllowed
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenkosten</para>
        /// <para xml:lang="en">service charge</para>
        /// </summary>
        System.Nullable<double> ServiceCharge
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        System.Nullable<double> ThermalCharacteristic
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED Pauschalmiete, das Element "price" in BaseShortTermAccommodation ist zu benutzen</para>
        /// <para xml:lang="en">DEPRECATED total rent, use the element "price" in BaseShortTermAccommodation</para>
        /// </summary>
        System.Nullable<double> TotalRent
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// </summary>
        System.Nullable<int> ConstructionYear
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr ist unbekannt</para>
        /// <para xml:lang="en">construction year unknown: true value only expected, instead of false set construction year</para>
        /// </summary>
        System.Nullable<bool> ConstructionYearUnknown
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweis</para>
        /// <para xml:lang="en">energy performance certificate</para>
        /// </summary>
        EnergyPerformanceCertificate EnergyCertificate
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedInvestment
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        System.Nullable<double> TotalFloorSpace
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche der Immobilie</para>
        /// <para xml:lang="en">living space</para>
        /// </summary>
        System.Nullable<double> LivingSpace
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis pro Quadratmeter (Nutzerangabe)</para>
        /// <para xml:lang="en">price per sqm (user defined)</para>
        /// </summary>
        Price PricePerSQM
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaufpreis geteilt durch Mieteinnahmen pro Jahr</para>
        /// <para xml:lang="en">purchase price divided by rent per year</para>
        /// </summary>
        System.Nullable<double> PriceMultiplier
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mieteinahmen aktuell.</para>
        /// <para xml:lang="en">current rent</para>
        /// </summary>
        Price RentalIncomeActual
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mögliche Mieteinahmen.</para>
        /// <para xml:lang="en">possible rent</para>
        /// </summary>
        Price RentalIncomeTarget
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nicht umlegbare Kosten.</para>
        /// <para xml:lang="en">not reversible costs</para>
        /// </summary>
        Price OtherCosts
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Denkmalschutzobjekt</para>
        /// <para xml:lang="en">monument</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Listed
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Personenaufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(IS24RestApi.Common.YesNotApplicableType.NOT_APPLICABLE)]
        YesNotApplicableType Lift
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweis</para>
        /// <para xml:lang="en">energy performance certificate</para>
        /// </summary>
        EnergyPerformanceCertificate EnergyCertificate
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface ICommercialInformation
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Fahrweg zum Hauptbahnhof in Minuten.</para>
        /// <para xml:lang="en">Travel distance to main railway station in minutes.</para>
        /// </summary>
        System.Nullable<int> DistanceToMRS
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Fahrweg zur Autobahn in Minuten.</para>
        /// <para xml:lang="en">Travel distance to federal motorway in minutes.</para>
        /// </summary>
        System.Nullable<int> DistanceToFM
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Laufweg zu öffentlichen Verkehrsmittel in Minuten.</para>
        /// <para xml:lang="en">Walking distance to public transport in minutes.</para>
        /// </summary>
        System.Nullable<int> DistanceToPT
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Fahrweg zum Flughafen in Minuten.</para>
        /// <para xml:lang="en">Travel distance to airport in minutes.</para>
        /// </summary>
        System.Nullable<int> DistanceToAirport
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektzustand</para>
        /// <para xml:lang="en">condition</para>
        /// </summary>
        System.Nullable<RealEstateCondition> Condition
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Parkflächenanzahl</para>
        /// <para xml:lang="en">number of parking spaces</para>
        /// </summary>
        System.Nullable<int> NumberOfParkingSpaces
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garage/ Stellplatz-Kaufpreis</para>
        /// <para xml:lang="en">parking space price</para>
        /// </summary>
        System.Nullable<double> ParkingSpacePrice
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letzte Modernisierung</para>
        /// <para xml:lang="en">last refurbishment</para>
        /// </summary>
        System.Nullable<int> LastRefurbishment
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Qualität der Ausstattung</para>
        /// <para xml:lang="en">interior quality</para>
        /// </summary>
        System.Nullable<InteriorQuality> InteriorQuality
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// </summary>
        System.Nullable<int> ConstructionYear
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr ist unbekannt</para>
        /// <para xml:lang="en">construction year unknown: true value only expected, instead of false set construction year</para>
        /// </summary>
        System.Nullable<bool> ConstructionYearUnknown
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string FreeFrom
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED benutze heatingTypeEnev2014 Heizungsart </para>
        /// <para xml:lang="en">DEPRECATED use heatingTypeEnev2014 heating type</para>
        /// </summary>
        System.Nullable<HeatingType> HeatingType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        System.Nullable<HeatingTypeEnev2014> HeatingTypeEnev2014
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Befeuerungsarten</para>
        /// <para xml:lang="en">firing types</para>
        /// </summary>
        System.Collections.ObjectModel.Collection<FiringType> FiringTypes
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">wesentliche Energieträger</para>
        /// <para xml:lang="en">energy sources</para>
        /// </summary>
        System.Collections.ObjectModel.Collection<EnergySourceEnev2014> EnergySourcesEnev2014
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        System.Nullable<double> ThermalCharacteristic
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> EnergyConsumptionContainsWarmWater
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        System.Nullable<BuildingEnergyRatingType> BuildingEnergyRatingType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenfläche</para>
        /// <para xml:lang="en">additional area</para>
        /// </summary>
        System.Nullable<double> AdditionalArea
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etagenzahl (Dieser Wert ist ein String und flexibel (Etagenanzahl
        ///                        oder Etage))
        ///                    </para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">number of floor (this value is a string and flexible (number of
        ///                        floors or floors))
        ///                    </para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string NumberOfFloors
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nebenkosten</para>
        /// <para xml:lang="en">additional costs</para>
        /// </summary>
        Price AdditionalCosts
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">
    ///                Zusätzliche Eigenschaften für den Büro/Praxis, die sich nicht in der
    ///                Ergebnisliste befinden.
    ///            </para>
    /// <para xml:lang="en">
    ///                Additional Elements for the Office (not in Resultlist).
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedOffice
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Bürotyp</para>
        /// <para xml:lang="en">office type</para>
        /// </summary>
        OfficeType OfficeType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Personenaufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(IS24RestApi.Common.YesNotApplicableType.NOT_APPLICABLE)]
        YesNotApplicableType Lift
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">cellar</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Cellar
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">handicapped accessible</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> HandicappedAccessible
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bodenbelag</para>
        /// <para xml:lang="en">flooring type</para>
        /// </summary>
        System.Nullable<FlooringType> FlooringType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kaution</para>
        /// <para xml:lang="de-DE">Kaution</para>
        /// <para xml:lang="en">deposite</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(50)]
        string Deposit
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kantine/Cafeteria</para>
        /// <para xml:lang="en">canteen</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> HasCanteen
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">DV-Verkabelung</para>
        /// <para xml:lang="en">lan cables</para>
        /// </summary>
        System.Nullable<ItInfrastructureType> LanCables
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Starkstrom</para>
        /// <para xml:lang="en">high voltage</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> HighVoltage
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">kitchen complete</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> KitchenComplete
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Denkmalschutzobjekt</para>
        /// <para xml:lang="en">monument protection</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Listed
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Klimaanlage</para>
        /// <para xml:lang="en">air condition</para>
        /// </summary>
        System.Nullable<AirConditioningType> AirConditioning
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mietdauer</para>
        /// <para xml:lang="en">rent durations</para>
        /// </summary>
        System.Collections.ObjectModel.Collection<OfficeRentDuration> OfficeRentDurations
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweis</para>
        /// <para xml:lang="en">energy performance certificate</para>
        /// </summary>
        EnergyPerformanceCertificate EnergyCertificate
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("IExtendedOfficeOfficeRentDurations", Namespace="http://rest.immobilienscout24.de/schema/common/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IExtendedOfficeOfficeRentDurations
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OfficeRentDuration> _officeRentDuration;
        
        /// <summary>
        /// <para xml:lang="de-DE">Mietdauer</para>
        /// <para xml:lang="en">rent duration</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("officeRentDuration", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<OfficeRentDuration> OfficeRentDuration
        {
            get
            {
                return this._officeRentDuration;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OfficeRentDuration-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the OfficeRentDuration collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OfficeRentDurationSpecified
        {
            get
            {
                return (this.OfficeRentDuration.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="IExtendedOfficeOfficeRentDurations" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="IExtendedOfficeOfficeRentDurations" /> class.</para>
        /// </summary>
        public IExtendedOfficeOfficeRentDurations()
        {
            this._officeRentDuration = new System.Collections.ObjectModel.Collection<OfficeRentDuration>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedStore
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Einzelhandels-Objektart</para>
        /// <para xml:lang="en">store type</para>
        /// </summary>
        System.Nullable<StoreType> StoreType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lageart</para>
        /// <para xml:lang="en">location classification type</para>
        /// </summary>
        System.Nullable<LocationClassificationType> LocationClassificationType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED use minDivisible</para>
        /// <para xml:lang="en">DEPRECATED use minDivisible</para>
        /// </summary>
        System.Nullable<double> AreaDivisibleFrom
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lageart</para>
        /// <para xml:lang="en">shop window lengst</para>
        /// </summary>
        System.Nullable<double> ShopWindowLength
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Denkmalschutzobjekt</para>
        /// <para xml:lang="en">listed</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Listed
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Personenaufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Lift
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lastenaufzug</para>
        /// <para xml:lang="en">goods lift</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> GoodsLift
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lastenaufzug</para>
        /// <para xml:lang="en">goods lift</para>
        /// </summary>
        System.Nullable<double> GoodsLiftLoad
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Deckenlast</para>
        /// <para xml:lang="en">floor load</para>
        /// </summary>
        System.Nullable<double> FloorLoad
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Rampe</para>
        /// <para xml:lang="en">ramp</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Ramp
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">cellar</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Cellar
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zulieferungstyp</para>
        /// <para xml:lang="en">supplyType</para>
        /// </summary>
        System.Nullable<SupplyType> SupplyType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bodenbelag</para>
        /// <para xml:lang="en">flooringType</para>
        /// </summary>
        System.Nullable<FlooringType> FlooringType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mietkaution</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string Deposit
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweis</para>
        /// <para xml:lang="en">energy performance certificate</para>
        /// </summary>
        EnergyPerformanceCertificate EnergyCertificate
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedGastronomy
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Denkmalschutzobjekt</para>
        /// <para xml:lang="en">listed</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Listed
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Personenaufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Lift
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gastterasse</para>
        /// <para xml:lang="en">terrace</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Terrace
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Plätze Gastraum</para>
        /// <para xml:lang="en">number of seats</para>
        /// </summary>
        System.Nullable<int> NumberSeats
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Betten</para>
        /// <para xml:lang="en">number of beds</para>
        /// </summary>
        System.Nullable<int> NumberBeds
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">cellar</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Cellar
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mietkaution</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string Deposit
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweis</para>
        /// <para xml:lang="en">energy performance certificate</para>
        /// </summary>
        EnergyPerformanceCertificate EnergyCertificate
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedIndustry
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Halle-/Produktion-Objektart</para>
        /// <para xml:lang="en">industry type</para>
        /// </summary>
        IndustryType IndustryType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED use minDivisible</para>
        /// <para xml:lang="en">DEPRECATED use minDivisible</para>
        /// </summary>
        System.Nullable<double> AreaDivisibleFrom
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        System.Nullable<double> PlotArea
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Hallenhoehe</para>
        /// <para xml:lang="en">hall height</para>
        /// </summary>
        System.Nullable<double> HallHeight
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bodenbelag</para>
        /// <para xml:lang="en">flooring type</para>
        /// </summary>
        System.Nullable<FlooringType> FlooringType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Rampe</para>
        /// <para xml:lang="en">ramp</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Ramp
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Personenaufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Lift
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">HebeBühne</para>
        /// <para xml:lang="en">auto lift</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> AutoLift
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lastenaufzug</para>
        /// <para xml:lang="en">goods lift</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> GoodsLift
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lastenaufzugslast</para>
        /// <para xml:lang="en">goods lift</para>
        /// </summary>
        System.Nullable<double> GoodsLiftLoad
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kranbahn</para>
        /// <para xml:lang="en">crane runway</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> CraneRunway
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kranbahnlast</para>
        /// <para xml:lang="en">crane runway load</para>
        /// </summary>
        System.Nullable<double> CraneRunwayLoad
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Deckenlast</para>
        /// <para xml:lang="en">floor load</para>
        /// </summary>
        System.Nullable<double> FloorLoad
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Stromanschlusswert</para>
        /// <para xml:lang="en">connected load</para>
        /// </summary>
        System.Nullable<int> ConnectedLoad
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mietkaution</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string Deposit
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweis</para>
        /// <para xml:lang="en">energy performance certificate</para>
        /// </summary>
        EnergyPerformanceCertificate EnergyCertificate
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedSpecialPurpose
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Spezialgewerbe-Objektart</para>
        /// <para xml:lang="en">special purpose property type</para>
        /// </summary>
        SpecialPurposeType SpecialPurposePropertyType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED use minDivisible</para>
        /// <para xml:lang="en">DEPRECATED use minDivisible</para>
        /// </summary>
        System.Nullable<double> AreaDivisibleFrom
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstuecksflaeche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        System.Nullable<double> PlotArea
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Denkmalschutz</para>
        /// <para xml:lang="en">listed</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Listed
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Personenaufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Lift
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">basement</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Basement
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bodenbelag</para>
        /// <para xml:lang="en">flooring type</para>
        /// </summary>
        System.Nullable<FlooringType> FlooringType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mietkaution</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">deposit</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string Deposit
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweis</para>
        /// <para xml:lang="en">energy performance certificate</para>
        /// </summary>
        EnergyPerformanceCertificate EnergyCertificate
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedLivingBuySite
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, oder zur
        ///                        Erbpacht steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,LONG_LEASE)</para>
        /// </summary>
        CommercializationType CommercializationType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">empfohlene Nutzungsarten</para>
        /// <para xml:lang="en">recommended Use Types</para>
        /// </summary>
        System.Collections.ObjectModel.Collection<SiteRecommendedUseType> RecommendedUseTypes
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heimfall nach</para>
        /// <para xml:lang="en">tenancy</para>
        /// </summary>
        System.Nullable<int> Tenancy
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface ISiteInformation
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Bezugsfrei ab</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">free from</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string FreeFrom
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gibt an, ob das Grundstueck kurzfristig bebaubar ist
        ///                    </para>
        /// <para xml:lang="en">Indicates whether this area is short term constructible
        ///                    </para>
        /// </summary>
        System.Nullable<bool> ShortTermConstructible
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baugenehmigung</para>
        /// <para xml:lang="en">Indicates whether there exists a building permission for this area
        ///                    </para>
        /// </summary>
        System.Nullable<bool> BuildingPermission
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Abriss</para>
        /// <para xml:lang="en">Indicates whether demolition is planned</para>
        /// </summary>
        System.Nullable<bool> Demolition
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Erschliessung</para>
        /// <para xml:lang="en">site development type</para>
        /// </summary>
        System.Nullable<SiteDevelopmentType> SiteDevelopmentType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bebaubar nach</para>
        /// <para xml:lang="en">site constructible type</para>
        /// </summary>
        System.Nullable<SiteConstructibleType> SiteConstructibleType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundflaechenzahl</para>
        /// <para xml:lang="en">grz</para>
        /// </summary>
        System.Nullable<double> Grz
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Geschossflaechenzahl</para>
        /// <para xml:lang="en">gfz</para>
        /// </summary>
        System.Nullable<double> Gfz
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Pachtdauer Intervall Type (Nur für den GET Request)
        ///                    </para>
        /// <para xml:lang="en">lease interval (only for the get request)</para>
        /// </summary>
        System.Nullable<LeaseIntervalType> LeaseInterval
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedLivingRentSite
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, oder zur
        ///                        Erbpacht steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (RENT, LEASE)</para>
        /// </summary>
        CommercializationType CommercializationType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">empfohlene Nutzungsarten</para>
        /// <para xml:lang="en">recommended Use Types</para>
        /// </summary>
        System.Collections.ObjectModel.Collection<SiteRecommendedUseType> RecommendedUseTypes
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heimfall nach</para>
        /// <para xml:lang="en">tenancy</para>
        /// </summary>
        System.Nullable<int> Tenancy
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedTradeSite
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        CommercializationType CommercializationType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">empfohlene Nutzungsarten</para>
        /// <para xml:lang="en">recommended Use Types</para>
        /// </summary>
        System.Collections.ObjectModel.Collection<SiteRecommendedUseForTradeType> RecommendedUseTypes
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzung</para>
        /// <para xml:lang="en">Use</para>
        /// </summary>
        UtilizationTradeSite UtilizationTradeSite
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heimfall nach</para>
        /// <para xml:lang="en">tenancy</para>
        /// </summary>
        System.Nullable<int> Tenancy
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedHouseType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Objektart</para>
        /// <para xml:lang="en">object type</para>
        /// </summary>
        HouseTypeBuildingType BuildingType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ausbaustufe</para>
        /// <para xml:lang="en">house type stage of extension</para>
        /// </summary>
        System.Nullable<HouseTypeStageOfCompletionType> StageOfCompletionType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energiestandard</para>
        /// <para xml:lang="en">house type energy standard</para>
        /// </summary>
        System.Nullable<HouseTypeEnergyStandardType> EnergyStandardType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">U-Wert (Wärmedämmwert)</para>
        /// <para xml:lang="en">U-Value (thermal connectivity)</para>
        /// </summary>
        System.Nullable<double> UValue
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Typ Informationen</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">type information note</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string TypeInformationNote
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Modell Informationen</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">model information note</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string ModelInformationNote
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bauleistungs Informationen</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">contruction price information note</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string ContructionPriceInformationNote
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Geschoss Informationen</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">floor information note</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string FloorInformationNote
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Dachform Informationen</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">roof information note</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        string RoofInformationNote
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedFlatShareRoom
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmerfläche</para>
        /// <para xml:lang="en">room size</para>
        /// </summary>
        double RoomSize
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bodenbelag</para>
        /// <para xml:lang="en">flooring type</para>
        /// </summary>
        System.Nullable<FlooringType> FlooringType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Räume</para>
        /// <para xml:lang="en">number of rooms</para>
        /// </summary>
        System.Nullable<double> NumberOfRooms
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnungstyp</para>
        /// <para xml:lang="en">apartment type</para>
        /// </summary>
        System.Nullable<ApartmentType> ApartmentType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller verfügbar</para>
        /// <para xml:lang="en">cellar available</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Cellar
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">DEPRECATED benutze heatingTypeEnev2014 Heizungsart </para>
        /// <para xml:lang="en">DEPRECATED use heatingTypeEnev2014 heating type</para>
        /// </summary>
        System.Nullable<HeatingType> HeatingType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Heizungsart</para>
        /// <para xml:lang="en">heating type</para>
        /// </summary>
        System.Nullable<HeatingTypeEnev2014> HeatingTypeEnev2014
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">barriere free</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> BarrierFree
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        CourtageInfo Courtage
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweis</para>
        /// <para xml:lang="en">energy performance certificate</para>
        /// </summary>
        EnergyPerformanceCertificate EnergyCertificate
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">wesentliche Energieträger</para>
        /// <para xml:lang="en">energy sources</para>
        /// </summary>
        System.Collections.ObjectModel.Collection<EnergySourceEnev2014> EnergySourcesEnev2014
        {
            get;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieausweistyp</para>
        /// <para xml:lang="en">building energy rating type</para>
        /// </summary>
        System.Nullable<BuildingEnergyRatingType> BuildingEnergyRatingType
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauchskennwert</para>
        /// <para xml:lang="en">thermal characteristic</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1999.99.</para>
        /// </summary>
        System.Nullable<double> ThermalCharacteristic
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Energieverbrauch für Warmwasser enthalten</para>
        /// <para xml:lang="en">energy consumption contains warm water</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> EnergyConsumptionContainsWarmWater
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr</para>
        /// <para xml:lang="en">construction year</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        System.Nullable<int> ConstructionYear
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Baujahr ist unbekannt</para>
        /// <para xml:lang="en">construction year unknown: true value only expected, instead of false set construction year</para>
        /// </summary>
        System.Nullable<bool> ConstructionYearUnknown
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Zusätzliche Eigenschaften für den Wohnungstypen WG-Zimmer, die sich nicht
    ///                in der
    ///                Ergebnisliste befinden.
    ///            </para>
    /// <para xml:lang="en">Additional Elements for the apartment type flat share room (not in
    ///                Resultlist).
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IFlatShareAdditionalInformation
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Verfügbar ab</para>
        /// <para xml:lang="en">free from</para>
        /// </summary>
        System.Nullable<System.DateTime> FreeFrom
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Verfügbar bis</para>
        /// <para xml:lang="en">free until</para>
        /// </summary>
        System.Nullable<System.DateTime> FreeUntil
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mindest Mietdauer in Monaten</para>
        /// <para xml:lang="en">minimum term of lease in months</para>
        /// </summary>
        System.Nullable<int> MinimumTermOfLease
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche</para>
        /// <para xml:lang="en">total space</para>
        /// </summary>
        System.Nullable<double> TotalSpace
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der männlichen Mitbewohner</para>
        /// <para xml:lang="en">number of male flat mates</para>
        /// </summary>
        System.Nullable<int> NumberOfMaleFlatMates
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der weiblichen Mitbewohner</para>
        /// <para xml:lang="en">number of female flat mates</para>
        /// </summary>
        System.Nullable<int> NumberOfFemaleFlatMates
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Alter Mitbewohner von</para>
        /// <para xml:lang="en">age of flat mates from</para>
        /// </summary>
        System.Nullable<int> AgeOfFlatMatesFrom
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Alter Mitbewohner bis</para>
        /// <para xml:lang="en">age of flat mates to</para>
        /// </summary>
        System.Nullable<int> AgeOfFlatMatesTo
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Alter gesuchter Mitbewohner von</para>
        /// <para xml:lang="en">age of requested flat mates from</para>
        /// </summary>
        System.Nullable<int> AgeOfRequestedFrom
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Alter gesuchter Mitbewohner bis</para>
        /// <para xml:lang="en">age of requested flat mates to</para>
        /// </summary>
        System.Nullable<int> AgeOfRequestedTo
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl gesuchter Mitbewohner</para>
        /// <para xml:lang="en">number of requested flat mates</para>
        /// </summary>
        System.Nullable<int> NumberOfRequestedFlatMates
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Etage in der sich die WG befindet</para>
        /// <para xml:lang="en">floor the flat share is in</para>
        /// <para xml:lang="en">Minimum inclusive value: -1.</para>
        /// </summary>
        System.Nullable<int> Floor
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Etagen</para>
        /// <para xml:lang="en">number of floors</para>
        /// </summary>
        System.Nullable<int> NumberOfFloors
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl Badezimmer</para>
        /// <para xml:lang="en">number of bath rooms</para>
        /// </summary>
        System.Nullable<int> NumberOfBathRooms
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">balcony</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Balcony
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">garden</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Garden
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aufzug</para>
        /// <para xml:lang="en">lift</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Lift
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Backofen</para>
        /// <para xml:lang="en">oven</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Oven
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Kühlschrank</para>
        /// <para xml:lang="en">refrigerator</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Refrigerator
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Herd</para>
        /// <para xml:lang="en">stove</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Stove
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Spülmaschine</para>
        /// <para xml:lang="en">dishwasher</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> Dishwasher
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Waschmaschine</para>
        /// <para xml:lang="en">washingMachine</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> WashingMachine
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bad enthält ein Klo</para>
        /// <para xml:lang="en">bath has a toilet</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> BathHasWc
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bad enthält eine Dusche</para>
        /// <para xml:lang="en">bath has a shower</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> BathHasShower
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bad enthält eine Badewanne</para>
        /// <para xml:lang="en">bath has a tub</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> BathHasTub
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gästeklo</para>
        /// <para xml:lang="en">guest toilet</para>
        /// </summary>
        System.Nullable<YesNotApplicableType> GuestToilet
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haustiere erlaubt</para>
        /// <para xml:lang="en">pets are allowed in the real estate</para>
        /// </summary>
        PetsAllowedType PetsAllowed
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Art des Internetanschlusses</para>
        /// <para xml:lang="en">type of internet connection</para>
        /// </summary>
        InternetConnectionType InternetConnection
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Rauchen erlaubt</para>
        /// <para xml:lang="en">smoking allowed</para>
        /// </summary>
        SmokingAllowedType SmokingAllowed
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Geschlecht des gesuchten Mitbewohners</para>
        /// <para xml:lang="en">requested gender</para>
        /// </summary>
        FlatMateGenderType RequestedGender
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Art der Möblierung</para>
        /// <para xml:lang="en">furnishing type</para>
        /// </summary>
        YesNoNotApplicableType Furnishing
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Art des Fernsehanschlusses</para>
        /// <para xml:lang="en">tv connection</para>
        /// </summary>
        TvConnectionType TvConnection
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Art des Telefonanschlusses</para>
        /// <para xml:lang="en">telephone connection</para>
        /// </summary>
        TelephoneConnectionType TelephoneConnection
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Parktplatzsituation</para>
        /// <para xml:lang="en">parking situation</para>
        /// </summary>
        ParkingSituationType ParkingSituation
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">WG-Größe. 11 bedeuted alle WGs die größer als 10 sind!
        ///                    </para>
        /// <para xml:lang="de-DE">WG-Größe</para>
        /// <para xml:lang="en">flat share size. 11 means all flat share greater then 10!
        ///                    </para>
        /// <para xml:lang="en">flat share size</para>
        /// <para xml:lang="en">Total number of digits: 2.</para>
        /// <para xml:lang="en">Minimum inclusive value: 2.</para>
        /// <para xml:lang="en">Maximum inclusive value: 11.</para>
        /// </summary>
        int FlatShareSize
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">List von Kontaktdaten eines Anbieters</para>
    /// <para xml:lang="en">List of contact details of a realtor.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("realtorContactDetailsList", Namespace="http://rest.immobilienscout24.de/schema/common/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("realtorContactDetailsList", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public partial class RealtorContactDetailsList
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RealtorContactDetails> _realtorContactDetails;
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Kontaktdaten eines Anbieters</para>
        /// <para xml:lang="en">The contact details for a realtor.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("realtorContactDetails", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<RealtorContactDetails> RealtorContactDetails
        {
            get
            {
                return this._realtorContactDetails;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RealtorContactDetails-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RealtorContactDetails collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RealtorContactDetailsSpecified
        {
            get
            {
                return (this.RealtorContactDetails.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RealtorContactDetailsList" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RealtorContactDetailsList" /> class.</para>
        /// </summary>
        public RealtorContactDetailsList()
        {
            this._realtorContactDetails = new System.Collections.ObjectModel.Collection<RealtorContactDetails>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">To be done</para>
    /// <para xml:lang="en">List of entries in strict format</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("strictList", Namespace="http://rest.immobilienscout24.de/schema/common/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("strictList", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public partial class StrictList
    {
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("paging", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public Paging Paging { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<MatchCount> _matchCountList;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("matchCountList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("matchCount", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<MatchCount> MatchCountList
        {
            get
            {
                return this._matchCountList;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MatchCountList-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the MatchCountList collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MatchCountListSpecified
        {
            get
            {
                return (this.MatchCountList.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="StrictList" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="StrictList" /> class.</para>
        /// </summary>
        public StrictList()
        {
            this._matchCountList = new System.Collections.ObjectModel.Collection<MatchCount>();
            this._strictEntry = new System.Collections.ObjectModel.Collection<StrictEntry>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<StrictEntry> _strictEntry;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("strictEntry", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<StrictEntry> StrictEntry
        {
            get
            {
                return this._strictEntry;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StrictEntry-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the StrictEntry collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StrictEntrySpecified
        {
            get
            {
                return (this.StrictEntry.Count != 0);
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Liste von Veröffentlichungsobjekten.</para>
    /// <para xml:lang="en">List of publish objects.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("publishObjects", Namespace="http://rest.immobilienscout24.de/schema/common/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("publishObjects", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public partial class PublishObjects
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<PublishObject> _publishObject;
        
        /// <summary>
        /// <para xml:lang="de-DE">Objekt das den Zusammenhang zwischen einer Immobilie und
        ///                            einem Veröffentlichungskanal beschreibt.
        ///                        </para>
        /// <para xml:lang="en">Object which describes the combination of a real estate and a
        ///                            publish channel.
        ///                        </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("publishObject", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<PublishObject> PublishObject
        {
            get
            {
                return this._publishObject;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishObject-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PublishObject collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PublishObjectSpecified
        {
            get
            {
                return (this.PublishObject.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PublishObjects" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PublishObjects" /> class.</para>
        /// </summary>
        public PublishObjects()
        {
            this._publishObject = new System.Collections.ObjectModel.Collection<PublishObject>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Listenelement für Statistiken von GeoHierarchyElementen.
    ///            </para>
    /// <para xml:lang="en">List element for statistics of GeoHierarchyElements.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("geoHierarchyElementsStatistic", Namespace="http://rest.immobilienscout24.de/schema/common/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("geoHierarchyElementsStatistic", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public partial class GeoHierarchyElementsStatistic
    {
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("parent", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public GeoHierarchyElement Parent { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<GeoHierarchyElement> _children;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("children", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("geoHierarchyElement", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<GeoHierarchyElement> Children
        {
            get
            {
                return this._children;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="GeoHierarchyElementsStatistic" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GeoHierarchyElementsStatistic" /> class.</para>
        /// </summary>
        public GeoHierarchyElementsStatistic()
        {
            this._children = new System.Collections.ObjectModel.Collection<GeoHierarchyElement>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Liste von Veröffentlichungskanälen.</para>
    /// <para xml:lang="en">List of publish channels.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("publishChannels", Namespace="http://rest.immobilienscout24.de/schema/common/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("publishChannels", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
    public partial class PublishChannels
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<IS24RestApi.Common.PublishChannel> _publishChannel;
        
        /// <summary>
        /// <para xml:lang="de-DE">Verweis auf einen Veröffentlichungskanal.</para>
        /// <para xml:lang="en">Reference to a publish channel.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("publishChannel", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<IS24RestApi.Common.PublishChannel> PublishChannel
        {
            get
            {
                return this._publishChannel;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishChannel-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PublishChannel collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PublishChannelSpecified
        {
            get
            {
                return (this.PublishChannel.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="PublishChannels" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="PublishChannels" /> class.</para>
        /// </summary>
        public PublishChannels()
        {
            this._publishChannel = new System.Collections.ObjectModel.Collection<IS24RestApi.Common.PublishChannel>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Wohnung-Miete fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the Apartment-Rent realestate type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseApartmentRentGroup : IS24RestApi.Common.IBaseApartment, IS24RestApi.Common.IBaseApartmentRent
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Haus-Miete fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the House-Rent realestate type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseHouseRentGroup : IS24RestApi.Common.IBaseHouse, IS24RestApi.Common.IBaseHouseRent
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Wohnungs-Kauf fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the Apartment-Buy realestate type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseApartmentBuyGroup : IS24RestApi.Common.IBaseApartment
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Aufzug</para>
        /// <para xml:lang="en">has a lift</para>
        /// </summary>
        System.Nullable<bool> Lift
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gäste WC</para>
        /// <para xml:lang="en">has a guest toilet</para>
        /// </summary>
        System.Nullable<bool> GuestToilet
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">has a cellar</para>
        /// </summary>
        System.Nullable<bool> Cellar
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">is barrier free</para>
        /// </summary>
        System.Nullable<bool> IsBarrierFree
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Haus-Kauf fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the House-Buy realestate type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseHouseBuyGroup : IS24RestApi.Common.IBaseHouse
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Gäste WC</para>
        /// <para xml:lang="en">has a guest toilet</para>
        /// </summary>
        System.Nullable<bool> GuestToilet
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">has a cellar</para>
        /// </summary>
        System.Nullable<bool> Cellar
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">is barrier free</para>
        /// </summary>
        System.Nullable<bool> IsBarrierFree
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Wohnen auf Zeit fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the Short term accommodation realestate type for
    ///                List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseShortTermAccommodationGroup : IS24RestApi.Common.IBaseShortTermAccommodation
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Typenhäuser fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the house types realestate type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseHouseTypeGroup : IS24RestApi.Common.IBaseHouseType
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Büro fuer Liste Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the Office realestate type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseOfficeGroup : IS24RestApi.Common.IBaseCommercialRealEstates
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Einzelhandel fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the retail industry type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseStoreGroup : IS24RestApi.Common.IBaseCommercialRealEstates
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Gastronomie-Objekte fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the gastronomy services realestate type for
    ///                List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseGastronomyGroup : IS24RestApi.Common.IBaseCommercialRealEstates, IS24RestApi.Common.IBaseGastronomy
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Gewerbe-Objekte fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the common industries realestate type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseIndustryGroup : IS24RestApi.Common.IBaseCommercialRealEstates
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Spezialgewerbe-Objekte fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the special industry types for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseSpecialPurposeGroup : IS24RestApi.Common.IBaseCommercialRealEstates, IS24RestApi.Common.IBaseSpecialPurpose
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Anlageimmobilien-Objekte fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the investment objects realestate type for
    ///                List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseInvestmentGroup : IS24RestApi.Common.IBaseInvestment
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Zwangsversteigerungsobjekte fuer
    ///                Liste Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the compulsory auction objects type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseCompulsoryAuctionGroup : IS24RestApi.Common.IBaseCompulsoryAuction
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Grundstücke zum Kauf fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the sites to buy realestate type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseLivingBuySiteGroup : IS24RestApi.Common.IBaseSite
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Grundstücke zur Miete fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the sites to rent realestate type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseLivingRentSiteGroup : IS24RestApi.Common.IBaseSite
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Grundstücke als Anlageobjekte fuer
    ///                Liste Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the trading purposes realestate type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseTradeSiteGroup : IS24RestApi.Common.IBaseSite
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Garagen zum Kauf fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the garages to buy realestate type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseGarageBuyGroup : IS24RestApi.Common.IBaseGarage
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Garagen zur Miete fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the garages to rent realestate type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseGarageRentGroup : IS24RestApi.Common.IBaseGarage
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den WG-Zimmer fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the shared apartment realestate type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseFlatShareRoomGroup : IS24RestApi.Common.IBaseFlatShareRoom
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für Seniorenwohnen fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the assisted living realestate type for List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseAssistedLivingGroup : IS24RestApi.Common.IBaseSenior, IS24RestApi.Common.IBaseAssistedLiving
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Altenpflegeeinrichtungen fuer Liste
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the place for old people realestate type for
    ///                List.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IBaseSeniorCareGroup : IS24RestApi.Common.IBaseSenior, IS24RestApi.Common.IBaseSeniorCare
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Haus-Kauf Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the House-Buy realestate type.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedHouseBuyGroup : IS24RestApi.Common.IExtendedHouseBuy, IS24RestApi.Common.IExtendedHouse, IS24RestApi.Common.ILivingInformation, IS24RestApi.Common.ILivingBuy, IS24RestApi.Common.IBaseHouse
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Haus-Miete Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the House-Rent realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedHouseRentGroup : IS24RestApi.Common.IBaseHouse, IS24RestApi.Common.IExtendedHouse, IS24RestApi.Common.ILivingInformation, IS24RestApi.Common.IExtendedLivingRent
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Garagen zur Miete Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the garages to rent realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedGarageRentGroup : IS24RestApi.Common.IBaseGarage, IS24RestApi.Common.IExtendedGarageRent, IS24RestApi.Common.IGarageInformation
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Garagen zum Kauf Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the garages to buy realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedGarageBuyGroup : IS24RestApi.Common.IBaseGarage, IS24RestApi.Common.IGarageInformation
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Altenpflegeeinrichtungen
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the place for old people realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedSeniorCareGroup : IS24RestApi.Common.IBaseSenior, IS24RestApi.Common.IExtendedSeniorCare, IS24RestApi.Common.IAssistedLivingInformation
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Seniorenwohnen Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the assisted living realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedAssistedLivingGroup : IS24RestApi.Common.IBaseSenior, IS24RestApi.Common.IExtendedAssistedLiving, IS24RestApi.Common.IAssistedLivingInformation
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Wohnung-Miete Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the Apartment-Rent realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedApartmentRentGroup : IS24RestApi.Common.IExtendedApartment, IS24RestApi.Common.ILivingInformation, IS24RestApi.Common.IExtendedLivingRent, IS24RestApi.Common.IBaseApartment
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Wohnung-Kauf Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the Apartment-Buy realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedApartmentBuyGroup : IS24RestApi.Common.IExtendedApartment, IS24RestApi.Common.ILivingInformation, IS24RestApi.Common.ILivingBuy, IS24RestApi.Common.IBaseApartment
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Hausgeld</para>
        /// <para xml:lang="en">serviceCharge</para>
        /// </summary>
        System.Nullable<double> ServiceCharge
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Zwangsversteigerungsobjekte
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the compulsory auction realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedCompulsoryAuctionGroup : IS24RestApi.Common.IBaseCompulsoryAuction, IS24RestApi.Common.IExtendedCompulsoryAuction
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Wohnen auf Zeit Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the Short term accommodation realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedShortTermAccommodationGroup : IS24RestApi.Common.IExtendedShortTermAccommodation, IS24RestApi.Common.IBaseShortTermAccommodation
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Anlageimmobilien-Objekte
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the investment objects realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedInvestmentGroup : IS24RestApi.Common.IBaseInvestment, IS24RestApi.Common.IExtendedInvestment, IS24RestApi.Common.ICommercialInformation
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Buero Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the Office realestate type.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedOfficeGroup : IS24RestApi.Common.IExtendedOffice, IS24RestApi.Common.ICommercialInformation, IS24RestApi.Common.IBaseCommercialRealEstates
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Einzelhandel Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the Store realestate type.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedStoreGroup : IS24RestApi.Common.IExtendedStore, IS24RestApi.Common.IBaseCommercialRealEstates, IS24RestApi.Common.ICommercialInformation
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Gastronomie Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the Gastronomy realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedGastronomyGroup : IS24RestApi.Common.IBaseGastronomy, IS24RestApi.Common.IExtendedGastronomy, IS24RestApi.Common.IBaseCommercialRealEstates, IS24RestApi.Common.ICommercialInformation
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Gewerbe-Objekte Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the Industry realestate type.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedIndustryGroup : IS24RestApi.Common.IExtendedIndustry, IS24RestApi.Common.IBaseCommercialRealEstates, IS24RestApi.Common.ICommercialInformation
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Spezialgewerbe Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the Special Purpose realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedSpecialPurposeGroup : IS24RestApi.Common.IExtendedSpecialPurpose, IS24RestApi.Common.IBaseCommercialRealEstates, IS24RestApi.Common.ICommercialInformation
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Grundstücke zum Kauf
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the sites to buy realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedLivingBuySiteGroup : IS24RestApi.Common.IExtendedLivingBuySite, IS24RestApi.Common.IBaseSite, IS24RestApi.Common.ISiteInformation
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Grundstücke zur Miete
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the sites to rent realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedLivingRentSiteGroup : IS24RestApi.Common.IExtendedLivingRentSite, IS24RestApi.Common.IBaseSite, IS24RestApi.Common.ISiteInformation
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Grundstueck-Gewerbe
    ///                Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the Trade Site realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedTradeSiteGroup : IS24RestApi.Common.IExtendedTradeSite, IS24RestApi.Common.IBaseSite, IS24RestApi.Common.ISiteInformation
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den Typenhäuser Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the house types realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedHouseTypeGroup : IS24RestApi.Common.IBaseHouseType, IS24RestApi.Common.IExtendedHouseType
    {
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Gruppierung der Eigenschaften für den WG-Zimmer Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Bundle of the Elements for the shared apartment realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IExtendedFlatShareRoomGroup : IS24RestApi.Common.IExtendedFlatShareRoom, IS24RestApi.Common.IBaseLivingRent, IS24RestApi.Common.IFlatShareAdditionalInformation
    {
    }
}
