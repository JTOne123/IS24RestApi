//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.31.0.
namespace IS24RestApi.Platform.Gis
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para xml:lang="de-DE">Eine Adresse mit zugehöriger Geokodierungs-Information.</para>
    /// <para xml:lang="en">An address with its geocoding information.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GeoCodedAddress", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GeoCodedAddress
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Adresse</para>
        /// <para xml:lang="en">The address</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("address", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Address Address { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">WGS84 Koordinaten </para>
        /// <para xml:lang="en">WGS84 coordinates</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("wgs84Coordinate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Wgs84Coordinate Wgs84Coordinate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Genauigkeit der Geokodierung.</para>
        /// <para xml:lang="en">The precision of the geocoding.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("geoCodingPrecision", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.GeoCodingPrecisionType GeoCodingPrecision { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Geo-Hierarchie-Informationen.</para>
        /// <para xml:lang="en">The geo-hierarchy information.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("geoCodingHierarchy", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.GeoHierarchy GeoCodingHierarchy { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Repräsentiert eine Liste	von Kontinenten.</para>
    /// <para xml:lang="en">Represents a list of continents.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("continents", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("continents", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0")]
    public partial class Continents
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ContinentsContinent> _continent;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("Continent", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<ContinentsContinent> Continent
        {
            get
            {
                return this._continent;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Continent-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Continent collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContinentSpecified
        {
            get
            {
                return (this.Continent.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Continents" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Continents" /> class.</para>
        /// </summary>
        public Continents()
        {
            this._continent = new System.Collections.ObjectModel.Collection<ContinentsContinent>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ContinentsContinent", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContinentsContinent : IS24RestApi.Common.IReference
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lesbarer Name des Elements (wenn vorhanden).</para>
        /// <para xml:lang="en">Human readable name of the entity (if it exists).</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("label", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Label { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("modification", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime ModificationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Modification-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Modification property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ModificationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Modification
        {
            get
            {
                if (this.ModificationValueSpecified)
                {
                    return this.ModificationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ModificationValue = value.GetValueOrDefault();
                this.ModificationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("creation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime CreationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Creation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Creation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CreationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Creation
        {
            get
            {
                if (this.CreationValueSpecified)
                {
                    return this.CreationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationValue = value.GetValueOrDefault();
                this.CreationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("publishDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime PublishDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublishDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PublishDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> PublishDate
        {
            get
            {
                if (this.PublishDateValueSpecified)
                {
                    return this.PublishDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PublishDateValue = value.GetValueOrDefault();
                this.PublishDateValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Repräsentiert eine Liste	von Ländern.</para>
    /// <para xml:lang="en">Represents a list of countries.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("countries", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("countries", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0")]
    public partial class Countries
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<CountriesCountry> _country;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("Country", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<CountriesCountry> Country
        {
            get
            {
                return this._country;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Country-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Country collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountrySpecified
        {
            get
            {
                return (this.Country.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Countries" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Countries" /> class.</para>
        /// </summary>
        public Countries()
        {
            this._country = new System.Collections.ObjectModel.Collection<CountriesCountry>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CountriesCountry", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountriesCountry : IS24RestApi.Common.IReference
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lesbarer Name des Elements (wenn vorhanden).</para>
        /// <para xml:lang="en">Human readable name of the entity (if it exists).</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("label", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Label { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("modification", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime ModificationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Modification-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Modification property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ModificationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Modification
        {
            get
            {
                if (this.ModificationValueSpecified)
                {
                    return this.ModificationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ModificationValue = value.GetValueOrDefault();
                this.ModificationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("creation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime CreationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Creation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Creation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CreationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Creation
        {
            get
            {
                if (this.CreationValueSpecified)
                {
                    return this.CreationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationValue = value.GetValueOrDefault();
                this.CreationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("publishDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime PublishDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublishDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PublishDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> PublishDate
        {
            get
            {
                if (this.PublishDateValueSpecified)
                {
                    return this.PublishDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PublishDateValue = value.GetValueOrDefault();
                this.PublishDateValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Repräsentiert eine Liste	von Bundesländern.</para>
    /// <para xml:lang="en">Represents a list of regions.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("regions", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("regions", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0")]
    public partial class Regions
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<RegionsRegion> _region;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("Region", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<RegionsRegion> Region
        {
            get
            {
                return this._region;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Region-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Region collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegionSpecified
        {
            get
            {
                return (this.Region.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Regions" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Regions" /> class.</para>
        /// </summary>
        public Regions()
        {
            this._region = new System.Collections.ObjectModel.Collection<RegionsRegion>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("RegionsRegion", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegionsRegion : IS24RestApi.Common.IReference
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lesbarer Name des Elements (wenn vorhanden).</para>
        /// <para xml:lang="en">Human readable name of the entity (if it exists).</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("label", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Label { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("modification", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime ModificationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Modification-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Modification property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ModificationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Modification
        {
            get
            {
                if (this.ModificationValueSpecified)
                {
                    return this.ModificationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ModificationValue = value.GetValueOrDefault();
                this.ModificationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("creation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime CreationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Creation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Creation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CreationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Creation
        {
            get
            {
                if (this.CreationValueSpecified)
                {
                    return this.CreationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationValue = value.GetValueOrDefault();
                this.CreationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("publishDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime PublishDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublishDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PublishDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> PublishDate
        {
            get
            {
                if (this.PublishDateValueSpecified)
                {
                    return this.PublishDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PublishDateValue = value.GetValueOrDefault();
                this.PublishDateValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Repräsentiert eine Liste von Städten/Kreisen.</para>
    /// <para xml:lang="en">Represents a list of cities.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("cities", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("cities", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0")]
    public partial class Cities
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<CitiesCity> _city;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("City", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<CitiesCity> City
        {
            get
            {
                return this._city;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die City-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the City collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CitySpecified
        {
            get
            {
                return (this.City.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Cities" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Cities" /> class.</para>
        /// </summary>
        public Cities()
        {
            this._city = new System.Collections.ObjectModel.Collection<CitiesCity>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CitiesCity", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CitiesCity : IS24RestApi.Common.IReference
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lesbarer Name des Elements (wenn vorhanden).</para>
        /// <para xml:lang="en">Human readable name of the entity (if it exists).</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("label", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Label { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("modification", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime ModificationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Modification-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Modification property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ModificationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Modification
        {
            get
            {
                if (this.ModificationValueSpecified)
                {
                    return this.ModificationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ModificationValue = value.GetValueOrDefault();
                this.ModificationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("creation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime CreationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Creation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Creation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CreationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Creation
        {
            get
            {
                if (this.CreationValueSpecified)
                {
                    return this.CreationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationValue = value.GetValueOrDefault();
                this.CreationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("publishDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime PublishDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublishDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PublishDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> PublishDate
        {
            get
            {
                if (this.PublishDateValueSpecified)
                {
                    return this.PublishDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PublishDateValue = value.GetValueOrDefault();
                this.PublishDateValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Repräsentiert eine Liste von Bezirken/Gemeinden.</para>
    /// <para xml:lang="en">Represents a list of quarters.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("quarters", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("quarters", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0")]
    public partial class Quarters
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<QuartersQuarter> _quarter;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("Quarter", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<QuartersQuarter> Quarter
        {
            get
            {
                return this._quarter;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Quarter-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Quarter collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuarterSpecified
        {
            get
            {
                return (this.Quarter.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Quarters" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Quarters" /> class.</para>
        /// </summary>
        public Quarters()
        {
            this._quarter = new System.Collections.ObjectModel.Collection<QuartersQuarter>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("QuartersQuarter", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QuartersQuarter : IS24RestApi.Common.IReference
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lesbarer Name des Elements (wenn vorhanden).</para>
        /// <para xml:lang="en">Human readable name of the entity (if it exists).</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("label", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Label { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("modification", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime ModificationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Modification-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Modification property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ModificationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Modification
        {
            get
            {
                if (this.ModificationValueSpecified)
                {
                    return this.ModificationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ModificationValue = value.GetValueOrDefault();
                this.ModificationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("creation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime CreationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Creation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Creation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CreationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Creation
        {
            get
            {
                if (this.CreationValueSpecified)
                {
                    return this.CreationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationValue = value.GetValueOrDefault();
                this.CreationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("publishDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime PublishDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublishDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PublishDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> PublishDate
        {
            get
            {
                if (this.PublishDateValueSpecified)
                {
                    return this.PublishDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PublishDateValue = value.GetValueOrDefault();
                this.PublishDateValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eine Liste mit geokodierten Adressen.</para>
    /// <para xml:lang="en">A list of geocoded addresses.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("geoCodedAddressList", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("geoCodedAddressList", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0")]
    public partial class GeoCodedAddressList
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<GeoCodedAddress> _geoCodedAddress;
        
        /// <summary>
        /// <para xml:lang="de-DE">Eine Adresse mit	zugehöriger Geokodierungs-Information.</para>
        /// <para xml:lang="en">An address with its	geocoding information.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("geoCodedAddress", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<GeoCodedAddress> GeoCodedAddress
        {
            get
            {
                return this._geoCodedAddress;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GeoCodedAddress-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the GeoCodedAddress collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GeoCodedAddressSpecified
        {
            get
            {
                return (this.GeoCodedAddress.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="GeoCodedAddressList" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="GeoCodedAddressList" /> class.</para>
        /// </summary>
        public GeoCodedAddressList()
        {
            this._geoCodedAddress = new System.Collections.ObjectModel.Collection<GeoCodedAddress>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("geoHierarchyInfo", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("geoHierarchyInfo", Namespace="http://rest.immobilienscout24.de/schema/platform/gis/1.0")]
    public partial class GeoHierarchyInfo
    {
        
        /// <summary>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("regionId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int RegionIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RegionId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RegionId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool RegionIdValueSpecified { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> RegionId
        {
            get
            {
                if (this.RegionIdValueSpecified)
                {
                    return this.RegionIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RegionIdValue = value.GetValueOrDefault();
                this.RegionIdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("cityId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int CityIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CityId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CityId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CityIdValueSpecified { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> CityId
        {
            get
            {
                if (this.CityIdValueSpecified)
                {
                    return this.CityIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CityIdValue = value.GetValueOrDefault();
                this.CityIdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("districtId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="int")]
        public int DistrictIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DistrictId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DistrictId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DistrictIdValueSpecified { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> DistrictId
        {
            get
            {
                if (this.DistrictIdValueSpecified)
                {
                    return this.DistrictIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DistrictIdValue = value.GetValueOrDefault();
                this.DistrictIdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("postalCode", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string PostalCode { get; set; }
        
        /// <summary>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("neighbourhoodId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long NeighbourhoodIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NeighbourhoodId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NeighbourhoodId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NeighbourhoodIdValueSpecified { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> NeighbourhoodId
        {
            get
            {
                if (this.NeighbourhoodIdValueSpecified)
                {
                    return this.NeighbourhoodIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NeighbourhoodIdValue = value.GetValueOrDefault();
                this.NeighbourhoodIdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("gkz", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Gkz { get; set; }
    }
}
