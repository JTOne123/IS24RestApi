//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 0.6.5640.32393.
namespace IS24RestApi.Search.Common
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para xml:lang="de-DE">Allgemeine Elemente für alle Immobilienarten.</para>
    /// <para xml:lang="en">General elements for all real estates within the search context.
    ///      </para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("RealEstateForList", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.ApartmentBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.ApartmentRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.AssistedLiving))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.CompulsoryAuction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.FlatShareRoom))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.GarageBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.GarageRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.Gastronomy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.HouseBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.HouseRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.HouseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.Industry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.Investment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.LivingBuySite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.LivingRentSite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.Office))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.SeniorCare))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.ShortTermAccommodation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.SpecialPurpose))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.Store))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IS24RestApi.Search.Common.TradeSite))]
    public partial class RealEstateForList : IS24RestApi.Common.AbstractRealEstateForList
    {
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("companyWideCustomerId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string CompanyWideCustomerId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Veröffentlichungsstatus der Immobilie.</para>
        /// <para xml:lang="en">publication state of the real estate.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("state", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateState State { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Der erste Bildanhang dieser Immobilie</para>
        /// <para xml:lang="en">The first picture attachment of this real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("titlePicture", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public SearchPicture TitlePicture { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundriss als Objektbild vorhanden</para>
        /// <para xml:lang="en">has as attachment a floorplan</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("floorplan", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool FloorplanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Floorplan-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Floorplan property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FloorplanValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundriss als Objektbild vorhanden</para>
        /// <para xml:lang="en">has as attachment a floorplan</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Floorplan
        {
            get
            {
                if (this.FloorplanValueSpecified)
                {
                    return this.FloorplanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FloorplanValue = value.GetValueOrDefault();
                this.FloorplanValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ein Streaming Video ist vorhanden.</para>
        /// <para xml:lang="en">has a streaming video attached.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("streamingVideo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool StreamingVideoValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StreamingVideo-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StreamingVideo property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool StreamingVideoValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ein Streaming Video ist vorhanden.</para>
        /// <para xml:lang="en">has a streaming video attached.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> StreamingVideo
        {
            get
            {
                if (this.StreamingVideoValueSpecified)
                {
                    return this.StreamingVideoValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StreamingVideoValue = value.GetValueOrDefault();
                this.StreamingVideoValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private ListingTypes _listingType = IS24RestApi.Search.Common.ListingTypes.S;
        
        /// <summary>
        /// <para xml:lang="de-DE">Der VIA-Power Listing Typ. (S, M, L oder XL)</para>
        /// <para xml:lang="en">The VIA-Power listing type. (S, M, L or XL)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("listingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ListingTypes ListingType
        {
            get
            {
                return this._listingType;
            }
            set
            {
                this._listingType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Farbe der Titleleiste bei Schaufenster. Default: #343434</para>
        /// <para xml:lang="en">Color of title bar for showcase. Default: #343434</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("showcasePlacementColor", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string ShowcasePlacementColor { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist ein Inserat von einer Privatperson.</para>
        /// <para xml:lang="en">is a property listing by a private person.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("privateOffer", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool PrivateOfferValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PrivateOffer-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrivateOffer property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PrivateOfferValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist ein Inserat von einer Privatperson.</para>
        /// <para xml:lang="en">is a property listing by a private person.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> PrivateOffer
        {
            get
            {
                if (this.PrivateOfferValueSpecified)
                {
                    return this.PrivateOfferValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrivateOfferValue = value.GetValueOrDefault();
                this.PrivateOfferValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Das Logo des Anbieters.</para>
        /// <para xml:lang="en">The logo of a realtor.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("realtorLogo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string RealtorLogo { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Das Logo des Anbieters.</para>
        /// <para xml:lang="en">The logo of a realtor.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("realtorLogoForResultList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Attachment RealtorLogoForResultList { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Weitere Bilder für das Objekt. Die Werte floorplan und titlePicture sind immer false, um die Abwärtskompatibilität zu gewährleisten.</para>
        /// <para xml:lang="en">Additional pictures for the object. The values floorplan and titlePicture are always false to ensure downward compatibility.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("additionalPictures", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Attachments AdditionalPictures { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Ein Bild</para>
    /// <para xml:lang="en">A single picture.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("SearchPicture", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchPicture : IS24RestApi.Common.Attachment
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _floorplan = false;
        
        /// <summary>
        /// <para xml:lang="de-DE">Gibt an ob dieses Bild einen Grundriss darstellt.
        ///                            </para>
        /// <para xml:lang="en">Indicates whether this picture represents a floorplan.
        ///                            </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("floorplan", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Floorplan
        {
            get
            {
                return this._floorplan;
            }
            set
            {
                this._floorplan = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _titlePicture = false;
        
        /// <summary>
        /// <para xml:lang="de-DE">Gibt an, ob dieses Bild das Titelbild dieser Immobilie
        ///                                ist.
        ///                            </para>
        /// <para xml:lang="en">Indicates whether this picture is the titlepicture of this
        ///                                real estate.
        ///                            </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("titlePicture", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool TitlePicture
        {
            get
            {
                return this._titlePicture;
            }
            set
            {
                this._titlePicture = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SearchPictureUrlsUrl> _urls;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("urls", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<SearchPictureUrlsUrl> Urls
        {
            get
            {
                return this._urls;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Urls-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Urls collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UrlsSpecified
        {
            get
            {
                return (this.Urls.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SearchPicture" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SearchPicture" /> class.</para>
        /// </summary>
        public SearchPicture()
        {
            this._urls = new System.Collections.ObjectModel.Collection<SearchPictureUrlsUrl>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("SearchPictureUrls", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchPictureUrls
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SearchPictureUrlsUrl> _url;
        
        /// <summary>
        /// <para xml:lang="de-DE">URL des Bildes.</para>
        /// <para xml:lang="en">URL for the picture.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<SearchPictureUrlsUrl> Url
        {
            get
            {
                return this._url;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SearchPictureUrls" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SearchPictureUrls" /> class.</para>
        /// </summary>
        public SearchPictureUrls()
        {
            this._url = new System.Collections.ObjectModel.Collection<SearchPictureUrlsUrl>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("SearchPictureUrlsUrl", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchPictureUrlsUrl
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildergröße</para>
        /// <para xml:lang="en">picture scale</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("scale", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.PictureScaleType ScaleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Scale-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Scale property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ScaleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bildergröße</para>
        /// <para xml:lang="en">picture scale</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<IS24RestApi.Common.PictureScaleType> Scale
        {
            get
            {
                if (this.ScaleValueSpecified)
                {
                    return this.ScaleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ScaleValue = value.GetValueOrDefault();
                this.ScaleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">URL zum skaliertem Bild</para>
        /// <para xml:lang="en">URL to scaled picture</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
        public string Href { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Enum für die verschiedenen Listing-Typen in der Ergebnisliste.</para>
    /// <para xml:lang="en">Enum for the different listing types on the resultlist.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("ListingTypes", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    public enum ListingTypes
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Listing Typ: S. Das kleinste Listing..</para>
        /// <para xml:lang="en">Listing type: S: The smallest listing.</para>
        /// </summary>
        S,
        
        /// <summary>
        /// <para xml:lang="de-DE">Listing Typ: M. Das zweit kleinste Listing.</para>
        /// <para xml:lang="en">Listing type: M. The second smallest listing.</para>
        /// </summary>
        M,
        
        /// <summary>
        /// <para xml:lang="de-DE">Listing Typ: L. Das zweit größte Listing.</para>
        /// <para xml:lang="en">Listing type: L. The second largest listing.</para>
        /// </summary>
        L,
        
        /// <summary>
        /// <para xml:lang="de-DE">Listing Typ: XL. Das größte Listing.</para>
        /// <para xml:lang="en">Listing type: XL. The largest listing.</para>
        /// </summary>
        XL,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Wohnung-Miete Immobilientyp.</para>
    /// <para xml:lang="en">Elements for the Apartment-Rent realestate type.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("ApartmentRent", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApartmentRent : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms of an apartment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is a information about the energie index available
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyPerformanceCertificateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is a information about the energie index available
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> EnergyPerformanceCertificate
        {
            get
            {
                if (this.EnergyPerformanceCertificateValueSpecified)
                {
                    return this.EnergyPerformanceCertificateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyPerformanceCertificateValue = value.GetValueOrDefault();
                this.EnergyPerformanceCertificateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">has a built-in kitchen</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("builtInKitchen", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BuiltInKitchenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuiltInKitchen-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuiltInKitchen property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BuiltInKitchenValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">has a built-in kitchen</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> BuiltInKitchen
        {
            get
            {
                if (this.BuiltInKitchenValueSpecified)
                {
                    return this.BuiltInKitchenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BuiltInKitchenValue = value.GetValueOrDefault();
                this.BuiltInKitchenValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("balcony", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BalconyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Balcony-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Balcony property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BalconyValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Balcony
        {
            get
            {
                if (this.BalconyValueSpecified)
                {
                    return this.BalconyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalconyValue = value.GetValueOrDefault();
                this.BalconyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnberechtigungsschein</para>
        /// <para xml:lang="en">needs certificate of eligibility</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("certificateOfEligibilityNeeded", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool CertificateOfEligibilityNeededValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CertificateOfEligibilityNeeded-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CertificateOfEligibilityNeeded property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CertificateOfEligibilityNeededValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnberechtigungsschein</para>
        /// <para xml:lang="en">needs certificate of eligibility</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> CertificateOfEligibilityNeeded
        {
            get
            {
                if (this.CertificateOfEligibilityNeededValueSpecified)
                {
                    return this.CertificateOfEligibilityNeededValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CertificateOfEligibilityNeededValue = value.GetValueOrDefault();
                this.CertificateOfEligibilityNeededValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("garden", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool GardenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Garden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Garden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GardenValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Garden
        {
            get
            {
                if (this.GardenValueSpecified)
                {
                    return this.GardenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GardenValue = value.GetValueOrDefault();
                this.GardenValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ein Preis der für Bugets benutzt wird</para>
        /// <para xml:lang="en">A price with a scope concerning a budget</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BudgetPrice CalculatedPrice { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Haus-Miete Immobilientyp.</para>
    /// <para xml:lang="en">Elements for the House-Rent realestate type.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("HouseRent", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HouseRent : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an.
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms of a house</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyPerformanceCertificateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> EnergyPerformanceCertificate
        {
            get
            {
                if (this.EnergyPerformanceCertificateValueSpecified)
                {
                    return this.EnergyPerformanceCertificateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyPerformanceCertificateValue = value.GetValueOrDefault();
                this.EnergyPerformanceCertificateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">has a built-in kitchen</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("builtInKitchen", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BuiltInKitchen { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ein Preis der für Bugets benutzt wird</para>
        /// <para xml:lang="en">A price with a scope concerning a budget</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BudgetPrice CalculatedPrice { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Wohnung-Kauf Immobilientyp.</para>
    /// <para xml:lang="en">Elements for the Apartment-Buy realestate type.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("ApartmentBuy", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApartmentBuy : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms of an apartment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is a information about the energie index available
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyPerformanceCertificateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is a information about the energie index available
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> EnergyPerformanceCertificate
        {
            get
            {
                if (this.EnergyPerformanceCertificateValueSpecified)
                {
                    return this.EnergyPerformanceCertificateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyPerformanceCertificateValue = value.GetValueOrDefault();
                this.EnergyPerformanceCertificateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">has a built-in kitchen</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("builtInKitchen", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BuiltInKitchenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuiltInKitchen-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuiltInKitchen property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BuiltInKitchenValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">has a built-in kitchen</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> BuiltInKitchen
        {
            get
            {
                if (this.BuiltInKitchenValueSpecified)
                {
                    return this.BuiltInKitchenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BuiltInKitchenValue = value.GetValueOrDefault();
                this.BuiltInKitchenValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("balcony", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BalconyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Balcony-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Balcony property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BalconyValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Balcony
        {
            get
            {
                if (this.BalconyValueSpecified)
                {
                    return this.BalconyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalconyValue = value.GetValueOrDefault();
                this.BalconyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnberechtigungsschein</para>
        /// <para xml:lang="en">needs certificate of eligibility</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("certificateOfEligibilityNeeded", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool CertificateOfEligibilityNeededValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CertificateOfEligibilityNeeded-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CertificateOfEligibilityNeeded property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CertificateOfEligibilityNeededValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnberechtigungsschein</para>
        /// <para xml:lang="en">needs certificate of eligibility</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> CertificateOfEligibilityNeeded
        {
            get
            {
                if (this.CertificateOfEligibilityNeededValueSpecified)
                {
                    return this.CertificateOfEligibilityNeededValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CertificateOfEligibilityNeededValue = value.GetValueOrDefault();
                this.CertificateOfEligibilityNeededValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("garden", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool GardenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Garden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Garden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GardenValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Garden
        {
            get
            {
                if (this.GardenValueSpecified)
                {
                    return this.GardenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GardenValue = value.GetValueOrDefault();
                this.GardenValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Haus-Kauf Immobilientyp.</para>
    /// <para xml:lang="en">Elements for the House-Buy realestate type.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("HouseBuy", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HouseBuy : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an.
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms of a house</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyPerformanceCertificateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> EnergyPerformanceCertificate
        {
            get
            {
                if (this.EnergyPerformanceCertificateValueSpecified)
                {
                    return this.EnergyPerformanceCertificateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyPerformanceCertificateValue = value.GetValueOrDefault();
                this.EnergyPerformanceCertificateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Wohnen auf Zeit Immobilientyp.
    ///      </para>
    /// <para xml:lang="en">Elements for the Short term accommodation realestate type.
    ///      </para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("ShortTermAccommodation", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShortTermAccommodation : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Pauschalmiete, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">total rent, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LivingSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LivingSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LivingSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> LivingSpace
        {
            get
            {
                if (this.LivingSpaceValueSpecified)
                {
                    return this.LivingSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LivingSpaceValue = value.GetValueOrDefault();
                this.LivingSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRoomsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NumberOfRoomsValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NumberOfRooms
        {
            get
            {
                if (this.NumberOfRoomsValueSpecified)
                {
                    return this.NumberOfRoomsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberOfRoomsValue = value.GetValueOrDefault();
                this.NumberOfRoomsValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Frühester Mietbeginn</para>
        /// <para xml:lang="en">earliest time to begin the rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("startRentalDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime StartRentalDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("balcony", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BalconyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Balcony-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Balcony property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BalconyValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Balcony
        {
            get
            {
                if (this.BalconyValueSpecified)
                {
                    return this.BalconyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalconyValue = value.GetValueOrDefault();
                this.BalconyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("garden", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool GardenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Garden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Garden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GardenValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Garden
        {
            get
            {
                if (this.GardenValueSpecified)
                {
                    return this.GardenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GardenValue = value.GetValueOrDefault();
                this.GardenValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Raucher oder Nichtraucher</para>
        /// <para xml:lang="en">if you cannot smoke in the rooms</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("nonSmoker", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool NonSmokerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NonSmoker-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonSmoker property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NonSmokerValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Raucher oder Nichtraucher</para>
        /// <para xml:lang="en">if you cannot smoke in the rooms</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> NonSmoker
        {
            get
            {
                if (this.NonSmokerValueSpecified)
                {
                    return this.NonSmokerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NonSmokerValue = value.GetValueOrDefault();
                this.NonSmokerValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Typ von Wohnen auf Zeit (Wohnung, Zimmer oder Haus)
        ///                    </para>
        /// <para xml:lang="en">Type of the short term accomodation (apartment, room or house)
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shortTermAccomodationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ShortTermAccommodationType ShortTermAccomodationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für alle Typenhäuser, wie z.B. Bungalows, Villen oder
    ///				Mehrfamilienhäuser</para>
    /// <para xml:lang="en">Elements for all house types like bungalow, villa or multi-family
    ///				house</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("HouseType", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HouseType : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche</para>
        /// <para xml:lang="en">total area</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalAreaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalAreaValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche</para>
        /// <para xml:lang="en">total area</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> TotalArea
        {
            get
            {
                if (this.TotalAreaValueSpecified)
                {
                    return this.TotalAreaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalAreaValue = value.GetValueOrDefault();
                this.TotalAreaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundfläche</para>
        /// <para xml:lang="en">base area</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("baseArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double BaseAreaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BaseArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BaseArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BaseAreaValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundfläche</para>
        /// <para xml:lang="en">base area</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> BaseArea
        {
            get
            {
                if (this.BaseAreaValueSpecified)
                {
                    return this.BaseAreaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BaseAreaValue = value.GetValueOrDefault();
                this.BaseAreaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRoomsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NumberOfRoomsValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NumberOfRooms
        {
            get
            {
                if (this.NumberOfRoomsValueSpecified)
                {
                    return this.NumberOfRoomsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberOfRoomsValue = value.GetValueOrDefault();
                this.NumberOfRoomsValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bauweise</para>
        /// <para xml:lang="en">construction method</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("constructionMethod", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HouseTypeConstructionMethodType ConstructionMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionMethod-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ConstructionMethodValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bauweise</para>
        /// <para xml:lang="en">construction method</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<IS24RestApi.Common.HouseTypeConstructionMethodType> ConstructionMethod
        {
            get
            {
                if (this.ConstructionMethodValueSpecified)
                {
                    return this.ConstructionMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ConstructionMethodValue = value.GetValueOrDefault();
                this.ConstructionMethodValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Büro Immobilientyp.</para>
    /// <para xml:lang="en">Office realestate type.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("Office", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Office : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> TotalFloorSpace
        {
            get
            {
                if (this.TotalFloorSpaceValueSpecified)
                {
                    return this.TotalFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalFloorSpaceValue = value.GetValueOrDefault();
                this.TotalFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NetFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NetFloorSpace
        {
            get
            {
                if (this.NetFloorSpaceValueSpecified)
                {
                    return this.NetFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetFloorSpaceValue = value.GetValueOrDefault();
                this.NetFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für den Einzelhandel</para>
    /// <para xml:lang="en">Elements for the retail industry</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("Store", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Store : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> TotalFloorSpace
        {
            get
            {
                if (this.TotalFloorSpaceValueSpecified)
                {
                    return this.TotalFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalFloorSpaceValue = value.GetValueOrDefault();
                this.TotalFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NetFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NetFloorSpace
        {
            get
            {
                if (this.NetFloorSpaceValueSpecified)
                {
                    return this.NetFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetFloorSpaceValue = value.GetValueOrDefault();
                this.NetFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Gastronomie-Objekte wie z.B. Hotels, Diskotheken oder
    ///				Restaurants</para>
    /// <para xml:lang="en">Elements for gastronomy services like hotels, clubs or restaurants
    ///      </para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("Gastronomy", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Gastronomy : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> TotalFloorSpace
        {
            get
            {
                if (this.TotalFloorSpaceValueSpecified)
                {
                    return this.TotalFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalFloorSpaceValue = value.GetValueOrDefault();
                this.TotalFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NetFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NetFloorSpace
        {
            get
            {
                if (this.NetFloorSpaceValueSpecified)
                {
                    return this.NetFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetFloorSpaceValue = value.GetValueOrDefault();
                this.NetFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gastronomietyp</para>
        /// <para xml:lang="en">type of gastronomy</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("gastronomyType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.GastronomyType GastronomyType { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Gewerbe-Objekte.</para>
    /// <para xml:lang="en">Elements for common industries.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("Industry", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Industry : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> TotalFloorSpace
        {
            get
            {
                if (this.TotalFloorSpaceValueSpecified)
                {
                    return this.TotalFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalFloorSpaceValue = value.GetValueOrDefault();
                this.TotalFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NetFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NetFloorSpace
        {
            get
            {
                if (this.NetFloorSpaceValueSpecified)
                {
                    return this.NetFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetFloorSpaceValue = value.GetValueOrDefault();
                this.NetFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Spezialgewerbe-Objekte wie z.B. Bauernhof, Werkstatt oder
    ///				Gewerbepark.</para>
    /// <para xml:lang="en">Elements for special industries, like farm, repair shop or commercial
    ///				centre.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("SpecialPurpose", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialPurpose : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> TotalFloorSpace
        {
            get
            {
                if (this.TotalFloorSpaceValueSpecified)
                {
                    return this.TotalFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalFloorSpaceValue = value.GetValueOrDefault();
                this.TotalFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NetFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NetFloorSpace
        {
            get
            {
                if (this.NetFloorSpaceValueSpecified)
                {
                    return this.NetFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetFloorSpaceValue = value.GetValueOrDefault();
                this.NetFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Arten von Spezialgewerbe wie z.B. Bauernhof, Werkstatt oder
        ///                        Gewerbepark
        ///                    </para>
        /// <para xml:lang="en">Types for special industries like farm, repair shop or commercial
        ///                        centre
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("specialPurposeType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.SpecialPurposeType SpecialPurposeType { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Anlageimmobilien-Objekte wie z.B. Einfamilienhäuser,
    ///				Lager oder Wohnanlagen.</para>
    /// <para xml:lang="en">Elements for investment objects, like single family houses, storages
    ///				or housing estates.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("Investment", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Investment : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">vermietbare Fläche</para>
        /// <para xml:lang="en">area for rent</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("industrialArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double IndustrialAreaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IndustrialArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndustrialArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IndustrialAreaValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">vermietbare Fläche</para>
        /// <para xml:lang="en">area for rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> IndustrialArea
        {
            get
            {
                if (this.IndustrialAreaValueSpecified)
                {
                    return this.IndustrialAreaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IndustrialAreaValue = value.GetValueOrDefault();
                this.IndustrialAreaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotAreaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PlotArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PlotArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PlotAreaValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> PlotArea
        {
            get
            {
                if (this.PlotAreaValueSpecified)
                {
                    return this.PlotAreaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PlotAreaValue = value.GetValueOrDefault();
                this.PlotAreaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtflaeche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NetFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtflaeche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NetFloorSpace
        {
            get
            {
                if (this.NetFloorSpaceValueSpecified)
                {
                    return this.NetFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetFloorSpaceValue = value.GetValueOrDefault();
                this.NetFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Arten von Anlageimmobilien-Objekte wie z.B. Einfamilienhäuser,
        ///                        Lager oder Wohnanlagen
        ///                    </para>
        /// <para xml:lang="en">Type for investment objects, like single family houses, storages
        ///                        or housing estates
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("investmentType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.InvestmentType InvestmentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyPerformanceCertificateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> EnergyPerformanceCertificate
        {
            get
            {
                if (this.EnergyPerformanceCertificateValueSpecified)
                {
                    return this.EnergyPerformanceCertificateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyPerformanceCertificateValue = value.GetValueOrDefault();
                this.EnergyPerformanceCertificateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Zwangsversteigerungsobjekte.</para>
    /// <para xml:lang="en">compulsory auction objects.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("CompulsoryAuction", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompulsoryAuction : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Marktwert der Immobilie, die Attribute geben die Art, die Währung
        ///                        und den Intervall an
        ///                    </para>
        /// <para xml:lang="en">Market value of the real estate, the attributes named the type,
        ///                        the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("marketValue", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price MarketValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mindestangebot zur Immobilie, die Attribute geben die Art, die
        ///                        Währung und den Intervall an
        ///                    </para>
        /// <para xml:lang="en">The lowest bid for the real estate, the attributes named the type,
        ///                        the currency and the interval.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lowestBid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price LowestBid { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _recurrenceAppointment = false;
        
        /// <summary>
        /// <para xml:lang="de-DE">Wiederholungstermin (Zweiter Termin)</para>
        /// <para xml:lang="en">Second date for the auction</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Xml.Serialization.XmlElementAttribute("recurrenceAppointment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool RecurrenceAppointment
        {
            get
            {
                return this._recurrenceAppointment;
            }
            set
            {
                this._recurrenceAppointment = value;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Grundstücke zum Kauf (nicht als Anlageobjekt).
    ///      </para>
    /// <para xml:lang="en">Elements for sites to buy (no trading purposes).</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("LivingBuySite", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LivingBuySite : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Grundstücke zur Miete (nicht als Anlageobjekt).
    ///      </para>
    /// <para xml:lang="en">Elements for sites to rent (no trading purposes).</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("LivingRentSite", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LivingRentSite : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Grundstücke als Anlageobjekte.</para>
    /// <para xml:lang="en">Elements for sites for trading purposes.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("TradeSite", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TradeSite : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Garagen zum Kauf.</para>
    /// <para xml:lang="en">Elements for garages to buy.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("GarageBuy", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GarageBuy : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">area, you can use from this real estate typ</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("usableFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double UsableFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsableFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsableFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool UsableFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">area, you can use from this real estate typ</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> UsableFloorSpace
        {
            get
            {
                if (this.UsableFloorSpaceValueSpecified)
                {
                    return this.UsableFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UsableFloorSpaceValue = value.GetValueOrDefault();
                this.UsableFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Garagen zur Miete.</para>
    /// <para xml:lang="en">Elements for garages to rent.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("GarageRent", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GarageRent : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">area, you can use from this real estate typ</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("usableFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double UsableFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsableFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsableFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool UsableFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">area, you can use from this real estate typ</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> UsableFloorSpace
        {
            get
            {
                if (this.UsableFloorSpaceValueSpecified)
                {
                    return this.UsableFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UsableFloorSpaceValue = value.GetValueOrDefault();
                this.UsableFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für WG-Zimmer.</para>
    /// <para xml:lang="en">Elements for shared apartment.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("FlatShareRoom", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlatShareRoom : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmerfläche</para>
        /// <para xml:lang="en">roomSize</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("roomSize", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double RoomSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Frühester Mietbeginn</para>
        /// <para xml:lang="en">earliest time to begin the rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("startRentalDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime StartRentalDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Seniorenwohnen</para>
    /// <para xml:lang="en">A living arrangement in which people with special needs, especially
    ///				seniors with disabilities, reside in a facility that provides help with everyday tasks.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("AssistedLiving", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssistedLiving : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kurzbeschreibung</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">short report about the real estate type</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shortDescription", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortDescription { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haustiere erlaubt</para>
        /// <para xml:lang="en">pets are allowed in the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("petsAllowed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.PetsAllowedType PetsAllowed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Probewohnen</para>
        /// <para xml:lang="en">test living in the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("trialLivingPossible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType TrialLivingPossible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Eigene Kochmöglichkeit</para>
        /// <para xml:lang="en">has a cooking possibilty</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cookingPossibilty", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CookingPossibilty { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart (Miete, Kauf oder Pacht)</para>
        /// <para xml:lang="en">The Type of the marketing (rent, buy or lease)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("marketingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MarketingType MarketingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Seniorenwohnen Typ</para>
        /// <para xml:lang="en">The Type of the facility</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("facilityType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.FacilityType FacilityType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("balcony", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Balcony { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Altenpflegeeinrichtungen.</para>
    /// <para xml:lang="en">Place for old people with medical help.</para>
    /// </summary>
    [System.SerializableAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "0.6.5640.32393")]
    [System.Xml.Serialization.XmlTypeAttribute("SeniorCare", Namespace="http://rest.immobilienscout24.de/schema/search/common/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SeniorCare : IS24RestApi.Search.Common.RealEstateForList
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kurzbeschreibung</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">short report about the real estate type</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shortDescription", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortDescription { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haustiere erlaubt</para>
        /// <para xml:lang="en">pets are allowed in the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("petsAllowed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.PetsAllowedType PetsAllowed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Probewohnen</para>
        /// <para xml:lang="en">test living in the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("trialLivingPossible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType TrialLivingPossible { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<IS24RestApi.Common.CareType> _careTypes;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("careTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("careType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<IS24RestApi.Common.CareType> CareTypes
        {
            get
            {
                return this._careTypes;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CareTypes-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the CareTypes collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CareTypesSpecified
        {
            get
            {
                return (this.CareTypes.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SeniorCare" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SeniorCare" /> class.</para>
        /// </summary>
        public SeniorCare()
        {
            this._careTypes = new System.Collections.ObjectModel.Collection<IS24RestApi.Common.CareType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("balcony", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Balcony { get; set; }
    }
}
