//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.31.0.
namespace IS24RestApi.Offer.ListElement
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("realEstateList", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RealEstateList
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<OfferRealEstateForList> _realEstateElement;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("realEstateElement", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<OfferRealEstateForList> RealEstateElement
        {
            get
            {
                return this._realEstateElement;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RealEstateElement-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the RealEstateElement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RealEstateElementSpecified
        {
            get
            {
                return (this.RealEstateElement.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="RealEstateList" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="RealEstateList" /> class.</para>
        /// </summary>
        public RealEstateList()
        {
            this._realEstateElement = new System.Collections.ObjectModel.Collection<OfferRealEstateForList>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Allgemeine Elemente für alle Immobilienarten.</para>
    /// <para xml:lang="en">General elements for all real estates within the search context.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferRealEstateForList", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferApartmentBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferApartmentRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferAssistedLiving))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferCompulsoryAuction))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferFlatShareRoom))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferGarageBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferGarageRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferGastronomy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferHouseBuy))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferHouseRent))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferHouseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferIndustry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferInvestment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferLivingBuySite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferLivingRentSite))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferOffice))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferSeniorCare))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferShortTermAccommodation))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferSpecialPurpose))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferStore))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfferTradeSite))]
    public partial class OfferRealEstateForList : IS24RestApi.Common.AbstractRealEstateForList, IReference
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Veröffentlichungsstatus der Immobilie.</para>
        /// <para xml:lang="en">publication state of the real estate.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("state", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateState State { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Der erste Bildanhang dieser Immobilie</para>
        /// <para xml:lang="en">The first picture attachment of this real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("titlePicture", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Picture TitlePicture { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundriss als Objektbild vorhanden</para>
        /// <para xml:lang="en">has as attachment a floorplan</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("floorplan", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool FloorplanValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Floorplan-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Floorplan property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FloorplanValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundriss als Objektbild vorhanden</para>
        /// <para xml:lang="en">has as attachment a floorplan</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Floorplan
        {
            get
            {
                if (this.FloorplanValueSpecified)
                {
                    return this.FloorplanValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FloorplanValue = value.GetValueOrDefault();
                this.FloorplanValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<IS24RestApi.Common.PublishChannel> _publishChannels;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("publishChannels", Namespace="http://rest.immobilienscout24.de/schema/common/1.0")]
        [System.Xml.Serialization.XmlArrayItemAttribute("publishChannel", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<IS24RestApi.Common.PublishChannel> PublishChannels
        {
            get
            {
                return this._publishChannels;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishChannels-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PublishChannels collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PublishChannelsSpecified
        {
            get
            {
                return (this.PublishChannels.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="OfferRealEstateForList" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OfferRealEstateForList" /> class.</para>
        /// </summary>
        public OfferRealEstateForList()
        {
            this._publishChannels = new System.Collections.ObjectModel.Collection<IS24RestApi.Common.PublishChannel>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("modification", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime ModificationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Modification-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Modification property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ModificationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Modification
        {
            get
            {
                if (this.ModificationValueSpecified)
                {
                    return this.ModificationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ModificationValue = value.GetValueOrDefault();
                this.ModificationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("creation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime CreationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Creation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Creation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CreationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Creation
        {
            get
            {
                if (this.CreationValueSpecified)
                {
                    return this.CreationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationValue = value.GetValueOrDefault();
                this.CreationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("publishDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime PublishDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublishDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PublishDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> PublishDate
        {
            get
            {
                if (this.PublishDateValueSpecified)
                {
                    return this.PublishDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PublishDateValue = value.GetValueOrDefault();
                this.PublishDateValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Bündelt den xlink, id, label und das Datum der letzten Änderung welche als Referenz von Entitäten benutzt werden.</para>
    /// <para xml:lang="en">Bundles xlink, id, label and last modified date which are used for referencing entities.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    public partial interface IReference
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        string Href
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        System.Nullable<System.DateTime> Modification
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        System.Nullable<System.DateTime> Creation
        {
            get;
            set;
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        System.Nullable<System.DateTime> PublishDate
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Wohnung-Miete Immobilientyp.</para>
    /// <para xml:lang="en">Elements for the Apartment-Rent realestate type.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferApartmentRent", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferApartmentRent : OfferRealEstateForList, IS24RestApi.Common.IBaseApartmentRentGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms of an apartment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is a information about the energie index available
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyPerformanceCertificateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is a information about the energie index available
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> EnergyPerformanceCertificate
        {
            get
            {
                if (this.EnergyPerformanceCertificateValueSpecified)
                {
                    return this.EnergyPerformanceCertificateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyPerformanceCertificateValue = value.GetValueOrDefault();
                this.EnergyPerformanceCertificateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">has a built-in kitchen</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("builtInKitchen", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BuiltInKitchenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuiltInKitchen-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuiltInKitchen property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BuiltInKitchenValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">has a built-in kitchen</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> BuiltInKitchen
        {
            get
            {
                if (this.BuiltInKitchenValueSpecified)
                {
                    return this.BuiltInKitchenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BuiltInKitchenValue = value.GetValueOrDefault();
                this.BuiltInKitchenValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("balcony", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BalconyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Balcony-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Balcony property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BalconyValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Balcony
        {
            get
            {
                if (this.BalconyValueSpecified)
                {
                    return this.BalconyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalconyValue = value.GetValueOrDefault();
                this.BalconyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnberechtigungsschein</para>
        /// <para xml:lang="en">needs certificate of eligibility</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("certificateOfEligibilityNeeded", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool CertificateOfEligibilityNeededValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CertificateOfEligibilityNeeded-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CertificateOfEligibilityNeeded property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CertificateOfEligibilityNeededValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnberechtigungsschein</para>
        /// <para xml:lang="en">needs certificate of eligibility</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> CertificateOfEligibilityNeeded
        {
            get
            {
                if (this.CertificateOfEligibilityNeededValueSpecified)
                {
                    return this.CertificateOfEligibilityNeededValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CertificateOfEligibilityNeededValue = value.GetValueOrDefault();
                this.CertificateOfEligibilityNeededValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("garden", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool GardenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Garden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Garden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GardenValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Garden
        {
            get
            {
                if (this.GardenValueSpecified)
                {
                    return this.GardenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GardenValue = value.GetValueOrDefault();
                this.GardenValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ein Preis der für Bugets benutzt wird</para>
        /// <para xml:lang="en">A price with a scope concerning a budget</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BudgetPrice CalculatedPrice { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Haus-Miete Immobilientyp.</para>
    /// <para xml:lang="en">Elements for the House-Rent realestate type.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferHouseRent", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferHouseRent : OfferRealEstateForList, IS24RestApi.Common.IBaseHouseRentGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an.
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms of a house</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyPerformanceCertificateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> EnergyPerformanceCertificate
        {
            get
            {
                if (this.EnergyPerformanceCertificateValueSpecified)
                {
                    return this.EnergyPerformanceCertificateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyPerformanceCertificateValue = value.GetValueOrDefault();
                this.EnergyPerformanceCertificateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">has a built-in kitchen</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("builtInKitchen", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BuiltInKitchen { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ein Preis der für Bugets benutzt wird</para>
        /// <para xml:lang="en">A price with a scope concerning a budget</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.BudgetPrice CalculatedPrice { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Wohnung-Kauf Immobilientyp.</para>
    /// <para xml:lang="en">Elements for the Apartment-Buy realestate type.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferApartmentBuy", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferApartmentBuy : OfferRealEstateForList, IS24RestApi.Common.IBaseApartmentBuyGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms of an apartment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is a information about the energie index available
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyPerformanceCertificateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is a information about the energie index available
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> EnergyPerformanceCertificate
        {
            get
            {
                if (this.EnergyPerformanceCertificateValueSpecified)
                {
                    return this.EnergyPerformanceCertificateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyPerformanceCertificateValue = value.GetValueOrDefault();
                this.EnergyPerformanceCertificateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">has a built-in kitchen</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("builtInKitchen", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BuiltInKitchenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BuiltInKitchen-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BuiltInKitchen property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BuiltInKitchenValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Einbauküche</para>
        /// <para xml:lang="en">has a built-in kitchen</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> BuiltInKitchen
        {
            get
            {
                if (this.BuiltInKitchenValueSpecified)
                {
                    return this.BuiltInKitchenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BuiltInKitchenValue = value.GetValueOrDefault();
                this.BuiltInKitchenValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("balcony", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BalconyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Balcony-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Balcony property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BalconyValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Balcony
        {
            get
            {
                if (this.BalconyValueSpecified)
                {
                    return this.BalconyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalconyValue = value.GetValueOrDefault();
                this.BalconyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnberechtigungsschein</para>
        /// <para xml:lang="en">needs certificate of eligibility</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("certificateOfEligibilityNeeded", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool CertificateOfEligibilityNeededValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CertificateOfEligibilityNeeded-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CertificateOfEligibilityNeeded property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CertificateOfEligibilityNeededValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnberechtigungsschein</para>
        /// <para xml:lang="en">needs certificate of eligibility</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> CertificateOfEligibilityNeeded
        {
            get
            {
                if (this.CertificateOfEligibilityNeededValueSpecified)
                {
                    return this.CertificateOfEligibilityNeededValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CertificateOfEligibilityNeededValue = value.GetValueOrDefault();
                this.CertificateOfEligibilityNeededValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("garden", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool GardenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Garden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Garden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GardenValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Garden
        {
            get
            {
                if (this.GardenValueSpecified)
                {
                    return this.GardenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GardenValue = value.GetValueOrDefault();
                this.GardenValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aufzug</para>
        /// <para xml:lang="en">has a lift</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("lift", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool LiftValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Lift-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Lift property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LiftValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aufzug</para>
        /// <para xml:lang="en">has a lift</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Lift
        {
            get
            {
                if (this.LiftValueSpecified)
                {
                    return this.LiftValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LiftValue = value.GetValueOrDefault();
                this.LiftValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gäste WC</para>
        /// <para xml:lang="en">has a guest toilet</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("guestToilet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool GuestToiletValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuestToilet-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuestToilet property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GuestToiletValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gäste WC</para>
        /// <para xml:lang="en">has a guest toilet</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> GuestToilet
        {
            get
            {
                if (this.GuestToiletValueSpecified)
                {
                    return this.GuestToiletValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GuestToiletValue = value.GetValueOrDefault();
                this.GuestToiletValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">has a cellar</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("cellar", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool CellarValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cellar-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cellar property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CellarValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">has a cellar</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Cellar
        {
            get
            {
                if (this.CellarValueSpecified)
                {
                    return this.CellarValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CellarValue = value.GetValueOrDefault();
                this.CellarValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">is barrier free</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("isBarrierFree", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool IsBarrierFreeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IsBarrierFree-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsBarrierFree property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IsBarrierFreeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">is barrier free</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> IsBarrierFree
        {
            get
            {
                if (this.IsBarrierFreeValueSpecified)
                {
                    return this.IsBarrierFreeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IsBarrierFreeValue = value.GetValueOrDefault();
                this.IsBarrierFreeValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Haus-Kauf Immobilientyp.</para>
    /// <para xml:lang="en">Elements for the House-Buy realestate type.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferHouseBuy", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferHouseBuy : OfferRealEstateForList, IS24RestApi.Common.IBaseHouseBuyGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an.
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms of a house</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRooms { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyPerformanceCertificateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> EnergyPerformanceCertificate
        {
            get
            {
                if (this.EnergyPerformanceCertificateValueSpecified)
                {
                    return this.EnergyPerformanceCertificateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyPerformanceCertificateValue = value.GetValueOrDefault();
                this.EnergyPerformanceCertificateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gäste WC</para>
        /// <para xml:lang="en">has a guest toilet</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("guestToilet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool GuestToiletValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuestToilet-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuestToilet property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GuestToiletValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gäste WC</para>
        /// <para xml:lang="en">has a guest toilet</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> GuestToilet
        {
            get
            {
                if (this.GuestToiletValueSpecified)
                {
                    return this.GuestToiletValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GuestToiletValue = value.GetValueOrDefault();
                this.GuestToiletValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">has a cellar</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("cellar", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool CellarValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Cellar-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Cellar property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CellarValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Keller</para>
        /// <para xml:lang="en">has a cellar</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Cellar
        {
            get
            {
                if (this.CellarValueSpecified)
                {
                    return this.CellarValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CellarValue = value.GetValueOrDefault();
                this.CellarValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">is barrier free</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("isBarrierFree", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool IsBarrierFreeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IsBarrierFree-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsBarrierFree property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IsBarrierFreeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Barrierefrei</para>
        /// <para xml:lang="en">is barrier free</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> IsBarrierFree
        {
            get
            {
                if (this.IsBarrierFreeValueSpecified)
                {
                    return this.IsBarrierFreeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IsBarrierFreeValue = value.GetValueOrDefault();
                this.IsBarrierFreeValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eigenschaften für den Wohnen auf Zeit Immobilientyp.
    ///            </para>
    /// <para xml:lang="en">Elements for the Short term accommodation realestate type.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferShortTermAccommodation", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferShortTermAccommodation : OfferRealEstateForList, IS24RestApi.Common.IBaseShortTermAccommodationGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Pauschalmiete, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">total rent, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LivingSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LivingSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LivingSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> LivingSpace
        {
            get
            {
                if (this.LivingSpaceValueSpecified)
                {
                    return this.LivingSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LivingSpaceValue = value.GetValueOrDefault();
                this.LivingSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRoomsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NumberOfRoomsValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NumberOfRooms
        {
            get
            {
                if (this.NumberOfRoomsValueSpecified)
                {
                    return this.NumberOfRoomsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberOfRoomsValue = value.GetValueOrDefault();
                this.NumberOfRoomsValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Frühester Mietbeginn</para>
        /// <para xml:lang="en">earliest time to begin the rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("startRentalDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime StartRentalDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("balcony", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool BalconyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Balcony-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Balcony property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BalconyValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Balcony
        {
            get
            {
                if (this.BalconyValueSpecified)
                {
                    return this.BalconyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BalconyValue = value.GetValueOrDefault();
                this.BalconyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("garden", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool GardenValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Garden-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Garden property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GardenValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Garten</para>
        /// <para xml:lang="en">has a garden</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> Garden
        {
            get
            {
                if (this.GardenValueSpecified)
                {
                    return this.GardenValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GardenValue = value.GetValueOrDefault();
                this.GardenValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Raucher oder Nichtraucher</para>
        /// <para xml:lang="en">if you cannot smoke in the rooms</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("nonSmoker", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool NonSmokerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NonSmoker-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NonSmoker property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NonSmokerValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Raucher oder Nichtraucher</para>
        /// <para xml:lang="en">if you cannot smoke in the rooms</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> NonSmoker
        {
            get
            {
                if (this.NonSmokerValueSpecified)
                {
                    return this.NonSmokerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NonSmokerValue = value.GetValueOrDefault();
                this.NonSmokerValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Typ von Wohnen auf Zeit (Wohnung, Zimmer oder Haus)
        ///                    </para>
        /// <para xml:lang="en">Type of the short term accomodation (apartment, room or house)
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shortTermAccomodationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.ShortTermAccommodationType ShortTermAccomodationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für alle Typenhäuser, wie z.B. Bungalows, Villen oder
    ///                Mehrfamilienhäuser</para>
    /// <para xml:lang="en">Elements for all house types like bungalow, villa or multi-family
    ///                house</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferHouseType", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferHouseType : OfferRealEstateForList, IS24RestApi.Common.IBaseHouseTypeGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Wohnfläche</para>
        /// <para xml:lang="en">livingSpace</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("livingSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double LivingSpace { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche</para>
        /// <para xml:lang="en">total area</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalAreaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalAreaValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche</para>
        /// <para xml:lang="en">total area</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> TotalArea
        {
            get
            {
                if (this.TotalAreaValueSpecified)
                {
                    return this.TotalAreaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalAreaValue = value.GetValueOrDefault();
                this.TotalAreaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundfläche</para>
        /// <para xml:lang="en">base area</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("baseArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double BaseAreaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BaseArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the BaseArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool BaseAreaValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundfläche</para>
        /// <para xml:lang="en">base area</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> BaseArea
        {
            get
            {
                if (this.BaseAreaValueSpecified)
                {
                    return this.BaseAreaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.BaseAreaValue = value.GetValueOrDefault();
                this.BaseAreaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("numberOfRooms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NumberOfRoomsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfRooms-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfRooms property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NumberOfRoomsValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmeranzahl</para>
        /// <para xml:lang="en">count of the rooms</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NumberOfRooms
        {
            get
            {
                if (this.NumberOfRoomsValueSpecified)
                {
                    return this.NumberOfRoomsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberOfRoomsValue = value.GetValueOrDefault();
                this.NumberOfRoomsValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bauweise</para>
        /// <para xml:lang="en">construction method</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("constructionMethod", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.HouseTypeConstructionMethodType ConstructionMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConstructionMethod-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ConstructionMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ConstructionMethodValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bauweise</para>
        /// <para xml:lang="en">construction method</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<IS24RestApi.Common.HouseTypeConstructionMethodType> ConstructionMethod
        {
            get
            {
                if (this.ConstructionMethodValueSpecified)
                {
                    return this.ConstructionMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ConstructionMethodValue = value.GetValueOrDefault();
                this.ConstructionMethodValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Büro Immobilientyp.</para>
    /// <para xml:lang="en">Office realestate type.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferOffice", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferOffice : OfferRealEstateForList, IS24RestApi.Common.IBaseOfficeGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> TotalFloorSpace
        {
            get
            {
                if (this.TotalFloorSpaceValueSpecified)
                {
                    return this.TotalFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalFloorSpaceValue = value.GetValueOrDefault();
                this.TotalFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NetFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NetFloorSpace
        {
            get
            {
                if (this.NetFloorSpaceValueSpecified)
                {
                    return this.NetFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetFloorSpaceValue = value.GetValueOrDefault();
                this.NetFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für den Einzelhandel</para>
    /// <para xml:lang="en">Elements for the retail industry</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferStore", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferStore : OfferRealEstateForList, IS24RestApi.Common.IBaseStoreGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> TotalFloorSpace
        {
            get
            {
                if (this.TotalFloorSpaceValueSpecified)
                {
                    return this.TotalFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalFloorSpaceValue = value.GetValueOrDefault();
                this.TotalFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NetFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NetFloorSpace
        {
            get
            {
                if (this.NetFloorSpaceValueSpecified)
                {
                    return this.NetFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetFloorSpaceValue = value.GetValueOrDefault();
                this.NetFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Gastronomie-Objekte wie z.B. Hotels, Diskotheken oder
    ///                Restaurants</para>
    /// <para xml:lang="en">Elements for gastronomy services like hotels, clubs or restaurants
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferGastronomy", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferGastronomy : OfferRealEstateForList, IS24RestApi.Common.IBaseGastronomyGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> TotalFloorSpace
        {
            get
            {
                if (this.TotalFloorSpaceValueSpecified)
                {
                    return this.TotalFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalFloorSpaceValue = value.GetValueOrDefault();
                this.TotalFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NetFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NetFloorSpace
        {
            get
            {
                if (this.NetFloorSpaceValueSpecified)
                {
                    return this.NetFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetFloorSpaceValue = value.GetValueOrDefault();
                this.NetFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gastronomietyp</para>
        /// <para xml:lang="en">type of gastronomy</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("gastronomyType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.GastronomyType GastronomyType { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Gewerbe-Objekte.</para>
    /// <para xml:lang="en">Elements for common industries.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferIndustry", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferIndustry : OfferRealEstateForList, IS24RestApi.Common.IBaseIndustryGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> TotalFloorSpace
        {
            get
            {
                if (this.TotalFloorSpaceValueSpecified)
                {
                    return this.TotalFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalFloorSpaceValue = value.GetValueOrDefault();
                this.TotalFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NetFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NetFloorSpace
        {
            get
            {
                if (this.NetFloorSpaceValueSpecified)
                {
                    return this.NetFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetFloorSpaceValue = value.GetValueOrDefault();
                this.NetFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Spezialgewerbe-Objekte wie z.B. Bauernhof, Werkstatt oder
    ///                Gewerbepark.</para>
    /// <para xml:lang="en">Elements for special industries, like farm, repair shop or commercial
    ///                centre.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferSpecialPurpose", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferSpecialPurpose : OfferRealEstateForList, IS24RestApi.Common.IBaseSpecialPurposeGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart: Gibt an, ob ein Objekt zum Kauf, zur Miete, zur
        ///                        Pacht etc. steht
        ///                    </para>
        /// <para xml:lang="en">The commercialization type (BUY,RENT...)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("commercializationType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CommercializationType CommercializationType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis; die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price; the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Aus dem vom Benutzer eingegebenen 'Preis' berechnete
        ///                        Preis-Alternativdarstellung;
        ///                        die Attribute geben die Art, die Währung und den
        ///                        Intervall an
        ///                    </para>
        /// <para xml:lang="en">alternative price representation calculated from the given 'price';
        ///                        the attributes named the type, the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("calculatedPrice", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price CalculatedPrice { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("totalFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double TotalFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TotalFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TotalFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtfläche der Immobilie</para>
        /// <para xml:lang="en">total area of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> TotalFloorSpace
        {
            get
            {
                if (this.TotalFloorSpaceValueSpecified)
                {
                    return this.TotalFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalFloorSpaceValue = value.GetValueOrDefault();
                this.TotalFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NetFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">(teilbare) Nettofläche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NetFloorSpace
        {
            get
            {
                if (this.NetFloorSpaceValueSpecified)
                {
                    return this.NetFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetFloorSpaceValue = value.GetValueOrDefault();
                this.NetFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Arten von Spezialgewerbe wie z.B. Bauernhof, Werkstatt oder
        ///                        Gewerbepark
        ///                    </para>
        /// <para xml:lang="en">Types for special industries like farm, repair shop or commercial
        ///                        centre
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("specialPurposeType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.SpecialPurposeType SpecialPurposeType { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Anlageimmobilien-Objekte wie z.B. Einfamilienhäuser,
    ///                Lager oder Wohnanlagen.</para>
    /// <para xml:lang="en">Elements for investment objects, like single family houses, storages
    ///                or housing estates.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferInvestment", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferInvestment : OfferRealEstateForList, IS24RestApi.Common.IBaseInvestmentGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">vermietbare Fläche</para>
        /// <para xml:lang="en">area for rent</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("industrialArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double IndustrialAreaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IndustrialArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IndustrialArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IndustrialAreaValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">vermietbare Fläche</para>
        /// <para xml:lang="en">area for rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> IndustrialArea
        {
            get
            {
                if (this.IndustrialAreaValueSpecified)
                {
                    return this.IndustrialAreaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IndustrialAreaValue = value.GetValueOrDefault();
                this.IndustrialAreaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotAreaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PlotArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PlotArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PlotAreaValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> PlotArea
        {
            get
            {
                if (this.PlotAreaValueSpecified)
                {
                    return this.PlotAreaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PlotAreaValue = value.GetValueOrDefault();
                this.PlotAreaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtflaeche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("netFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double NetFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NetFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NetFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gesamtflaeche</para>
        /// <para xml:lang="en">the net floor space of the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> NetFloorSpace
        {
            get
            {
                if (this.NetFloorSpaceValueSpecified)
                {
                    return this.NetFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NetFloorSpaceValue = value.GetValueOrDefault();
                this.NetFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Arten von Anlageimmobilien-Objekte wie z.B. Einfamilienhäuser,
        ///                        Lager oder Wohnanlagen
        ///                    </para>
        /// <para xml:lang="en">Type for investment objects, like single family houses, storages
        ///                        or housing estates
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("investmentType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.InvestmentType InvestmentType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("energyPerformanceCertificate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool EnergyPerformanceCertificateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EnergyPerformanceCertificate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EnergyPerformanceCertificate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EnergyPerformanceCertificateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Ist eine Information über eine Energiekennzahl vorhanden
        ///                    </para>
        /// <para xml:lang="en">is an energy index available</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> EnergyPerformanceCertificate
        {
            get
            {
                if (this.EnergyPerformanceCertificateValueSpecified)
                {
                    return this.EnergyPerformanceCertificateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EnergyPerformanceCertificateValue = value.GetValueOrDefault();
                this.EnergyPerformanceCertificateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Zwangsversteigerungsobjekte.</para>
    /// <para xml:lang="en">compulsory auction objects.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferCompulsoryAuction", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferCompulsoryAuction : OfferRealEstateForList, IS24RestApi.Common.IBaseCompulsoryAuctionGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Marktwert der Immobilie, die Attribute geben die Art, die Währung
        ///                        und den Intervall an
        ///                    </para>
        /// <para xml:lang="en">Market value of the real estate, the attributes named the type,
        ///                        the currency and the interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("marketValue", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price MarketValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Mindestangebot zur Immobilie, die Attribute geben die Art, die
        ///                        Währung und den Intervall an. Das Feld wird berechnet mit 5/10 des Markpreises.
        ///                    </para>
        /// <para xml:lang="en">The lowest bid for the real estate, the attributes named the type,
        ///                        the currency and the interval, that is calculated by 5/10 of the market value.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("lowestBid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price LowestBid { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private bool _recurrenceAppointment = false;
        
        /// <summary>
        /// <para xml:lang="de-DE">Wiederholungstermin (Zweiter Termin)</para>
        /// <para xml:lang="en">Second date for the auction</para>
        /// </summary>
        [System.ComponentModel.DefaultValueAttribute(false)]
        [System.Xml.Serialization.XmlElementAttribute("recurrenceAppointment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool RecurrenceAppointment
        {
            get
            {
                return this._recurrenceAppointment;
            }
            set
            {
                this._recurrenceAppointment = value;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Grundstücke zum Kauf (nicht als Anlageobjekt).
    ///            </para>
    /// <para xml:lang="en">Elements for sites to buy (no trading purposes).</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferLivingBuySite", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferLivingBuySite : OfferRealEstateForList, IS24RestApi.Common.IBaseLivingBuySiteGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Grundstücke zur Miete (nicht als Anlageobjekt).
    ///            </para>
    /// <para xml:lang="en">Elements for sites to rent (no trading purposes).</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferLivingRentSite", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferLivingRentSite : OfferRealEstateForList, IS24RestApi.Common.IBaseLivingRentSiteGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Grundstücke als Anlageobjekte.</para>
    /// <para xml:lang="en">Elements for sites for trading purposes.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferTradeSite", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferTradeSite : OfferRealEstateForList, IS24RestApi.Common.IBaseTradeSiteGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Grundstücksfläche</para>
        /// <para xml:lang="en">the area of the site</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("plotArea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double PlotArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("minDivisible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double MinDivisibleValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MinDivisible-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MinDivisible property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MinDivisibleValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Teilbar ab</para>
        /// <para xml:lang="en">min divisible</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> MinDivisible
        {
            get
            {
                if (this.MinDivisibleValueSpecified)
                {
                    return this.MinDivisibleValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MinDivisibleValue = value.GetValueOrDefault();
                this.MinDivisibleValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Garagen zum Kauf.</para>
    /// <para xml:lang="en">Elements for garages to buy.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferGarageBuy", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferGarageBuy : OfferRealEstateForList, IS24RestApi.Common.IBaseGarageBuyGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">area, you can use from this real estate typ</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("usableFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double UsableFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsableFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsableFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool UsableFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">area, you can use from this real estate typ</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> UsableFloorSpace
        {
            get
            {
                if (this.UsableFloorSpaceValueSpecified)
                {
                    return this.UsableFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UsableFloorSpaceValue = value.GetValueOrDefault();
                this.UsableFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für Garagen zur Miete.</para>
    /// <para xml:lang="en">Elements for garages to rent.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferGarageRent", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferGarageRent : OfferRealEstateForList, IS24RestApi.Common.IBaseGarageRentGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">area, you can use from this real estate typ</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("usableFloorSpace", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double UsableFloorSpaceValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UsableFloorSpace-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the UsableFloorSpace property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool UsableFloorSpaceValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Nutzfläche</para>
        /// <para xml:lang="en">area, you can use from this real estate typ</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<double> UsableFloorSpace
        {
            get
            {
                if (this.UsableFloorSpaceValueSpecified)
                {
                    return this.UsableFloorSpaceValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.UsableFloorSpaceValue = value.GetValueOrDefault();
                this.UsableFloorSpaceValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Elemente für WG-Zimmer.</para>
    /// <para xml:lang="en">Elements for shared apartment.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferFlatShareRoom", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferFlatShareRoom : OfferRealEstateForList, IS24RestApi.Common.IBaseFlatShareRoomGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Preis, die Attribute geben die Art, die Währung und den Intervall
        ///                        an
        ///                    </para>
        /// <para xml:lang="en">Price, the attributes named the type, the currency and the
        ///                        interval
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("price", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Price Price { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Zimmerfläche</para>
        /// <para xml:lang="en">roomSize</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("roomSize", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="double")]
        public double RoomSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Frühester Mietbeginn</para>
        /// <para xml:lang="en">earliest time to begin the rent</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("startRentalDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="date")]
        public System.DateTime StartRentalDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Provisionselemente</para>
        /// <para xml:lang="en">courtage elements</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("courtage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.CourtageInfo Courtage { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Seniorenwohnen</para>
    /// <para xml:lang="en">A living arrangement in which people with special needs, especially
    ///                seniors with disabilities, reside in a facility that provides help with everyday tasks.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferAssistedLiving", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferAssistedLiving : OfferRealEstateForList, IS24RestApi.Common.IBaseAssistedLivingGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kurzbeschreibung</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">short report about the real estate type</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shortDescription", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortDescription { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haustiere erlaubt</para>
        /// <para xml:lang="en">pets are allowed in the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("petsAllowed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.PetsAllowedType PetsAllowed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Probewohnen</para>
        /// <para xml:lang="en">test living in the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("trialLivingPossible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType TrialLivingPossible { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Eigene Kochmöglichkeit</para>
        /// <para xml:lang="en">has a cooking possibilty</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("cookingPossibilty", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType CookingPossibilty { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vermarktungsart (Miete, Kauf oder Pacht)</para>
        /// <para xml:lang="en">The Type of the marketing (rent, buy or lease)</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("marketingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.MarketingType MarketingType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Seniorenwohnen Typ</para>
        /// <para xml:lang="en">The Type of the facility</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("facilityType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.FacilityType FacilityType { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("balcony", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Balcony { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Altenpflegeeinrichtungen.</para>
    /// <para xml:lang="en">Place for old people with medical help.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OfferSeniorCare", Namespace="http://rest.immobilienscout24.de/schema/offer/listelement/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OfferSeniorCare : OfferRealEstateForList, IS24RestApi.Common.IBaseSeniorCareGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Kurzbeschreibung</para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">short report about the real estate type</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shortDescription", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string ShortDescription { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Haustiere erlaubt</para>
        /// <para xml:lang="en">pets are allowed in the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("petsAllowed", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.PetsAllowedType PetsAllowed { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Probewohnen</para>
        /// <para xml:lang="en">test living in the real estate</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("trialLivingPossible", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.YesNotApplicableType TrialLivingPossible { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<IS24RestApi.Common.CareType> _careTypes;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("careTypes", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("careType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<IS24RestApi.Common.CareType> CareTypes
        {
            get
            {
                return this._careTypes;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="OfferSeniorCare" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="OfferSeniorCare" /> class.</para>
        /// </summary>
        public OfferSeniorCare()
        {
            this._careTypes = new System.Collections.ObjectModel.Collection<IS24RestApi.Common.CareType>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Balkon</para>
        /// <para xml:lang="en">has a balcony</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("balcony", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool Balcony { get; set; }
    }
}
