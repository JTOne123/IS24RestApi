//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.31.0.
namespace IS24RestApi.Search.ShortList
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    /// <summary>
    /// <para xml:lang="de-DE">Ein Eintrag des Merkzettels.</para>
    /// <para xml:lang="de-DE">Ein Eintrag des Merkzettels</para>
    /// <para xml:lang="en">An entry of the shortlist.</para>
    /// <para xml:lang="en">An entry of the shortlist</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ShortlistEntry", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("shortlistEntry", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    public partial class ShortlistEntry : IS24RestApi.Common.IReference
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Id der gemerkten Immobilie (beim Update Prozess wird die Id
        ///                        ignoriert).
        ///                    </para>
        /// <para xml:lang="en">The id of the real estate to remember (id will be ignored while
        ///                        update process).
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("realEstateId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long RealEstateId { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Immobilie zu dem Merkzetteleintrag (enthält wenigstens die ID
        ///                        der Immobilie während der Erzeugung eines neuen shortlistentry)
        ///                    </para>
        /// <para xml:lang="en">The real estate of the short list entry. (contains at least the id
        ///                        while creation of this shortlistentry).
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("realEstate", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
        public IS24RestApi.Search.Common.RealEstateForList RealEstate { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Notiz</para>
        /// <para xml:lang="en">Memo</para>
        /// <para xml:lang="en">Maximum length: 2000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(2000)]
        [System.Xml.Serialization.XmlElementAttribute("memo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Memo { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Besichtigungsadresse.</para>
        /// <para xml:lang="en">The address of the real estate visitation.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("address", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Address Address { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Der Besichtigungstermin.</para>
        /// <para xml:lang="en">The date of the real estate inspection.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("dateOfInspection", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime DateOfInspectionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DateOfInspection-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateOfInspection property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DateOfInspectionValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Der Besichtigungstermin.</para>
        /// <para xml:lang="en">The date of the real estate inspection.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> DateOfInspection
        {
            get
            {
                if (this.DateOfInspectionValueSpecified)
                {
                    return this.DateOfInspectionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateOfInspectionValue = value.GetValueOrDefault();
                this.DateOfInspectionValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Umzugsdatum.
        ///                    </para>
        /// <para xml:lang="en">Date when i relocate to this apartment/House.
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("relocationDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime RelocationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RelocationDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the RelocationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool RelocationDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Umzugsdatum.
        ///                    </para>
        /// <para xml:lang="en">Date when i relocate to this apartment/House.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> RelocationDate
        {
            get
            {
                if (this.RelocationDateValueSpecified)
                {
                    return this.RelocationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.RelocationDateValue = value.GetValueOrDefault();
                this.RelocationDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bewerbungsdatum.
        ///                    </para>
        /// <para xml:lang="en">The date when i applied for this apartment.
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("applicationDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime ApplicationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApplicationDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ApplicationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ApplicationDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Bewerbungsdatum.
        ///                    </para>
        /// <para xml:lang="en">The date when i applied for this apartment.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> ApplicationDate
        {
            get
            {
                if (this.ApplicationDateValueSpecified)
                {
                    return this.ApplicationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ApplicationDateValue = value.GetValueOrDefault();
                this.ApplicationDateValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TagName> _tags;
        
        /// <summary>
        /// <para xml:lang="de-DE">'Eine Liste von Tags wie z.B. Anbieter kontaktiert.
        ///                    </para>
        /// <para xml:lang="en">A list of tags like realtor was connected.</para>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("tags", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("tag", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<TagName> Tags
        {
            get
            {
                return this._tags;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tags-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tags collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TagsSpecified
        {
            get
            {
                return (this.Tags.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ShortlistEntry" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ShortlistEntry" /> class.</para>
        /// </summary>
        public ShortlistEntry()
        {
            this._tags = new System.Collections.ObjectModel.Collection<TagName>();
        }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("rating", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShortlistEntryRatingItem Rating { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Erstelldatum des Merkzetteleintrags. Nicht vom Client änderbar.
        ///                    </para>
        /// <para xml:lang="en">The date of shortlist entry creation. Not changable by the client.
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("creationDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime CreationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CreationDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CreationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CreationDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Erstelldatum des Merkzetteleintrags. Nicht vom Client änderbar.
        ///                    </para>
        /// <para xml:lang="en">The date of shortlist entry creation. Not changable by the client.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> CreationDate
        {
            get
            {
                if (this.CreationDateValueSpecified)
                {
                    return this.CreationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationDateValue = value.GetValueOrDefault();
                this.CreationDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letztes Änderungsdatum. Nicht vom Client änderbar.
        ///                    </para>
        /// <para xml:lang="en">The date of the last modification of the shortlist entry. Not
        ///                        changable by the client.
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("lastModificationDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime LastModificationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastModificationDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LastModificationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LastModificationDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letztes Änderungsdatum. Nicht vom Client änderbar.
        ///                    </para>
        /// <para xml:lang="en">The date of the last modification of the shortlist entry. Not
        ///                        changable by the client.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> LastModificationDate
        {
            get
            {
                if (this.LastModificationDateValueSpecified)
                {
                    return this.LastModificationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LastModificationDateValue = value.GetValueOrDefault();
                this.LastModificationDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anhänge des Merkzetteleintrags</para>
        /// <para xml:lang="en">Attachments of short list entry</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("attachments", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.Attachments Attachments { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der Kommentare für Merkzetteleintrag</para>
        /// <para xml:lang="en">Number of chat-Comments for this shared shortlist entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("numberOfComments", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public NumberOfComments NumberOfComments { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lesbarer Name des Elements (wenn vorhanden).</para>
        /// <para xml:lang="en">Human readable name of the entity (if it exists).</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("label", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Label { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("modification", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime ModificationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Modification-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Modification property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ModificationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Modification
        {
            get
            {
                if (this.ModificationValueSpecified)
                {
                    return this.ModificationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ModificationValue = value.GetValueOrDefault();
                this.ModificationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("creation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime CreationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Creation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Creation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CreationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Creation
        {
            get
            {
                if (this.CreationValueSpecified)
                {
                    return this.CreationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationValue = value.GetValueOrDefault();
                this.CreationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("publishDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime PublishDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublishDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PublishDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> PublishDate
        {
            get
            {
                if (this.PublishDateValueSpecified)
                {
                    return this.PublishDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PublishDateValue = value.GetValueOrDefault();
                this.PublishDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("isShortlistEntryOwner", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool IsShortlistEntryOwnerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IsShortlistEntryOwner-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsShortlistEntryOwner property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IsShortlistEntryOwnerValueSpecified { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> IsShortlistEntryOwner
        {
            get
            {
                if (this.IsShortlistEntryOwnerValueSpecified)
                {
                    return this.IsShortlistEntryOwnerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IsShortlistEntryOwnerValue = value.GetValueOrDefault();
                this.IsShortlistEntryOwnerValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Eine Liste von Tags wie z.B. Anbieter kontaktiert.</para>
    /// <para xml:lang="en">A list of tags like realtor was connected.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Tags", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Tags
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<TagName> _tag;
        
        /// <summary>
        /// <para xml:lang="de-DE">Ein spezifischer Tag wie z.B. Anbieter kontaktiert.
        ///                    </para>
        /// <para xml:lang="en">A specific tag like realtor was connected.</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("tag", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<TagName> Tag
        {
            get
            {
                return this._tag;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tag-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Tag collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TagSpecified
        {
            get
            {
                return (this.Tag.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Tags" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Tags" /> class.</para>
        /// </summary>
        public Tags()
        {
            this._tag = new System.Collections.ObjectModel.Collection<TagName>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Ein spezifischer Tag wie z.B. Anbieter kontaktiert.</para>
    /// <para xml:lang="en">A specific tag like realtor was connected.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TagName", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    public enum TagName
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Anbieter kontaktiert.</para>
        /// <para xml:lang="en">Realor was contacted.</para>
        /// </summary>
        REALTOR_CONTACTED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Immobilie besichtigt.</para>
        /// <para xml:lang="en">Real estate was visited.</para>
        /// </summary>
        REAL_ESTATE_VISITED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Beworben.</para>
        /// <para xml:lang="en">Applied for real estate.</para>
        /// </summary>
        APPLIED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Zusage nach der Bewerbung bekommen.</para>
        /// <para xml:lang="en">Got accepted after the application for this particular real estate.</para>
        /// </summary>
        GOT_ACCEPTED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Absage nach der Bewerbung bekommen.</para>
        /// <para xml:lang="en">Got rejected after the application for this particular real estate.</para>
        /// </summary>
        GOT_REJECTED,
        
        /// <summary>
        /// <para xml:lang="de-DE">Meine/Unsere Immobilie.</para>
        /// <para xml:lang="en">Real estate is considered to be accepted as mine/ours.
        ///                    </para>
        /// </summary>
        REAL_ESTATE_ACCEPTED,
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ShortlistEntryRatingItem", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShortlistEntryRatingItem
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Bewertung von der Immobilie vom Nutzer, der diese Immobilie
        ///                                    dem Merkzettel hinzugefügt hat.
        ///                                </para>
        /// <para xml:lang="en">The rating of this real estate from the side of the person who saved
        ///                                    this real estate in their shortlist.
        ///                                </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ownerRating", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShortlistEntryRatingType OwnerRatingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OwnerRating-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OwnerRating property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool OwnerRatingValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Die Bewertung von der Immobilie vom Nutzer, der diese Immobilie
        ///                                    dem Merkzettel hinzugefügt hat.
        ///                                </para>
        /// <para xml:lang="en">The rating of this real estate from the side of the person who saved
        ///                                    this real estate in their shortlist.
        ///                                </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ShortlistEntryRatingType> OwnerRating
        {
            get
            {
                if (this.OwnerRatingValueSpecified)
                {
                    return this.OwnerRatingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OwnerRatingValue = value.GetValueOrDefault();
                this.OwnerRatingValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ShortlistEntryRatingType> _invitedUsersRatingList;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("invitedUsersRatingList", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("rating", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<ShortlistEntryRatingType> InvitedUsersRatingList
        {
            get
            {
                return this._invitedUsersRatingList;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InvitedUsersRatingList-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the InvitedUsersRatingList collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InvitedUsersRatingListSpecified
        {
            get
            {
                return (this.InvitedUsersRatingList.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ShortlistEntryRatingItem" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ShortlistEntryRatingItem" /> class.</para>
        /// </summary>
        public ShortlistEntryRatingItem()
        {
            this._invitedUsersRatingList = new System.Collections.ObjectModel.Collection<ShortlistEntryRatingType>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("shortlistEntryRatingType", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    public enum ShortlistEntryRatingType
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Schlecht.</para>
        /// <para xml:lang="en">Bad.</para>
        /// </summary>
        BAD,
        
        /// <summary>
        /// <para xml:lang="de-DE">Ich weiss nicht.</para>
        /// <para xml:lang="en">Unsure about the rating.</para>
        /// </summary>
        UNSURE,
        
        /// <summary>
        /// <para xml:lang="de-DE">Gut.</para>
        /// <para xml:lang="en">Good.</para>
        /// </summary>
        GOOD,
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Die  Bewertungen der Immobilie von Nutzern, deie zum gemeinsamen
    ///                Merkzettel eingeladen wurde. Beim PUT ist nicht änderbar.
    ///            </para>
    /// <para xml:lang="en">Invited users data including rating of the real estate, that is on the shared
    ///                shortlist. It is not changeable for PUT.
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("invitedUsersRatingList", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvitedUsersRatingList
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ShortlistEntryRatingType> _rating;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("rating", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<ShortlistEntryRatingType> Rating
        {
            get
            {
                return this._rating;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Rating-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Rating collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RatingSpecified
        {
            get
            {
                return (this.Rating.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="InvitedUsersRatingList" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="InvitedUsersRatingList" /> class.</para>
        /// </summary>
        public InvitedUsersRatingList()
        {
            this._rating = new System.Collections.ObjectModel.Collection<ShortlistEntryRatingType>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Anzahl der Kommentare für diesen Merkzetteleintrag (von beiden Beteiligten an der gemeinsamen Suche: gemeinsamer Merkzettel).</para>
    /// <para xml:lang="en">Number of comments for this shortlist entry (from both members of sharedShortlistGroup).</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("numberOfComments", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NumberOfComments
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der ungelesenen Kommentare
        ///                    </para>
        /// <para xml:lang="en">Number of not read comments.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("notRead", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long NotReadValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NotRead-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NotRead property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NotReadValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der ungelesenen Kommentare
        ///                    </para>
        /// <para xml:lang="en">Number of not read comments.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> NotRead
        {
            get
            {
                if (this.NotReadValueSpecified)
                {
                    return this.NotReadValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NotReadValue = value.GetValueOrDefault();
                this.NotReadValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der ungelesenen Kommentare
        ///                    </para>
        /// <para xml:lang="en">Number of not read comments by requester(not requester partner).</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("notReadByRequester", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long NotReadByRequesterValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NotReadByRequester-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NotReadByRequester property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NotReadByRequesterValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der ungelesenen Kommentare
        ///                    </para>
        /// <para xml:lang="en">Number of not read comments by requester(not requester partner).</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> NotReadByRequester
        {
            get
            {
                if (this.NotReadByRequesterValueSpecified)
                {
                    return this.NotReadByRequesterValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NotReadByRequesterValue = value.GetValueOrDefault();
                this.NotReadByRequesterValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der ommentare insgesamt zu diesem Merkzetteleintrag.
        ///                    </para>
        /// <para xml:lang="en">Total number of comments.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("total", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long TotalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Total-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Total property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TotalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Anzahl der ommentare insgesamt zu diesem Merkzetteleintrag.
        ///                    </para>
        /// <para xml:lang="en">Total number of comments.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Total
        {
            get
            {
                if (this.TotalValueSpecified)
                {
                    return this.TotalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TotalValue = value.GetValueOrDefault();
                this.TotalValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ShortlistStrictEntry", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShortlistStrictEntry : IS24RestApi.Common.StrictEntry
    {
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("realEstateId", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long RealEstateId { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("state", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateState State { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("realEstateType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public IS24RestApi.Common.RealEstateType RealEstateType { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("sharedShortlistGroup", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("sharedShortlistGroup", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    public partial class SharedShortlistGroup
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Gibt zurueck, ob der anfragende Nutzer ein Gruppenbesitzer ist.
        ///                    </para>
        /// <para xml:lang="en">Returns boolean value, whether request user is a group owner.
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("isRequesterGroupOwner", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool IsRequesterGroupOwnerValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IsRequesterGroupOwner-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsRequesterGroupOwner property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IsRequesterGroupOwnerValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Gibt zurueck, ob der anfragende Nutzer ein Gruppenbesitzer ist.
        ///                    </para>
        /// <para xml:lang="en">Returns boolean value, whether request user is a group owner.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> IsRequesterGroupOwner
        {
            get
            {
                if (this.IsRequesterGroupOwnerValueSpecified)
                {
                    return this.IsRequesterGroupOwnerValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IsRequesterGroupOwnerValue = value.GetValueOrDefault();
                this.IsRequesterGroupOwnerValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SharedShortlistGroupUser> _invitedUsers;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlArrayAttribute("invitedUsers", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlArrayItemAttribute("sharedShortlistGroupUser", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<SharedShortlistGroupUser> InvitedUsers
        {
            get
            {
                return this._invitedUsers;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InvitedUsers-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the InvitedUsers collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InvitedUsersSpecified
        {
            get
            {
                return (this.InvitedUsers.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SharedShortlistGroup" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SharedShortlistGroup" /> class.</para>
        /// </summary>
        public SharedShortlistGroup()
        {
            this._invitedUsers = new System.Collections.ObjectModel.Collection<SharedShortlistGroupUser>();
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vorname von dem Nutzer, der die Einladung verschickt.
        ///                    </para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">First name of the user, who sends the email invitation.
        ///                    </para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(30)]
        [System.Xml.Serialization.XmlElementAttribute("ownerFirstName", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string OwnerFirstName { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letztes Änderungsdatum (einladung angenommen). Nicht vom Client änderbar.
        ///                    </para>
        /// <para xml:lang="en">The date of the last modification of the shortlist group (invitation accepted). Not
        ///                        changable by the client.
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("invitationAcceptedDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime InvitationAcceptedDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InvitationAcceptedDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InvitationAcceptedDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool InvitationAcceptedDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Letztes Änderungsdatum (einladung angenommen). Nicht vom Client änderbar.
        ///                    </para>
        /// <para xml:lang="en">The date of the last modification of the shortlist group (invitation accepted). Not
        ///                        changable by the client.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> InvitationAcceptedDate
        {
            get
            {
                if (this.InvitationAcceptedDateValueSpecified)
                {
                    return this.InvitationAcceptedDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InvitationAcceptedDateValue = value.GetValueOrDefault();
                this.InvitationAcceptedDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Erstelldatum des Merkzettelgruppe. Nicht vom Client änderbar.
        ///                    </para>
        /// <para xml:lang="en">The date of  group entry creation. Not changable by the client.
        ///                    </para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("invitationDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime InvitationDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InvitationDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the InvitationDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool InvitationDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Erstelldatum des Merkzettelgruppe. Nicht vom Client änderbar.
        ///                    </para>
        /// <para xml:lang="en">The date of  group entry creation. Not changable by the client.
        ///                    </para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> InvitationDate
        {
            get
            {
                if (this.InvitationDateValueSpecified)
                {
                    return this.InvitationDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.InvitationDateValue = value.GetValueOrDefault();
                this.InvitationDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">ID der Gruppe.</para>
        /// <para xml:lang="en">ID of the group.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">ID der Gruppe.</para>
        /// <para xml:lang="en">ID of the group.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("SharedShortlistGroupInvitedUsers", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SharedShortlistGroupInvitedUsers
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SharedShortlistGroupUser> _sharedShortlistGroupUser;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("sharedShortlistGroupUser", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<SharedShortlistGroupUser> SharedShortlistGroupUser
        {
            get
            {
                return this._sharedShortlistGroupUser;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SharedShortlistGroupInvitedUsers" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SharedShortlistGroupInvitedUsers" /> class.</para>
        /// </summary>
        public SharedShortlistGroupInvitedUsers()
        {
            this._sharedShortlistGroupUser = new System.Collections.ObjectModel.Collection<SharedShortlistGroupUser>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("sharedShortlistGroupUser", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SharedShortlistGroupUser
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Eine Email Adresse, an die Die Einladung verschickt wird. Dadurch
        ///                        können die Nutzer gemeinsames Merkzettel teilen.
        ///                    </para>
        /// <para xml:lang="en">An Email to send an invitation to join the group and share the
        ///                        shortlist.
        ///                    </para>
        /// <para xml:lang="en">Maximum length: 150.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(150)]
        [System.Xml.Serialization.XmlElementAttribute("email", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string Email { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Vorname von dem eingeladenen Nutzer.
        ///                    </para>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">First name of the invited user, who confirms the invitation.
        ///                    </para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(30)]
        [System.Xml.Serialization.XmlElementAttribute("invitedUserFirstName", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string InvitedUserFirstName { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Eine Email Adresse, an die Die Einladung verschickt wird. Dadurch
        ///                        können die Nutzer gemeinsames Merkzettel teilen.
        ///                    </para>
        /// <para xml:lang="en">An Email to send an invitation to join the group and share the
        ///                        shortlist.
        ///                    </para>
        /// <para xml:lang="en">Maximum length: 16.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(16)]
        [System.Xml.Serialization.XmlElementAttribute("verifierHash", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string VerifierHash { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("sharedEntryComment", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("sharedEntryComment", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    public partial class SharedEntryComment
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 221.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLengthAttribute(221)]
        [System.Xml.Serialization.XmlElementAttribute("textMessage", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string TextMessage { get; set; }
        
        /// <summary>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("isRequesterComment", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool IsRequesterCommentValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die IsRequesterComment-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the IsRequesterComment property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IsRequesterCommentValueSpecified { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> IsRequesterComment
        {
            get
            {
                if (this.IsRequesterCommentValueSpecified)
                {
                    return this.IsRequesterCommentValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IsRequesterCommentValue = value.GetValueOrDefault();
                this.IsRequesterCommentValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">invalid characters w.r.t. XML will be filtered out on outgoing responses</para>
        /// <para xml:lang="en">in Bezug auf XML ungültige Zeichen werden bei der Ausgabe ausgefiltert</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("searcherFirstName", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string SearcherFirstName { get; set; }
        
        /// <summary>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("date", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime DateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Date-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Date property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DateValueSpecified { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Date
        {
            get
            {
                if (this.DateValueSpecified)
                {
                    return this.DateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateValue = value.GetValueOrDefault();
                this.DateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("readStatus", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
        public bool ReadStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReadStatus-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ReadStatus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ReadStatusValueSpecified { get; set; }
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<bool> ReadStatus
        {
            get
            {
                if (this.ReadStatusValueSpecified)
                {
                    return this.ReadStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ReadStatusValue = value.GetValueOrDefault();
                this.ReadStatusValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Liste aller Merkzettel.</para>
    /// <para xml:lang="en">List of all shortlists.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("shortlists", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("shortlists", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    public partial class Shortlists
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ShortlistsShortlist> _shortlist;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shortlist", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<ShortlistsShortlist> Shortlist
        {
            get
            {
                return this._shortlist;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Shortlist-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Shortlist collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShortlistSpecified
        {
            get
            {
                return (this.Shortlist.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Shortlists" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Shortlists" /> class.</para>
        /// </summary>
        public Shortlists()
        {
            this._shortlist = new System.Collections.ObjectModel.Collection<ShortlistsShortlist>();
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Referenziert einen spezifischen Merkzettel eines
    ///                                Benutzers.
    ///                            </para>
    /// <para xml:lang="en">References a specific shortlist of an user.
    ///                            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ShortlistsShortlist", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShortlistsShortlist : IS24RestApi.Common.IReference
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">Link zum Element.</para>
        /// <para xml:lang="en">Link to the entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("href", Namespace="http://www.w3.org/1999/xlink", DataType="anyURI")]
        public string Href { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long IdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Id-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Id property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool IdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Id des Elements.</para>
        /// <para xml:lang="en">Id of entity entry.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Id
        {
            get
            {
                if (this.IdValueSpecified)
                {
                    return this.IdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.IdValue = value.GetValueOrDefault();
                this.IdValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Lesbarer Name des Elements (wenn vorhanden).</para>
        /// <para xml:lang="en">Human readable name of the entity (if it exists).</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("label", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
        public string Label { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("modification", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime ModificationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Modification-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Modification property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ModificationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Date of the last modification of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Modification
        {
            get
            {
                if (this.ModificationValueSpecified)
                {
                    return this.ModificationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ModificationValue = value.GetValueOrDefault();
                this.ModificationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("creation", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime CreationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Creation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Creation property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CreationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der letzten Veränderung der Entität.</para>
        /// <para xml:lang="en">Creationdate of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Creation
        {
            get
            {
                if (this.CreationValueSpecified)
                {
                    return this.CreationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CreationValue = value.GetValueOrDefault();
                this.CreationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("publishDate", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
        public System.DateTime PublishDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PublishDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PublishDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PublishDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="de-DE">Datum der ersten Einstellung der Entität.</para>
        /// <para xml:lang="en">PublishDate date of this entity.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> PublishDate
        {
            get
            {
                if (this.PublishDateValueSpecified)
                {
                    return this.PublishDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PublishDateValue = value.GetValueOrDefault();
                this.PublishDateValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Merkzettel mit allen Informationen.</para>
    /// <para xml:lang="en">Shortlist with all information.</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("shortlist", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("shortlist", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    public partial class Shortlist
    {
        
        /// <summary>
        /// <para xml:lang="de-DE">ID des Merkzettels.</para>
        /// <para xml:lang="en">ID of the shortlist.</para>
        /// </summary>
        [System.Xml.Serialization.XmlAttributeAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long Id { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="de-DE">Liste aller Einträge des Merkzettels (Hinweis: enthält auch oft genutzte
    ///                Informationen).
    ///            </para>
    /// <para xml:lang="en">List of all entries of the shortlist (Note: includes also often used
    ///                data).
    ///            </para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("shortlistEntries", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("shortlistEntries", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    public partial class ShortlistEntries
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ShortlistEntry> _shortlistEntry;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("shortlistEntry", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<ShortlistEntry> ShortlistEntry
        {
            get
            {
                return this._shortlistEntry;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ShortlistEntry-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ShortlistEntry collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShortlistEntrySpecified
        {
            get
            {
                return (this.ShortlistEntry.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ShortlistEntries" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ShortlistEntries" /> class.</para>
        /// </summary>
        public ShortlistEntries()
        {
            this._shortlistEntry = new System.Collections.ObjectModel.Collection<ShortlistEntry>();
        }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("sharedEntryId", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("sharedEntryId", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    public partial class SharedEntryId
    {
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("id", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
        public long Id { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("shortlistEntryRating", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("shortlistEntryRating", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    public partial class ShortlistEntryRating
    {
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ratingType", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public ShortlistEntryRatingType RatingType { get; set; }
    }
    
    /// <summary>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.31.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("sharedEntryCommentList", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("sharedEntryCommentList", Namespace="http://rest.immobilienscout24.de/schema/search/shortlist/1.0")]
    public partial class SharedEntryCommentList
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<SharedEntryComment> _entry;
        
        /// <summary>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("entry", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public System.Collections.ObjectModel.Collection<SharedEntryComment> Entry
        {
            get
            {
                return this._entry;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="SharedEntryCommentList" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="SharedEntryCommentList" /> class.</para>
        /// </summary>
        public SharedEntryCommentList()
        {
            this._entry = new System.Collections.ObjectModel.Collection<SharedEntryComment>();
        }
    }
}
